fail:     .function 
          .param ptr expr
          .param ptr file
          .param int line
          .end
putchr:   .function 
          .param int chr
          .end
putint:   .function 
          .param int num
          .end
putstr:   .function 
          .param ptr str
          .end
getchr:   .function int 
          .end
getstr:   .function ptr 
          .end
getln:    .function ptr 
          .end
move:     .function 
          .param ptr src
          .param ptr dst
          call putstr("Move a disk from the ")
          call putstr(src)
          call putstr(" to the ")
          call putstr(dst)
          call putstr(".\n")
          return
          .end
towers:   .function 
          .param int ndisks
          .param ptr src
          .param ptr tmp
          .param ptr dst
.if0:     $t0:i = ndisks < 1
          goto .fi0 if not $t0:i
.th0:     return          goto .fi0
.fi0:
          $t1:i = ndisks - 1
          call towers($t1:i,src,dst,tmp)
          call move(src,dst)
          $t2:i = ndisks - 1
          call towers($t2:i,tmp,src,dst)
          return
          .end
main:     .function int 
          .param int argc
          .param ptr argv
          .local int count
.if1:     $t0:i = argc == 2
          $t1:i = not $t0:i
          goto .fi1 if not $t1:i
.th1:     call fail("argc == 2","45-towers-of-hanoi.oc",21)
          goto .fi1
.fi1:
          $t2:i = argv[1 * :i]
          $t3:i = [[0 * :i]
          $t4:i = $t3:i - '0'
          count = $t4:i
.if2:     $t5:i = count > 0
          $t6:i = not $t5:i
          goto .fi2 if not $t6:i
.th2:     call fail("count > 0","45-towers-of-hanoi.oc",23)
          goto .fi2
.fi2:
.if3:     $t7:i = count < 9
          $t8:i = not $t7:i
          goto .fi3 if not $t8:i
.th3:     call fail("count < 9","45-towers-of-hanoi.oc",24)
          goto .fi3
.fi3:
          $t9:i = argv[0 * :i]
          call putstr($t9:i)
          call putstr(": ")
          call putint(count)
          call putstr(" disks\n")
          call towers(count,"source","temporary","distination")
          return 0
          return
          .end

