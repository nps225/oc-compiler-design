fail:     .function 
          .param ptr expr
          .param ptr file
          .param int line
          .end
putchr:   .function 
          .param int chr
          .end
putint:   .function 
          .param int num
          .end
putstr:   .function 
          .param ptr str
          .end
getchr:   .function int 
          .end
getstr:   .function ptr 
          .end
getln:    .function ptr 
          .end
main:     .function int 
          .local int index
          .local int fibonacci
          fibonacci = malloc(30 * sizeof int)
          fibonacci[0 * :i] = 0
          fibonacci[1 * :i] = 1
          index = 2
.wh0:     $t0:i = index < 30
          goto .od0 if not $t0:i
.do0:     $t1:i = index - 1
          $t2:i = fibonacci[$t1:i * :i]
          $t3:i = index - 2
          $t4:i = fibonacci[$t3:i * :i]
          $t5:i = $t2:i + $t4:i
          fibonacci[index * :i] = $t5:i
          $t6:i = index + 1
          index = $t6:i
          goto .wh0
.od0:     index = 0
          call putstr("Numeri di figlio Bonacci\n")
.wh1:     $t7:i = index < 30
          goto .od1 if not $t7:i
.do1:     call putstr("fibonacci[")
          call putint(index)
          call putstr("] = ")
          $t8:i = fibonacci[index * :i]
          call putint($t8:i)
          call putchr('\n')
          $t9:i = index + 1
          index = $t9:i
          goto .wh1
.od1:     return 0
          return
          .end

