Terminals unused in grammar

   ROOT
   IDENT
   NUMBER
   TYPE_ID
   FUNCTION
   TOK_PARAM
   TOK_PROTOTYPE
   BLOCK
   TOK_INDEX
   CALL
   ENDIF
   TOK_IFELSE
   '^'


State 145 conflicts: 1 shift/reduce


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program struct
    3        | program vardecl
    4        | program function
    5        | program error ';'
    6        | program error '}'
    7        | program ';'
    8        | %empty

    9 struct: TOK_STRUCT TOK_IDENT blockS

   10 function: identif '(' ')' ';'
   11         | identif param ')' ';'
   12         | identif '(' ')' block
   13         | identif param ')' block

   14 vardecl: type TOK_IDENT ';'
   15        | type TOK_IDENT '=' express ';'

   16 identif: type TOK_IDENT

   17 param: '(' identif
   18      | param ',' identif

   19 callParam: TOK_IDENT '(' express
   20          | callParam ',' express

   21 call: TOK_IDENT '(' ')'
   22     | callParam ')'

   23 while: TOK_WHILE '(' express ')' select

   24 select: state

   25 ifelse: TOK_IF '(' express ')' select else
   26       | TOK_IF '(' express ')' select

   27 else: TOK_ELSE select

   28 return: TOK_RETURN ';'
   29       | TOK_RETURN express ';'

   30 alloc: TOK_ALLOC TOK_LT TOK_STRING TOK_GT '(' ')'
   31      | TOK_ALLOC TOK_LT TOK_STRING TOK_GT '(' express ')'
   32      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' express ')'
   33      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' ')'
   34      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' ')'
   35      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express ')'

   36 blockS: blockBodyS '}' ';'

   37 blockBodyS: multiState
   38           | '{'

   39 block: blockBody '}'

   40 blockBody: multiState
   41          | '{'

   42 multiState: '{' state
   43           | multiState state

   44 state: vardecl
   45      | block
   46      | while
   47      | ifelse
   48      | return
   49      | express ';'
   50      | ';'

   51 express: binop
   52        | unop
   53        | alloc
   54        | call
   55        | '(' express ')'
   56        | var
   57        | constant

   58 binop: express '=' express
   59      | express TOK_EQ express
   60      | express TOK_NE express
   61      | express TOK_GT express
   62      | express TOK_GE express
   63      | express TOK_LT express
   64      | express TOK_LE express
   65      | express '+' express
   66      | express '-' express
   67      | express '*' express
   68      | express '/' express
   69      | express '%' express

   70 unop: '+' express
   71     | '-' express
   72     | TOK_NOT express

   73 var: TOK_IDENT
   74    | express '[' express ']'
   75    | express TOK_ARROW TOK_IDENT

   76 type: type_id
   77     | TOK_ARRAY TOK_LT type_id TOK_GT

   78 type_id: TOK_INT
   79        | TOK_STRING
   80        | TOK_CHAR
   81        | TOK_VOID
   82        | TOK_PTR TOK_LT TOK_STRUCT TOK_IDENT TOK_GT

   83 constant: TOK_INTCON
   84         | TOK_STRINGCON
   85         | TOK_CHARCON
   86         | TOK_NULLPTR


Terminals, with rules where they appear

$end (0) 0
'%' (37) 69
'(' (40) 10 12 17 19 21 23 25 26 30 31 32 33 34 35 55
')' (41) 10 11 12 13 21 22 23 25 26 30 31 32 33 34 35 55
'*' (42) 67
'+' (43) 65 70
',' (44) 18 20
'-' (45) 66 71
'/' (47) 68
';' (59) 5 7 10 11 14 15 28 29 36 49 50
'=' (61) 15 58
'[' (91) 74
']' (93) 74
'^' (94)
'{' (123) 38 41 42
'}' (125) 6 36 39
error (256) 5 6
ROOT (258)
IDENT (259)
NUMBER (260)
TYPE_ID (261)
FUNCTION (262)
TOK_PARAM (263)
TOK_PROTOTYPE (264)
BLOCK (265)
TOK_NULLPTR (266) 86
TOK_INDEX (267)
CALL (268)
ENDIF (269)
TOK_IFELSE (270)
TOK_GE (271) 62
TOK_LE (272) 64
TOK_EQ (273) 59
TOK_NE (274) 60
TOK_GT (275) 30 31 32 33 34 35 61 77 82
TOK_LT (276) 30 31 32 33 34 35 63 77 82
TOK_IF (277) 25 26
TOK_ELSE (278) 27
TOK_STRUCT (279) 9 32 33 82
TOK_ARRAY (280) 34 35 77
TOK_NOT (281) 72
TOK_ALLOC (282) 30 31 32 33 34 35
TOK_PTR (283) 82
TOK_ARROW (284) 75
TOK_WHILE (285) 23
TOK_VOID (286) 81
TOK_RETURN (287) 28 29
TOK_INT (288) 78
TOK_CHAR (289) 80
TOK_STRING (290) 30 31 79
TOK_CHARCON (291) 85
TOK_STRINGCON (292) 84
TOK_INTCON (293) 83
TOK_IDENT (294) 9 14 15 16 19 21 32 33 73 75 82
POS (295)
NEG (296)


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
start (58)
    on left: 1, on right: 0
program (59)
    on left: 2 3 4 5 6 7 8, on right: 1 2 3 4 5 6 7
struct (60)
    on left: 9, on right: 2
function (61)
    on left: 10 11 12 13, on right: 4
vardecl (62)
    on left: 14 15, on right: 3 44
identif (63)
    on left: 16, on right: 10 11 12 13 17 18
param (64)
    on left: 17 18, on right: 11 13 18
callParam (65)
    on left: 19 20, on right: 20 22
call (66)
    on left: 21 22, on right: 54
while (67)
    on left: 23, on right: 46
select (68)
    on left: 24, on right: 23 25 26 27
ifelse (69)
    on left: 25 26, on right: 47
else (70)
    on left: 27, on right: 25
return (71)
    on left: 28 29, on right: 48
alloc (72)
    on left: 30 31 32 33 34 35, on right: 53
blockS (73)
    on left: 36, on right: 9
blockBodyS (74)
    on left: 37 38, on right: 36
block (75)
    on left: 39, on right: 12 13 45
blockBody (76)
    on left: 40 41, on right: 39
multiState (77)
    on left: 42 43, on right: 37 40 43
state (78)
    on left: 44 45 46 47 48 49 50, on right: 24 42 43
express (79)
    on left: 51 52 53 54 55 56 57, on right: 15 19 20 23 25 26 29 31
    32 35 49 55 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 74 75
binop (80)
    on left: 58 59 60 61 62 63 64 65 66 67 68 69, on right: 51
unop (81)
    on left: 70 71 72, on right: 52
var (82)
    on left: 73 74 75, on right: 56
type (83)
    on left: 76 77, on right: 14 15 16 34 35
type_id (84)
    on left: 78 79 80 81 82, on right: 76 77
constant (85)
    on left: 83 84 85 86, on right: 57


State 0

    0 $accept: . start $end

    $default  reduce using rule 8 (program)

    start    go to state 1
    program  go to state 2


State 1

    0 $accept: start . $end

    $end  shift, and go to state 3


State 2

    1 start: program .
    2 program: program . struct
    3        | program . vardecl
    4        | program . function
    5        | program . error ';'
    6        | program . error '}'
    7        | program . ';'

    error       shift, and go to state 4
    TOK_STRUCT  shift, and go to state 5
    TOK_ARRAY   shift, and go to state 6
    TOK_PTR     shift, and go to state 7
    TOK_VOID    shift, and go to state 8
    TOK_INT     shift, and go to state 9
    TOK_CHAR    shift, and go to state 10
    TOK_STRING  shift, and go to state 11
    ';'         shift, and go to state 12

    $end  reduce using rule 1 (start)

    struct    go to state 13
    function  go to state 14
    vardecl   go to state 15
    identif   go to state 16
    type      go to state 17
    type_id   go to state 18


State 3

    0 $accept: start $end .

    $default  accept


State 4

    5 program: program error . ';'
    6        | program error . '}'

    ';'  shift, and go to state 19
    '}'  shift, and go to state 20


State 5

    9 struct: TOK_STRUCT . TOK_IDENT blockS

    TOK_IDENT  shift, and go to state 21


State 6

   77 type: TOK_ARRAY . TOK_LT type_id TOK_GT

    TOK_LT  shift, and go to state 22


State 7

   82 type_id: TOK_PTR . TOK_LT TOK_STRUCT TOK_IDENT TOK_GT

    TOK_LT  shift, and go to state 23


State 8

   81 type_id: TOK_VOID .

    $default  reduce using rule 81 (type_id)


State 9

   78 type_id: TOK_INT .

    $default  reduce using rule 78 (type_id)


State 10

   80 type_id: TOK_CHAR .

    $default  reduce using rule 80 (type_id)


State 11

   79 type_id: TOK_STRING .

    $default  reduce using rule 79 (type_id)


State 12

    7 program: program ';' .

    $default  reduce using rule 7 (program)


State 13

    2 program: program struct .

    $default  reduce using rule 2 (program)


State 14

    4 program: program function .

    $default  reduce using rule 4 (program)


State 15

    3 program: program vardecl .

    $default  reduce using rule 3 (program)


State 16

   10 function: identif . '(' ')' ';'
   11         | identif . param ')' ';'
   12         | identif . '(' ')' block
   13         | identif . param ')' block

    '('  shift, and go to state 24

    param  go to state 25


State 17

   14 vardecl: type . TOK_IDENT ';'
   15        | type . TOK_IDENT '=' express ';'
   16 identif: type . TOK_IDENT

    TOK_IDENT  shift, and go to state 26


State 18

   76 type: type_id .

    $default  reduce using rule 76 (type)


State 19

    5 program: program error ';' .

    $default  reduce using rule 5 (program)


State 20

    6 program: program error '}' .

    $default  reduce using rule 6 (program)


State 21

    9 struct: TOK_STRUCT TOK_IDENT . blockS

    '{'  shift, and go to state 27

    blockS      go to state 28
    blockBodyS  go to state 29
    multiState  go to state 30


State 22

   77 type: TOK_ARRAY TOK_LT . type_id TOK_GT

    TOK_PTR     shift, and go to state 7
    TOK_VOID    shift, and go to state 8
    TOK_INT     shift, and go to state 9
    TOK_CHAR    shift, and go to state 10
    TOK_STRING  shift, and go to state 11

    type_id  go to state 31


State 23

   82 type_id: TOK_PTR TOK_LT . TOK_STRUCT TOK_IDENT TOK_GT

    TOK_STRUCT  shift, and go to state 32


State 24

   10 function: identif '(' . ')' ';'
   12         | identif '(' . ')' block
   17 param: '(' . identif

    TOK_ARRAY   shift, and go to state 6
    TOK_PTR     shift, and go to state 7
    TOK_VOID    shift, and go to state 8
    TOK_INT     shift, and go to state 9
    TOK_CHAR    shift, and go to state 10
    TOK_STRING  shift, and go to state 11
    ')'         shift, and go to state 33

    identif  go to state 34
    type     go to state 35
    type_id  go to state 18


State 25

   11 function: identif param . ')' ';'
   13         | identif param . ')' block
   18 param: param . ',' identif

    ')'  shift, and go to state 36
    ','  shift, and go to state 37


State 26

   14 vardecl: type TOK_IDENT . ';'
   15        | type TOK_IDENT . '=' express ';'
   16 identif: type TOK_IDENT .

    '='  shift, and go to state 38
    ';'  shift, and go to state 39

    $default  reduce using rule 16 (identif)


State 27

   38 blockBodyS: '{' .
   42 multiState: '{' . state

    TOK_NULLPTR    shift, and go to state 40
    TOK_IF         shift, and go to state 41
    TOK_ARRAY      shift, and go to state 6
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_PTR        shift, and go to state 7
    TOK_WHILE      shift, and go to state 44
    TOK_VOID       shift, and go to state 8
    TOK_RETURN     shift, and go to state 45
    TOK_INT        shift, and go to state 9
    TOK_CHAR       shift, and go to state 10
    TOK_STRING     shift, and go to state 11
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52
    ';'            shift, and go to state 53
    '{'            shift, and go to state 54

    $default  reduce using rule 38 (blockBodyS)

    vardecl     go to state 55
    callParam   go to state 56
    call        go to state 57
    while       go to state 58
    ifelse      go to state 59
    return      go to state 60
    alloc       go to state 61
    block       go to state 62
    blockBody   go to state 63
    multiState  go to state 64
    state       go to state 65
    express     go to state 66
    binop       go to state 67
    unop        go to state 68
    var         go to state 69
    type        go to state 70
    type_id     go to state 18
    constant    go to state 71


State 28

    9 struct: TOK_STRUCT TOK_IDENT blockS .

    $default  reduce using rule 9 (struct)


State 29

   36 blockS: blockBodyS . '}' ';'

    '}'  shift, and go to state 72


State 30

   37 blockBodyS: multiState .
   43 multiState: multiState . state

    TOK_NULLPTR    shift, and go to state 40
    TOK_IF         shift, and go to state 41
    TOK_ARRAY      shift, and go to state 6
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_PTR        shift, and go to state 7
    TOK_WHILE      shift, and go to state 44
    TOK_VOID       shift, and go to state 8
    TOK_RETURN     shift, and go to state 45
    TOK_INT        shift, and go to state 9
    TOK_CHAR       shift, and go to state 10
    TOK_STRING     shift, and go to state 11
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52
    ';'            shift, and go to state 53
    '{'            shift, and go to state 54

    $default  reduce using rule 37 (blockBodyS)

    vardecl     go to state 55
    callParam   go to state 56
    call        go to state 57
    while       go to state 58
    ifelse      go to state 59
    return      go to state 60
    alloc       go to state 61
    block       go to state 62
    blockBody   go to state 63
    multiState  go to state 64
    state       go to state 73
    express     go to state 66
    binop       go to state 67
    unop        go to state 68
    var         go to state 69
    type        go to state 70
    type_id     go to state 18
    constant    go to state 71


State 31

   77 type: TOK_ARRAY TOK_LT type_id . TOK_GT

    TOK_GT  shift, and go to state 74


State 32

   82 type_id: TOK_PTR TOK_LT TOK_STRUCT . TOK_IDENT TOK_GT

    TOK_IDENT  shift, and go to state 75


State 33

   10 function: identif '(' ')' . ';'
   12         | identif '(' ')' . block

    ';'  shift, and go to state 76
    '{'  shift, and go to state 54

    block       go to state 77
    blockBody   go to state 63
    multiState  go to state 64


State 34

   17 param: '(' identif .

    $default  reduce using rule 17 (param)


State 35

   16 identif: type . TOK_IDENT

    TOK_IDENT  shift, and go to state 78


State 36

   11 function: identif param ')' . ';'
   13         | identif param ')' . block

    ';'  shift, and go to state 79
    '{'  shift, and go to state 54

    block       go to state 80
    blockBody   go to state 63
    multiState  go to state 64


State 37

   18 param: param ',' . identif

    TOK_ARRAY   shift, and go to state 6
    TOK_PTR     shift, and go to state 7
    TOK_VOID    shift, and go to state 8
    TOK_INT     shift, and go to state 9
    TOK_CHAR    shift, and go to state 10
    TOK_STRING  shift, and go to state 11

    identif  go to state 81
    type     go to state 35
    type_id  go to state 18


State 38

   15 vardecl: type TOK_IDENT '=' . express ';'

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 82
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 39

   14 vardecl: type TOK_IDENT ';' .

    $default  reduce using rule 14 (vardecl)


State 40

   86 constant: TOK_NULLPTR .

    $default  reduce using rule 86 (constant)


State 41

   25 ifelse: TOK_IF . '(' express ')' select else
   26       | TOK_IF . '(' express ')' select

    '('  shift, and go to state 83


State 42

   72 unop: TOK_NOT . express

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 84
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 43

   30 alloc: TOK_ALLOC . TOK_LT TOK_STRING TOK_GT '(' ')'
   31      | TOK_ALLOC . TOK_LT TOK_STRING TOK_GT '(' express ')'
   32      | TOK_ALLOC . TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' express ')'
   33      | TOK_ALLOC . TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' ')'
   34      | TOK_ALLOC . TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' ')'
   35      | TOK_ALLOC . TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express ')'

    TOK_LT  shift, and go to state 85


State 44

   23 while: TOK_WHILE . '(' express ')' select

    '('  shift, and go to state 86


State 45

   28 return: TOK_RETURN . ';'
   29       | TOK_RETURN . express ';'

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52
    ';'            shift, and go to state 87

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 88
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 46

   85 constant: TOK_CHARCON .

    $default  reduce using rule 85 (constant)


State 47

   84 constant: TOK_STRINGCON .

    $default  reduce using rule 84 (constant)


State 48

   83 constant: TOK_INTCON .

    $default  reduce using rule 83 (constant)


State 49

   19 callParam: TOK_IDENT . '(' express
   21 call: TOK_IDENT . '(' ')'
   73 var: TOK_IDENT .

    '('  shift, and go to state 89

    $default  reduce using rule 73 (var)


State 50

   70 unop: '+' . express

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 90
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 51

   71 unop: '-' . express

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 91
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 52

   55 express: '(' . express ')'

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 92
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 53

   50 state: ';' .

    $default  reduce using rule 50 (state)


State 54

   41 blockBody: '{' .
   42 multiState: '{' . state

    TOK_NULLPTR    shift, and go to state 40
    TOK_IF         shift, and go to state 41
    TOK_ARRAY      shift, and go to state 6
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_PTR        shift, and go to state 7
    TOK_WHILE      shift, and go to state 44
    TOK_VOID       shift, and go to state 8
    TOK_RETURN     shift, and go to state 45
    TOK_INT        shift, and go to state 9
    TOK_CHAR       shift, and go to state 10
    TOK_STRING     shift, and go to state 11
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52
    ';'            shift, and go to state 53
    '{'            shift, and go to state 54

    $default  reduce using rule 41 (blockBody)

    vardecl     go to state 55
    callParam   go to state 56
    call        go to state 57
    while       go to state 58
    ifelse      go to state 59
    return      go to state 60
    alloc       go to state 61
    block       go to state 62
    blockBody   go to state 63
    multiState  go to state 64
    state       go to state 65
    express     go to state 66
    binop       go to state 67
    unop        go to state 68
    var         go to state 69
    type        go to state 70
    type_id     go to state 18
    constant    go to state 71


State 55

   44 state: vardecl .

    $default  reduce using rule 44 (state)


State 56

   20 callParam: callParam . ',' express
   22 call: callParam . ')'

    ')'  shift, and go to state 93
    ','  shift, and go to state 94


State 57

   54 express: call .

    $default  reduce using rule 54 (express)


State 58

   46 state: while .

    $default  reduce using rule 46 (state)


State 59

   47 state: ifelse .

    $default  reduce using rule 47 (state)


State 60

   48 state: return .

    $default  reduce using rule 48 (state)


State 61

   53 express: alloc .

    $default  reduce using rule 53 (express)


State 62

   45 state: block .

    $default  reduce using rule 45 (state)


State 63

   39 block: blockBody . '}'

    '}'  shift, and go to state 95


State 64

   40 blockBody: multiState .
   43 multiState: multiState . state

    TOK_NULLPTR    shift, and go to state 40
    TOK_IF         shift, and go to state 41
    TOK_ARRAY      shift, and go to state 6
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_PTR        shift, and go to state 7
    TOK_WHILE      shift, and go to state 44
    TOK_VOID       shift, and go to state 8
    TOK_RETURN     shift, and go to state 45
    TOK_INT        shift, and go to state 9
    TOK_CHAR       shift, and go to state 10
    TOK_STRING     shift, and go to state 11
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52
    ';'            shift, and go to state 53
    '{'            shift, and go to state 54

    $default  reduce using rule 40 (blockBody)

    vardecl     go to state 55
    callParam   go to state 56
    call        go to state 57
    while       go to state 58
    ifelse      go to state 59
    return      go to state 60
    alloc       go to state 61
    block       go to state 62
    blockBody   go to state 63
    multiState  go to state 64
    state       go to state 73
    express     go to state 66
    binop       go to state 67
    unop        go to state 68
    var         go to state 69
    type        go to state 70
    type_id     go to state 18
    constant    go to state 71


State 65

   42 multiState: '{' state .

    $default  reduce using rule 42 (multiState)


State 66

   49 state: express . ';'
   58 binop: express . '=' express
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   65      | express . '+' express
   66      | express . '-' express
   67      | express . '*' express
   68      | express . '/' express
   69      | express . '%' express
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 96
    TOK_LE     shift, and go to state 97
    TOK_EQ     shift, and go to state 98
    TOK_NE     shift, and go to state 99
    TOK_GT     shift, and go to state 100
    TOK_LT     shift, and go to state 101
    TOK_ARROW  shift, and go to state 102
    '='        shift, and go to state 103
    '+'        shift, and go to state 104
    '-'        shift, and go to state 105
    '*'        shift, and go to state 106
    '/'        shift, and go to state 107
    '%'        shift, and go to state 108
    '['        shift, and go to state 109
    ';'        shift, and go to state 110


State 67

   51 express: binop .

    $default  reduce using rule 51 (express)


State 68

   52 express: unop .

    $default  reduce using rule 52 (express)


State 69

   56 express: var .

    $default  reduce using rule 56 (express)


State 70

   14 vardecl: type . TOK_IDENT ';'
   15        | type . TOK_IDENT '=' express ';'

    TOK_IDENT  shift, and go to state 111


State 71

   57 express: constant .

    $default  reduce using rule 57 (express)


State 72

   36 blockS: blockBodyS '}' . ';'

    ';'  shift, and go to state 112


State 73

   43 multiState: multiState state .

    $default  reduce using rule 43 (multiState)


State 74

   77 type: TOK_ARRAY TOK_LT type_id TOK_GT .

    $default  reduce using rule 77 (type)


State 75

   82 type_id: TOK_PTR TOK_LT TOK_STRUCT TOK_IDENT . TOK_GT

    TOK_GT  shift, and go to state 113


State 76

   10 function: identif '(' ')' ';' .

    $default  reduce using rule 10 (function)


State 77

   12 function: identif '(' ')' block .

    $default  reduce using rule 12 (function)


State 78

   16 identif: type TOK_IDENT .

    $default  reduce using rule 16 (identif)


State 79

   11 function: identif param ')' ';' .

    $default  reduce using rule 11 (function)


State 80

   13 function: identif param ')' block .

    $default  reduce using rule 13 (function)


State 81

   18 param: param ',' identif .

    $default  reduce using rule 18 (param)


State 82

   15 vardecl: type TOK_IDENT '=' express . ';'
   58 binop: express . '=' express
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   65      | express . '+' express
   66      | express . '-' express
   67      | express . '*' express
   68      | express . '/' express
   69      | express . '%' express
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 96
    TOK_LE     shift, and go to state 97
    TOK_EQ     shift, and go to state 98
    TOK_NE     shift, and go to state 99
    TOK_GT     shift, and go to state 100
    TOK_LT     shift, and go to state 101
    TOK_ARROW  shift, and go to state 102
    '='        shift, and go to state 103
    '+'        shift, and go to state 104
    '-'        shift, and go to state 105
    '*'        shift, and go to state 106
    '/'        shift, and go to state 107
    '%'        shift, and go to state 108
    '['        shift, and go to state 109
    ';'        shift, and go to state 114


State 83

   25 ifelse: TOK_IF '(' . express ')' select else
   26       | TOK_IF '(' . express ')' select

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 115
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 84

   58 binop: express . '=' express
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   65      | express . '+' express
   66      | express . '-' express
   67      | express . '*' express
   68      | express . '/' express
   69      | express . '%' express
   72 unop: TOK_NOT express .
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 102
    '['        shift, and go to state 109

    $default  reduce using rule 72 (unop)


State 85

   30 alloc: TOK_ALLOC TOK_LT . TOK_STRING TOK_GT '(' ')'
   31      | TOK_ALLOC TOK_LT . TOK_STRING TOK_GT '(' express ')'
   32      | TOK_ALLOC TOK_LT . TOK_STRUCT TOK_IDENT TOK_GT '(' express ')'
   33      | TOK_ALLOC TOK_LT . TOK_STRUCT TOK_IDENT TOK_GT '(' ')'
   34      | TOK_ALLOC TOK_LT . TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' ')'
   35      | TOK_ALLOC TOK_LT . TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express ')'

    TOK_STRUCT  shift, and go to state 116
    TOK_ARRAY   shift, and go to state 117
    TOK_STRING  shift, and go to state 118


State 86

   23 while: TOK_WHILE '(' . express ')' select

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 119
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 87

   28 return: TOK_RETURN ';' .

    $default  reduce using rule 28 (return)


State 88

   29 return: TOK_RETURN express . ';'
   58 binop: express . '=' express
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   65      | express . '+' express
   66      | express . '-' express
   67      | express . '*' express
   68      | express . '/' express
   69      | express . '%' express
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 96
    TOK_LE     shift, and go to state 97
    TOK_EQ     shift, and go to state 98
    TOK_NE     shift, and go to state 99
    TOK_GT     shift, and go to state 100
    TOK_LT     shift, and go to state 101
    TOK_ARROW  shift, and go to state 102
    '='        shift, and go to state 103
    '+'        shift, and go to state 104
    '-'        shift, and go to state 105
    '*'        shift, and go to state 106
    '/'        shift, and go to state 107
    '%'        shift, and go to state 108
    '['        shift, and go to state 109
    ';'        shift, and go to state 120


State 89

   19 callParam: TOK_IDENT '(' . express
   21 call: TOK_IDENT '(' . ')'

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52
    ')'            shift, and go to state 121

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 122
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 90

   58 binop: express . '=' express
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   65      | express . '+' express
   66      | express . '-' express
   67      | express . '*' express
   68      | express . '/' express
   69      | express . '%' express
   70 unop: '+' express .
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 102
    '['        shift, and go to state 109

    $default  reduce using rule 70 (unop)


State 91

   58 binop: express . '=' express
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   65      | express . '+' express
   66      | express . '-' express
   67      | express . '*' express
   68      | express . '/' express
   69      | express . '%' express
   71 unop: '-' express .
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 102
    '['        shift, and go to state 109

    $default  reduce using rule 71 (unop)


State 92

   55 express: '(' express . ')'
   58 binop: express . '=' express
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   65      | express . '+' express
   66      | express . '-' express
   67      | express . '*' express
   68      | express . '/' express
   69      | express . '%' express
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 96
    TOK_LE     shift, and go to state 97
    TOK_EQ     shift, and go to state 98
    TOK_NE     shift, and go to state 99
    TOK_GT     shift, and go to state 100
    TOK_LT     shift, and go to state 101
    TOK_ARROW  shift, and go to state 102
    '='        shift, and go to state 103
    '+'        shift, and go to state 104
    '-'        shift, and go to state 105
    '*'        shift, and go to state 106
    '/'        shift, and go to state 107
    '%'        shift, and go to state 108
    '['        shift, and go to state 109
    ')'        shift, and go to state 123


State 93

   22 call: callParam ')' .

    $default  reduce using rule 22 (call)


State 94

   20 callParam: callParam ',' . express

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 124
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 95

   39 block: blockBody '}' .

    $default  reduce using rule 39 (block)


State 96

   62 binop: express TOK_GE . express

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 125
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 97

   64 binop: express TOK_LE . express

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 126
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 98

   59 binop: express TOK_EQ . express

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 127
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 99

   60 binop: express TOK_NE . express

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 128
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 100

   61 binop: express TOK_GT . express

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 129
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 101

   63 binop: express TOK_LT . express

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 130
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 102

   75 var: express TOK_ARROW . TOK_IDENT

    TOK_IDENT  shift, and go to state 131


State 103

   58 binop: express '=' . express

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 132
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 104

   65 binop: express '+' . express

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 133
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 105

   66 binop: express '-' . express

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 134
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 106

   67 binop: express '*' . express

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 135
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 107

   68 binop: express '/' . express

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 136
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 108

   69 binop: express '%' . express

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 137
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 109

   74 var: express '[' . express ']'

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 138
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 110

   49 state: express ';' .

    $default  reduce using rule 49 (state)


State 111

   14 vardecl: type TOK_IDENT . ';'
   15        | type TOK_IDENT . '=' express ';'

    '='  shift, and go to state 38
    ';'  shift, and go to state 39


State 112

   36 blockS: blockBodyS '}' ';' .

    $default  reduce using rule 36 (blockS)


State 113

   82 type_id: TOK_PTR TOK_LT TOK_STRUCT TOK_IDENT TOK_GT .

    $default  reduce using rule 82 (type_id)


State 114

   15 vardecl: type TOK_IDENT '=' express ';' .

    $default  reduce using rule 15 (vardecl)


State 115

   25 ifelse: TOK_IF '(' express . ')' select else
   26       | TOK_IF '(' express . ')' select
   58 binop: express . '=' express
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   65      | express . '+' express
   66      | express . '-' express
   67      | express . '*' express
   68      | express . '/' express
   69      | express . '%' express
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 96
    TOK_LE     shift, and go to state 97
    TOK_EQ     shift, and go to state 98
    TOK_NE     shift, and go to state 99
    TOK_GT     shift, and go to state 100
    TOK_LT     shift, and go to state 101
    TOK_ARROW  shift, and go to state 102
    '='        shift, and go to state 103
    '+'        shift, and go to state 104
    '-'        shift, and go to state 105
    '*'        shift, and go to state 106
    '/'        shift, and go to state 107
    '%'        shift, and go to state 108
    '['        shift, and go to state 109
    ')'        shift, and go to state 139


State 116

   32 alloc: TOK_ALLOC TOK_LT TOK_STRUCT . TOK_IDENT TOK_GT '(' express ')'
   33      | TOK_ALLOC TOK_LT TOK_STRUCT . TOK_IDENT TOK_GT '(' ')'

    TOK_IDENT  shift, and go to state 140


State 117

   34 alloc: TOK_ALLOC TOK_LT TOK_ARRAY . TOK_LT type TOK_GT TOK_GT '(' ')'
   35      | TOK_ALLOC TOK_LT TOK_ARRAY . TOK_LT type TOK_GT TOK_GT '(' express ')'

    TOK_LT  shift, and go to state 141


State 118

   30 alloc: TOK_ALLOC TOK_LT TOK_STRING . TOK_GT '(' ')'
   31      | TOK_ALLOC TOK_LT TOK_STRING . TOK_GT '(' express ')'

    TOK_GT  shift, and go to state 142


State 119

   23 while: TOK_WHILE '(' express . ')' select
   58 binop: express . '=' express
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   65      | express . '+' express
   66      | express . '-' express
   67      | express . '*' express
   68      | express . '/' express
   69      | express . '%' express
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 96
    TOK_LE     shift, and go to state 97
    TOK_EQ     shift, and go to state 98
    TOK_NE     shift, and go to state 99
    TOK_GT     shift, and go to state 100
    TOK_LT     shift, and go to state 101
    TOK_ARROW  shift, and go to state 102
    '='        shift, and go to state 103
    '+'        shift, and go to state 104
    '-'        shift, and go to state 105
    '*'        shift, and go to state 106
    '/'        shift, and go to state 107
    '%'        shift, and go to state 108
    '['        shift, and go to state 109
    ')'        shift, and go to state 143


State 120

   29 return: TOK_RETURN express ';' .

    $default  reduce using rule 29 (return)


State 121

   21 call: TOK_IDENT '(' ')' .

    $default  reduce using rule 21 (call)


State 122

   19 callParam: TOK_IDENT '(' express .
   58 binop: express . '=' express
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   65      | express . '+' express
   66      | express . '-' express
   67      | express . '*' express
   68      | express . '/' express
   69      | express . '%' express
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 96
    TOK_LE     shift, and go to state 97
    TOK_EQ     shift, and go to state 98
    TOK_NE     shift, and go to state 99
    TOK_GT     shift, and go to state 100
    TOK_LT     shift, and go to state 101
    TOK_ARROW  shift, and go to state 102
    '='        shift, and go to state 103
    '+'        shift, and go to state 104
    '-'        shift, and go to state 105
    '*'        shift, and go to state 106
    '/'        shift, and go to state 107
    '%'        shift, and go to state 108
    '['        shift, and go to state 109

    $default  reduce using rule 19 (callParam)


State 123

   55 express: '(' express ')' .

    $default  reduce using rule 55 (express)


State 124

   20 callParam: callParam ',' express .
   58 binop: express . '=' express
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   65      | express . '+' express
   66      | express . '-' express
   67      | express . '*' express
   68      | express . '/' express
   69      | express . '%' express
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 96
    TOK_LE     shift, and go to state 97
    TOK_EQ     shift, and go to state 98
    TOK_NE     shift, and go to state 99
    TOK_GT     shift, and go to state 100
    TOK_LT     shift, and go to state 101
    TOK_ARROW  shift, and go to state 102
    '='        shift, and go to state 103
    '+'        shift, and go to state 104
    '-'        shift, and go to state 105
    '*'        shift, and go to state 106
    '/'        shift, and go to state 107
    '%'        shift, and go to state 108
    '['        shift, and go to state 109

    $default  reduce using rule 20 (callParam)


State 125

   58 binop: express . '=' express
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   62      | express TOK_GE express .
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   65      | express . '+' express
   66      | express . '-' express
   67      | express . '*' express
   68      | express . '/' express
   69      | express . '%' express
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 102
    '+'        shift, and go to state 104
    '-'        shift, and go to state 105
    '*'        shift, and go to state 106
    '/'        shift, and go to state 107
    '%'        shift, and go to state 108
    '['        shift, and go to state 109

    $default  reduce using rule 62 (binop)


State 126

   58 binop: express . '=' express
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   64      | express TOK_LE express .
   65      | express . '+' express
   66      | express . '-' express
   67      | express . '*' express
   68      | express . '/' express
   69      | express . '%' express
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 102
    '+'        shift, and go to state 104
    '-'        shift, and go to state 105
    '*'        shift, and go to state 106
    '/'        shift, and go to state 107
    '%'        shift, and go to state 108
    '['        shift, and go to state 109

    $default  reduce using rule 64 (binop)


State 127

   58 binop: express . '=' express
   59      | express . TOK_EQ express
   59      | express TOK_EQ express .
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   65      | express . '+' express
   66      | express . '-' express
   67      | express . '*' express
   68      | express . '/' express
   69      | express . '%' express
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 102
    '+'        shift, and go to state 104
    '-'        shift, and go to state 105
    '*'        shift, and go to state 106
    '/'        shift, and go to state 107
    '%'        shift, and go to state 108
    '['        shift, and go to state 109

    $default  reduce using rule 59 (binop)


State 128

   58 binop: express . '=' express
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   60      | express TOK_NE express .
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   65      | express . '+' express
   66      | express . '-' express
   67      | express . '*' express
   68      | express . '/' express
   69      | express . '%' express
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 102
    '+'        shift, and go to state 104
    '-'        shift, and go to state 105
    '*'        shift, and go to state 106
    '/'        shift, and go to state 107
    '%'        shift, and go to state 108
    '['        shift, and go to state 109

    $default  reduce using rule 60 (binop)


State 129

   58 binop: express . '=' express
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   61      | express TOK_GT express .
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   65      | express . '+' express
   66      | express . '-' express
   67      | express . '*' express
   68      | express . '/' express
   69      | express . '%' express
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 102
    '+'        shift, and go to state 104
    '-'        shift, and go to state 105
    '*'        shift, and go to state 106
    '/'        shift, and go to state 107
    '%'        shift, and go to state 108
    '['        shift, and go to state 109

    $default  reduce using rule 61 (binop)


State 130

   58 binop: express . '=' express
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   63      | express TOK_LT express .
   64      | express . TOK_LE express
   65      | express . '+' express
   66      | express . '-' express
   67      | express . '*' express
   68      | express . '/' express
   69      | express . '%' express
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 102
    '+'        shift, and go to state 104
    '-'        shift, and go to state 105
    '*'        shift, and go to state 106
    '/'        shift, and go to state 107
    '%'        shift, and go to state 108
    '['        shift, and go to state 109

    $default  reduce using rule 63 (binop)


State 131

   75 var: express TOK_ARROW TOK_IDENT .

    $default  reduce using rule 75 (var)


State 132

   58 binop: express . '=' express
   58      | express '=' express .
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   65      | express . '+' express
   66      | express . '-' express
   67      | express . '*' express
   68      | express . '/' express
   69      | express . '%' express
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 96
    TOK_LE     shift, and go to state 97
    TOK_EQ     shift, and go to state 98
    TOK_NE     shift, and go to state 99
    TOK_GT     shift, and go to state 100
    TOK_LT     shift, and go to state 101
    TOK_ARROW  shift, and go to state 102
    '='        shift, and go to state 103
    '+'        shift, and go to state 104
    '-'        shift, and go to state 105
    '*'        shift, and go to state 106
    '/'        shift, and go to state 107
    '%'        shift, and go to state 108
    '['        shift, and go to state 109

    $default  reduce using rule 58 (binop)


State 133

   58 binop: express . '=' express
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   65      | express . '+' express
   65      | express '+' express .
   66      | express . '-' express
   67      | express . '*' express
   68      | express . '/' express
   69      | express . '%' express
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 102
    '*'        shift, and go to state 106
    '/'        shift, and go to state 107
    '%'        shift, and go to state 108
    '['        shift, and go to state 109

    $default  reduce using rule 65 (binop)


State 134

   58 binop: express . '=' express
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   65      | express . '+' express
   66      | express . '-' express
   66      | express '-' express .
   67      | express . '*' express
   68      | express . '/' express
   69      | express . '%' express
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 102
    '*'        shift, and go to state 106
    '/'        shift, and go to state 107
    '%'        shift, and go to state 108
    '['        shift, and go to state 109

    $default  reduce using rule 66 (binop)


State 135

   58 binop: express . '=' express
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   65      | express . '+' express
   66      | express . '-' express
   67      | express . '*' express
   67      | express '*' express .
   68      | express . '/' express
   69      | express . '%' express
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 102
    '['        shift, and go to state 109

    $default  reduce using rule 67 (binop)


State 136

   58 binop: express . '=' express
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   65      | express . '+' express
   66      | express . '-' express
   67      | express . '*' express
   68      | express . '/' express
   68      | express '/' express .
   69      | express . '%' express
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 102
    '['        shift, and go to state 109

    $default  reduce using rule 68 (binop)


State 137

   58 binop: express . '=' express
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   65      | express . '+' express
   66      | express . '-' express
   67      | express . '*' express
   68      | express . '/' express
   69      | express . '%' express
   69      | express '%' express .
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 102
    '['        shift, and go to state 109

    $default  reduce using rule 69 (binop)


State 138

   58 binop: express . '=' express
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   65      | express . '+' express
   66      | express . '-' express
   67      | express . '*' express
   68      | express . '/' express
   69      | express . '%' express
   74 var: express . '[' express ']'
   74    | express '[' express . ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 96
    TOK_LE     shift, and go to state 97
    TOK_EQ     shift, and go to state 98
    TOK_NE     shift, and go to state 99
    TOK_GT     shift, and go to state 100
    TOK_LT     shift, and go to state 101
    TOK_ARROW  shift, and go to state 102
    '='        shift, and go to state 103
    '+'        shift, and go to state 104
    '-'        shift, and go to state 105
    '*'        shift, and go to state 106
    '/'        shift, and go to state 107
    '%'        shift, and go to state 108
    '['        shift, and go to state 109
    ']'        shift, and go to state 144


State 139

   25 ifelse: TOK_IF '(' express ')' . select else
   26       | TOK_IF '(' express ')' . select

    TOK_NULLPTR    shift, and go to state 40
    TOK_IF         shift, and go to state 41
    TOK_ARRAY      shift, and go to state 6
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_PTR        shift, and go to state 7
    TOK_WHILE      shift, and go to state 44
    TOK_VOID       shift, and go to state 8
    TOK_RETURN     shift, and go to state 45
    TOK_INT        shift, and go to state 9
    TOK_CHAR       shift, and go to state 10
    TOK_STRING     shift, and go to state 11
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52
    ';'            shift, and go to state 53
    '{'            shift, and go to state 54

    vardecl     go to state 55
    callParam   go to state 56
    call        go to state 57
    while       go to state 58
    select      go to state 145
    ifelse      go to state 59
    return      go to state 60
    alloc       go to state 61
    block       go to state 62
    blockBody   go to state 63
    multiState  go to state 64
    state       go to state 146
    express     go to state 66
    binop       go to state 67
    unop        go to state 68
    var         go to state 69
    type        go to state 70
    type_id     go to state 18
    constant    go to state 71


State 140

   32 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT . TOK_GT '(' express ')'
   33      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT . TOK_GT '(' ')'

    TOK_GT  shift, and go to state 147


State 141

   34 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT . type TOK_GT TOK_GT '(' ')'
   35      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT . type TOK_GT TOK_GT '(' express ')'

    TOK_ARRAY   shift, and go to state 6
    TOK_PTR     shift, and go to state 7
    TOK_VOID    shift, and go to state 8
    TOK_INT     shift, and go to state 9
    TOK_CHAR    shift, and go to state 10
    TOK_STRING  shift, and go to state 11

    type     go to state 148
    type_id  go to state 18


State 142

   30 alloc: TOK_ALLOC TOK_LT TOK_STRING TOK_GT . '(' ')'
   31      | TOK_ALLOC TOK_LT TOK_STRING TOK_GT . '(' express ')'

    '('  shift, and go to state 149


State 143

   23 while: TOK_WHILE '(' express ')' . select

    TOK_NULLPTR    shift, and go to state 40
    TOK_IF         shift, and go to state 41
    TOK_ARRAY      shift, and go to state 6
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_PTR        shift, and go to state 7
    TOK_WHILE      shift, and go to state 44
    TOK_VOID       shift, and go to state 8
    TOK_RETURN     shift, and go to state 45
    TOK_INT        shift, and go to state 9
    TOK_CHAR       shift, and go to state 10
    TOK_STRING     shift, and go to state 11
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52
    ';'            shift, and go to state 53
    '{'            shift, and go to state 54

    vardecl     go to state 55
    callParam   go to state 56
    call        go to state 57
    while       go to state 58
    select      go to state 150
    ifelse      go to state 59
    return      go to state 60
    alloc       go to state 61
    block       go to state 62
    blockBody   go to state 63
    multiState  go to state 64
    state       go to state 146
    express     go to state 66
    binop       go to state 67
    unop        go to state 68
    var         go to state 69
    type        go to state 70
    type_id     go to state 18
    constant    go to state 71


State 144

   74 var: express '[' express ']' .

    $default  reduce using rule 74 (var)


State 145

   25 ifelse: TOK_IF '(' express ')' select . else
   26       | TOK_IF '(' express ')' select .

    TOK_ELSE  shift, and go to state 151

    TOK_ELSE  [reduce using rule 26 (ifelse)]
    $default  reduce using rule 26 (ifelse)

    else  go to state 152


State 146

   24 select: state .

    $default  reduce using rule 24 (select)


State 147

   32 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT . '(' express ')'
   33      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT . '(' ')'

    '('  shift, and go to state 153


State 148

   34 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type . TOK_GT TOK_GT '(' ')'
   35      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type . TOK_GT TOK_GT '(' express ')'

    TOK_GT  shift, and go to state 154


State 149

   30 alloc: TOK_ALLOC TOK_LT TOK_STRING TOK_GT '(' . ')'
   31      | TOK_ALLOC TOK_LT TOK_STRING TOK_GT '(' . express ')'

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52
    ')'            shift, and go to state 155

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 156
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 150

   23 while: TOK_WHILE '(' express ')' select .

    $default  reduce using rule 23 (while)


State 151

   27 else: TOK_ELSE . select

    TOK_NULLPTR    shift, and go to state 40
    TOK_IF         shift, and go to state 41
    TOK_ARRAY      shift, and go to state 6
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_PTR        shift, and go to state 7
    TOK_WHILE      shift, and go to state 44
    TOK_VOID       shift, and go to state 8
    TOK_RETURN     shift, and go to state 45
    TOK_INT        shift, and go to state 9
    TOK_CHAR       shift, and go to state 10
    TOK_STRING     shift, and go to state 11
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52
    ';'            shift, and go to state 53
    '{'            shift, and go to state 54

    vardecl     go to state 55
    callParam   go to state 56
    call        go to state 57
    while       go to state 58
    select      go to state 157
    ifelse      go to state 59
    return      go to state 60
    alloc       go to state 61
    block       go to state 62
    blockBody   go to state 63
    multiState  go to state 64
    state       go to state 146
    express     go to state 66
    binop       go to state 67
    unop        go to state 68
    var         go to state 69
    type        go to state 70
    type_id     go to state 18
    constant    go to state 71


State 152

   25 ifelse: TOK_IF '(' express ')' select else .

    $default  reduce using rule 25 (ifelse)


State 153

   32 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' . express ')'
   33      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' . ')'

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52
    ')'            shift, and go to state 158

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 159
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 154

   34 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT . TOK_GT '(' ')'
   35      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT . TOK_GT '(' express ')'

    TOK_GT  shift, and go to state 160


State 155

   30 alloc: TOK_ALLOC TOK_LT TOK_STRING TOK_GT '(' ')' .

    $default  reduce using rule 30 (alloc)


State 156

   31 alloc: TOK_ALLOC TOK_LT TOK_STRING TOK_GT '(' express . ')'
   58 binop: express . '=' express
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   65      | express . '+' express
   66      | express . '-' express
   67      | express . '*' express
   68      | express . '/' express
   69      | express . '%' express
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 96
    TOK_LE     shift, and go to state 97
    TOK_EQ     shift, and go to state 98
    TOK_NE     shift, and go to state 99
    TOK_GT     shift, and go to state 100
    TOK_LT     shift, and go to state 101
    TOK_ARROW  shift, and go to state 102
    '='        shift, and go to state 103
    '+'        shift, and go to state 104
    '-'        shift, and go to state 105
    '*'        shift, and go to state 106
    '/'        shift, and go to state 107
    '%'        shift, and go to state 108
    '['        shift, and go to state 109
    ')'        shift, and go to state 161


State 157

   27 else: TOK_ELSE select .

    $default  reduce using rule 27 (else)


State 158

   33 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' ')' .

    $default  reduce using rule 33 (alloc)


State 159

   32 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' express . ')'
   58 binop: express . '=' express
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   65      | express . '+' express
   66      | express . '-' express
   67      | express . '*' express
   68      | express . '/' express
   69      | express . '%' express
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 96
    TOK_LE     shift, and go to state 97
    TOK_EQ     shift, and go to state 98
    TOK_NE     shift, and go to state 99
    TOK_GT     shift, and go to state 100
    TOK_LT     shift, and go to state 101
    TOK_ARROW  shift, and go to state 102
    '='        shift, and go to state 103
    '+'        shift, and go to state 104
    '-'        shift, and go to state 105
    '*'        shift, and go to state 106
    '/'        shift, and go to state 107
    '%'        shift, and go to state 108
    '['        shift, and go to state 109
    ')'        shift, and go to state 162


State 160

   34 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT . '(' ')'
   35      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT . '(' express ')'

    '('  shift, and go to state 163


State 161

   31 alloc: TOK_ALLOC TOK_LT TOK_STRING TOK_GT '(' express ')' .

    $default  reduce using rule 31 (alloc)


State 162

   32 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' express ')' .

    $default  reduce using rule 32 (alloc)


State 163

   34 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' . ')'
   35      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' . express ')'

    TOK_NULLPTR    shift, and go to state 40
    TOK_NOT        shift, and go to state 42
    TOK_ALLOC      shift, and go to state 43
    TOK_CHARCON    shift, and go to state 46
    TOK_STRINGCON  shift, and go to state 47
    TOK_INTCON     shift, and go to state 48
    TOK_IDENT      shift, and go to state 49
    '+'            shift, and go to state 50
    '-'            shift, and go to state 51
    '('            shift, and go to state 52
    ')'            shift, and go to state 164

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 165
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 164

   34 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' ')' .

    $default  reduce using rule 34 (alloc)


State 165

   35 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express . ')'
   58 binop: express . '=' express
   59      | express . TOK_EQ express
   60      | express . TOK_NE express
   61      | express . TOK_GT express
   62      | express . TOK_GE express
   63      | express . TOK_LT express
   64      | express . TOK_LE express
   65      | express . '+' express
   66      | express . '-' express
   67      | express . '*' express
   68      | express . '/' express
   69      | express . '%' express
   74 var: express . '[' express ']'
   75    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 96
    TOK_LE     shift, and go to state 97
    TOK_EQ     shift, and go to state 98
    TOK_NE     shift, and go to state 99
    TOK_GT     shift, and go to state 100
    TOK_LT     shift, and go to state 101
    TOK_ARROW  shift, and go to state 102
    '='        shift, and go to state 103
    '+'        shift, and go to state 104
    '-'        shift, and go to state 105
    '*'        shift, and go to state 106
    '/'        shift, and go to state 107
    '%'        shift, and go to state 108
    '['        shift, and go to state 109
    ')'        shift, and go to state 166


State 166

   35 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express ')' .

    $default  reduce using rule 35 (alloc)
