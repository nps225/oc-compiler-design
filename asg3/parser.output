Terminals unused in grammar

   ROOT
   IDENT
   NUMBER
   TYPE_ID
   FUNCTION
   TOK_PARAM
   TOK_PROTOTYPE
   BLOCK
   TOK_INDEX
   CALL
   ENDIF
   '^'


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program struct
    3        | program vardecl
    4        | program function
    5        | program error ';'
    6        | program error '}'
    7        | program ';'
    8        | %empty

    9 struct: TOK_STRUCT TOK_IDENT blockS
   10       | TOK_STRUCT TOK_IDENT '{' '}' ';'

   11 function: identif '(' ')' ';'
   12         | identif param ')' ';'
   13         | identif '(' ')' block
   14         | identif param ')' block

   15 vardecl: type TOK_IDENT ';'
   16        | type TOK_IDENT '=' express ';'

   17 identif: type TOK_IDENT

   18 param: '(' identif
   19      | param ',' identif

   20 callParam: TOK_IDENT '(' express
   21          | callParam ',' express

   22 call: TOK_IDENT '(' ')'
   23     | callParam ')'

   24 while: TOK_WHILE '(' express ')' select

   25 select: state

   26 ifelse: TOK_IF '(' express ')' select else
   27       | TOK_ELSE select

   28 else: TOK_ELSE state
   29     | %empty

   30 return: TOK_RETURN ';'
   31       | TOK_RETURN express ';'

   32 alloc: TOK_ALLOC TOK_LT TOK_STRING TOK_GT '(' ')'
   33      | TOK_ALLOC TOK_LT TOK_STRING TOK_GT '(' express ')'
   34      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' express ')'
   35      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' ')'
   36      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' ')'
   37      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express ')'

   38 blockS: '{' blockBodyS '}' ';'

   39 blockBodyS: multiState

   40 block: '{' blockBody '}'
   41      | '{' '}'

   42 blockBody: multiState

   43 multiState: state
   44           | multiState state

   45 state: vardecl
   46      | block
   47      | while
   48      | ifelse
   49      | return
   50      | express ';'
   51      | ';'

   52 express: binop
   53        | unop
   54        | alloc
   55        | call
   56        | '(' express ')'
   57        | var
   58        | constant

   59 binop: express '=' express
   60      | express TOK_EQ express
   61      | express TOK_NE express
   62      | express TOK_GT express
   63      | express TOK_GE express
   64      | express TOK_LT express
   65      | express TOK_LE express
   66      | express '+' express
   67      | express '-' express
   68      | express '*' express
   69      | express '/' express
   70      | express '%' express

   71 unop: '+' express
   72     | '-' express
   73     | TOK_NOT express

   74 var: TOK_IDENT
   75    | express '[' express ']'
   76    | express TOK_ARROW TOK_IDENT

   77 type: type_id
   78     | TOK_ARRAY TOK_LT type_id TOK_GT

   79 type_id: TOK_INT
   80        | TOK_STRING
   81        | TOK_CHAR
   82        | TOK_VOID
   83        | TOK_PTR TOK_LT TOK_STRUCT TOK_IDENT TOK_GT

   84 constant: TOK_INTCON
   85         | TOK_STRINGCON
   86         | TOK_CHARCON
   87         | TOK_NULLPTR


Terminals, with rules where they appear

$end (0) 0
'%' (37) 70
'(' (40) 11 13 18 20 22 24 26 32 33 34 35 36 37 56
')' (41) 11 12 13 14 22 23 24 26 32 33 34 35 36 37 56
'*' (42) 68
'+' (43) 66 71
',' (44) 19 21
'-' (45) 67 72
'/' (47) 69
';' (59) 5 7 10 11 12 15 16 30 31 38 50 51
'=' (61) 16 59
'[' (91) 75
']' (93) 75
'^' (94)
'{' (123) 10 38 40 41
'}' (125) 6 10 38 40 41
error (256) 5 6
ROOT (258)
IDENT (259)
NUMBER (260)
TYPE_ID (261)
FUNCTION (262)
TOK_PARAM (263)
TOK_PROTOTYPE (264)
BLOCK (265)
TOK_NULLPTR (266) 87
TOK_INDEX (267)
CALL (268)
ENDIF (269)
TOK_GE (270) 63
TOK_LE (271) 65
TOK_EQ (272) 60
TOK_NE (273) 61
TOK_GT (274) 32 33 34 35 36 37 62 78 83
TOK_LT (275) 32 33 34 35 36 37 64 78 83
TOK_IF (276) 26
TOK_ELSE (277) 27 28
TOK_STRUCT (278) 9 10 34 35 83
TOK_ARRAY (279) 36 37 78
TOK_NOT (280) 73
TOK_ALLOC (281) 32 33 34 35 36 37
TOK_PTR (282) 83
TOK_ARROW (283) 76
TOK_WHILE (284) 24
TOK_VOID (285) 82
TOK_RETURN (286) 30 31
TOK_INT (287) 79
TOK_CHAR (288) 81
TOK_STRING (289) 32 33 80
TOK_CHARCON (290) 86
TOK_STRINGCON (291) 85
TOK_INTCON (292) 84
TOK_IDENT (293) 9 10 15 16 17 20 22 34 35 74 76 83
POS (294)
NEG (295)


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
start (57)
    on left: 1, on right: 0
program (58)
    on left: 2 3 4 5 6 7 8, on right: 1 2 3 4 5 6 7
struct (59)
    on left: 9 10, on right: 2
function (60)
    on left: 11 12 13 14, on right: 4
vardecl (61)
    on left: 15 16, on right: 3 45
identif (62)
    on left: 17, on right: 11 12 13 14 18 19
param (63)
    on left: 18 19, on right: 12 14 19
callParam (64)
    on left: 20 21, on right: 21 23
call (65)
    on left: 22 23, on right: 55
while (66)
    on left: 24, on right: 47
select (67)
    on left: 25, on right: 24 26 27
ifelse (68)
    on left: 26 27, on right: 48
else (69)
    on left: 28 29, on right: 26
return (70)
    on left: 30 31, on right: 49
alloc (71)
    on left: 32 33 34 35 36 37, on right: 54
blockS (72)
    on left: 38, on right: 9
blockBodyS (73)
    on left: 39, on right: 38
block (74)
    on left: 40 41, on right: 13 14 46
blockBody (75)
    on left: 42, on right: 40
multiState (76)
    on left: 43 44, on right: 39 42 44
state (77)
    on left: 45 46 47 48 49 50 51, on right: 25 28 43 44
express (78)
    on left: 52 53 54 55 56 57 58, on right: 16 20 21 24 26 31 33 34
    37 50 56 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 75 76
binop (79)
    on left: 59 60 61 62 63 64 65 66 67 68 69 70, on right: 52
unop (80)
    on left: 71 72 73, on right: 53
var (81)
    on left: 74 75 76, on right: 57
type (82)
    on left: 77 78, on right: 15 16 17 36 37
type_id (83)
    on left: 79 80 81 82 83, on right: 77 78
constant (84)
    on left: 84 85 86 87, on right: 58


State 0

    0 $accept: . start $end

    $default  reduce using rule 8 (program)

    start    go to state 1
    program  go to state 2


State 1

    0 $accept: start . $end

    $end  shift, and go to state 3


State 2

    1 start: program .
    2 program: program . struct
    3        | program . vardecl
    4        | program . function
    5        | program . error ';'
    6        | program . error '}'
    7        | program . ';'

    error       shift, and go to state 4
    TOK_STRUCT  shift, and go to state 5
    TOK_ARRAY   shift, and go to state 6
    TOK_PTR     shift, and go to state 7
    TOK_VOID    shift, and go to state 8
    TOK_INT     shift, and go to state 9
    TOK_CHAR    shift, and go to state 10
    TOK_STRING  shift, and go to state 11
    ';'         shift, and go to state 12

    $end  reduce using rule 1 (start)

    struct    go to state 13
    function  go to state 14
    vardecl   go to state 15
    identif   go to state 16
    type      go to state 17
    type_id   go to state 18


State 3

    0 $accept: start $end .

    $default  accept


State 4

    5 program: program error . ';'
    6        | program error . '}'

    ';'  shift, and go to state 19
    '}'  shift, and go to state 20


State 5

    9 struct: TOK_STRUCT . TOK_IDENT blockS
   10       | TOK_STRUCT . TOK_IDENT '{' '}' ';'

    TOK_IDENT  shift, and go to state 21


State 6

   78 type: TOK_ARRAY . TOK_LT type_id TOK_GT

    TOK_LT  shift, and go to state 22


State 7

   83 type_id: TOK_PTR . TOK_LT TOK_STRUCT TOK_IDENT TOK_GT

    TOK_LT  shift, and go to state 23


State 8

   82 type_id: TOK_VOID .

    $default  reduce using rule 82 (type_id)


State 9

   79 type_id: TOK_INT .

    $default  reduce using rule 79 (type_id)


State 10

   81 type_id: TOK_CHAR .

    $default  reduce using rule 81 (type_id)


State 11

   80 type_id: TOK_STRING .

    $default  reduce using rule 80 (type_id)


State 12

    7 program: program ';' .

    $default  reduce using rule 7 (program)


State 13

    2 program: program struct .

    $default  reduce using rule 2 (program)


State 14

    4 program: program function .

    $default  reduce using rule 4 (program)


State 15

    3 program: program vardecl .

    $default  reduce using rule 3 (program)


State 16

   11 function: identif . '(' ')' ';'
   12         | identif . param ')' ';'
   13         | identif . '(' ')' block
   14         | identif . param ')' block

    '('  shift, and go to state 24

    param  go to state 25


State 17

   15 vardecl: type . TOK_IDENT ';'
   16        | type . TOK_IDENT '=' express ';'
   17 identif: type . TOK_IDENT

    TOK_IDENT  shift, and go to state 26


State 18

   77 type: type_id .

    $default  reduce using rule 77 (type)


State 19

    5 program: program error ';' .

    $default  reduce using rule 5 (program)


State 20

    6 program: program error '}' .

    $default  reduce using rule 6 (program)


State 21

    9 struct: TOK_STRUCT TOK_IDENT . blockS
   10       | TOK_STRUCT TOK_IDENT . '{' '}' ';'

    '{'  shift, and go to state 27

    blockS  go to state 28


State 22

   78 type: TOK_ARRAY TOK_LT . type_id TOK_GT

    TOK_PTR     shift, and go to state 7
    TOK_VOID    shift, and go to state 8
    TOK_INT     shift, and go to state 9
    TOK_CHAR    shift, and go to state 10
    TOK_STRING  shift, and go to state 11

    type_id  go to state 29


State 23

   83 type_id: TOK_PTR TOK_LT . TOK_STRUCT TOK_IDENT TOK_GT

    TOK_STRUCT  shift, and go to state 30


State 24

   11 function: identif '(' . ')' ';'
   13         | identif '(' . ')' block
   18 param: '(' . identif

    TOK_ARRAY   shift, and go to state 6
    TOK_PTR     shift, and go to state 7
    TOK_VOID    shift, and go to state 8
    TOK_INT     shift, and go to state 9
    TOK_CHAR    shift, and go to state 10
    TOK_STRING  shift, and go to state 11
    ')'         shift, and go to state 31

    identif  go to state 32
    type     go to state 33
    type_id  go to state 18


State 25

   12 function: identif param . ')' ';'
   14         | identif param . ')' block
   19 param: param . ',' identif

    ')'  shift, and go to state 34
    ','  shift, and go to state 35


State 26

   15 vardecl: type TOK_IDENT . ';'
   16        | type TOK_IDENT . '=' express ';'
   17 identif: type TOK_IDENT .

    '='  shift, and go to state 36
    ';'  shift, and go to state 37

    $default  reduce using rule 17 (identif)


State 27

   10 struct: TOK_STRUCT TOK_IDENT '{' . '}' ';'
   38 blockS: '{' . blockBodyS '}' ';'

    TOK_NULLPTR    shift, and go to state 38
    TOK_IF         shift, and go to state 39
    TOK_ELSE       shift, and go to state 40
    TOK_ARRAY      shift, and go to state 6
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_PTR        shift, and go to state 7
    TOK_WHILE      shift, and go to state 43
    TOK_VOID       shift, and go to state 8
    TOK_RETURN     shift, and go to state 44
    TOK_INT        shift, and go to state 9
    TOK_CHAR       shift, and go to state 10
    TOK_STRING     shift, and go to state 11
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51
    ';'            shift, and go to state 52
    '}'            shift, and go to state 53
    '{'            shift, and go to state 54

    vardecl     go to state 55
    callParam   go to state 56
    call        go to state 57
    while       go to state 58
    ifelse      go to state 59
    return      go to state 60
    alloc       go to state 61
    blockBodyS  go to state 62
    block       go to state 63
    multiState  go to state 64
    state       go to state 65
    express     go to state 66
    binop       go to state 67
    unop        go to state 68
    var         go to state 69
    type        go to state 70
    type_id     go to state 18
    constant    go to state 71


State 28

    9 struct: TOK_STRUCT TOK_IDENT blockS .

    $default  reduce using rule 9 (struct)


State 29

   78 type: TOK_ARRAY TOK_LT type_id . TOK_GT

    TOK_GT  shift, and go to state 72


State 30

   83 type_id: TOK_PTR TOK_LT TOK_STRUCT . TOK_IDENT TOK_GT

    TOK_IDENT  shift, and go to state 73


State 31

   11 function: identif '(' ')' . ';'
   13         | identif '(' ')' . block

    ';'  shift, and go to state 74
    '{'  shift, and go to state 54

    block  go to state 75


State 32

   18 param: '(' identif .

    $default  reduce using rule 18 (param)


State 33

   17 identif: type . TOK_IDENT

    TOK_IDENT  shift, and go to state 76


State 34

   12 function: identif param ')' . ';'
   14         | identif param ')' . block

    ';'  shift, and go to state 77
    '{'  shift, and go to state 54

    block  go to state 78


State 35

   19 param: param ',' . identif

    TOK_ARRAY   shift, and go to state 6
    TOK_PTR     shift, and go to state 7
    TOK_VOID    shift, and go to state 8
    TOK_INT     shift, and go to state 9
    TOK_CHAR    shift, and go to state 10
    TOK_STRING  shift, and go to state 11

    identif  go to state 79
    type     go to state 33
    type_id  go to state 18


State 36

   16 vardecl: type TOK_IDENT '=' . express ';'

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 80
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 37

   15 vardecl: type TOK_IDENT ';' .

    $default  reduce using rule 15 (vardecl)


State 38

   87 constant: TOK_NULLPTR .

    $default  reduce using rule 87 (constant)


State 39

   26 ifelse: TOK_IF . '(' express ')' select else

    '('  shift, and go to state 81


State 40

   27 ifelse: TOK_ELSE . select

    TOK_NULLPTR    shift, and go to state 38
    TOK_IF         shift, and go to state 39
    TOK_ELSE       shift, and go to state 40
    TOK_ARRAY      shift, and go to state 6
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_PTR        shift, and go to state 7
    TOK_WHILE      shift, and go to state 43
    TOK_VOID       shift, and go to state 8
    TOK_RETURN     shift, and go to state 44
    TOK_INT        shift, and go to state 9
    TOK_CHAR       shift, and go to state 10
    TOK_STRING     shift, and go to state 11
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51
    ';'            shift, and go to state 52
    '{'            shift, and go to state 54

    vardecl    go to state 55
    callParam  go to state 56
    call       go to state 57
    while      go to state 58
    select     go to state 82
    ifelse     go to state 59
    return     go to state 60
    alloc      go to state 61
    block      go to state 63
    state      go to state 83
    express    go to state 66
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    type       go to state 70
    type_id    go to state 18
    constant   go to state 71


State 41

   73 unop: TOK_NOT . express

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 84
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 42

   32 alloc: TOK_ALLOC . TOK_LT TOK_STRING TOK_GT '(' ')'
   33      | TOK_ALLOC . TOK_LT TOK_STRING TOK_GT '(' express ')'
   34      | TOK_ALLOC . TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' express ')'
   35      | TOK_ALLOC . TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' ')'
   36      | TOK_ALLOC . TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' ')'
   37      | TOK_ALLOC . TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express ')'

    TOK_LT  shift, and go to state 85


State 43

   24 while: TOK_WHILE . '(' express ')' select

    '('  shift, and go to state 86


State 44

   30 return: TOK_RETURN . ';'
   31       | TOK_RETURN . express ';'

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51
    ';'            shift, and go to state 87

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 88
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 45

   86 constant: TOK_CHARCON .

    $default  reduce using rule 86 (constant)


State 46

   85 constant: TOK_STRINGCON .

    $default  reduce using rule 85 (constant)


State 47

   84 constant: TOK_INTCON .

    $default  reduce using rule 84 (constant)


State 48

   20 callParam: TOK_IDENT . '(' express
   22 call: TOK_IDENT . '(' ')'
   74 var: TOK_IDENT .

    '('  shift, and go to state 89

    $default  reduce using rule 74 (var)


State 49

   71 unop: '+' . express

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 90
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 50

   72 unop: '-' . express

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 91
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 51

   56 express: '(' . express ')'

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 92
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 52

   51 state: ';' .

    $default  reduce using rule 51 (state)


State 53

   10 struct: TOK_STRUCT TOK_IDENT '{' '}' . ';'

    ';'  shift, and go to state 93


State 54

   40 block: '{' . blockBody '}'
   41      | '{' . '}'

    TOK_NULLPTR    shift, and go to state 38
    TOK_IF         shift, and go to state 39
    TOK_ELSE       shift, and go to state 40
    TOK_ARRAY      shift, and go to state 6
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_PTR        shift, and go to state 7
    TOK_WHILE      shift, and go to state 43
    TOK_VOID       shift, and go to state 8
    TOK_RETURN     shift, and go to state 44
    TOK_INT        shift, and go to state 9
    TOK_CHAR       shift, and go to state 10
    TOK_STRING     shift, and go to state 11
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51
    ';'            shift, and go to state 52
    '}'            shift, and go to state 94
    '{'            shift, and go to state 54

    vardecl     go to state 55
    callParam   go to state 56
    call        go to state 57
    while       go to state 58
    ifelse      go to state 59
    return      go to state 60
    alloc       go to state 61
    block       go to state 63
    blockBody   go to state 95
    multiState  go to state 96
    state       go to state 65
    express     go to state 66
    binop       go to state 67
    unop        go to state 68
    var         go to state 69
    type        go to state 70
    type_id     go to state 18
    constant    go to state 71


State 55

   45 state: vardecl .

    $default  reduce using rule 45 (state)


State 56

   21 callParam: callParam . ',' express
   23 call: callParam . ')'

    ')'  shift, and go to state 97
    ','  shift, and go to state 98


State 57

   55 express: call .

    $default  reduce using rule 55 (express)


State 58

   47 state: while .

    $default  reduce using rule 47 (state)


State 59

   48 state: ifelse .

    $default  reduce using rule 48 (state)


State 60

   49 state: return .

    $default  reduce using rule 49 (state)


State 61

   54 express: alloc .

    $default  reduce using rule 54 (express)


State 62

   38 blockS: '{' blockBodyS . '}' ';'

    '}'  shift, and go to state 99


State 63

   46 state: block .

    $default  reduce using rule 46 (state)


State 64

   39 blockBodyS: multiState .
   44 multiState: multiState . state

    TOK_NULLPTR    shift, and go to state 38
    TOK_IF         shift, and go to state 39
    TOK_ELSE       shift, and go to state 40
    TOK_ARRAY      shift, and go to state 6
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_PTR        shift, and go to state 7
    TOK_WHILE      shift, and go to state 43
    TOK_VOID       shift, and go to state 8
    TOK_RETURN     shift, and go to state 44
    TOK_INT        shift, and go to state 9
    TOK_CHAR       shift, and go to state 10
    TOK_STRING     shift, and go to state 11
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51
    ';'            shift, and go to state 52
    '{'            shift, and go to state 54

    $default  reduce using rule 39 (blockBodyS)

    vardecl    go to state 55
    callParam  go to state 56
    call       go to state 57
    while      go to state 58
    ifelse     go to state 59
    return     go to state 60
    alloc      go to state 61
    block      go to state 63
    state      go to state 100
    express    go to state 66
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    type       go to state 70
    type_id    go to state 18
    constant   go to state 71


State 65

   43 multiState: state .

    $default  reduce using rule 43 (multiState)


State 66

   50 state: express . ';'
   59 binop: express . '=' express
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   66      | express . '+' express
   67      | express . '-' express
   68      | express . '*' express
   69      | express . '/' express
   70      | express . '%' express
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 101
    TOK_LE     shift, and go to state 102
    TOK_EQ     shift, and go to state 103
    TOK_NE     shift, and go to state 104
    TOK_GT     shift, and go to state 105
    TOK_LT     shift, and go to state 106
    TOK_ARROW  shift, and go to state 107
    '='        shift, and go to state 108
    '+'        shift, and go to state 109
    '-'        shift, and go to state 110
    '*'        shift, and go to state 111
    '/'        shift, and go to state 112
    '%'        shift, and go to state 113
    '['        shift, and go to state 114
    ';'        shift, and go to state 115


State 67

   52 express: binop .

    $default  reduce using rule 52 (express)


State 68

   53 express: unop .

    $default  reduce using rule 53 (express)


State 69

   57 express: var .

    $default  reduce using rule 57 (express)


State 70

   15 vardecl: type . TOK_IDENT ';'
   16        | type . TOK_IDENT '=' express ';'

    TOK_IDENT  shift, and go to state 116


State 71

   58 express: constant .

    $default  reduce using rule 58 (express)


State 72

   78 type: TOK_ARRAY TOK_LT type_id TOK_GT .

    $default  reduce using rule 78 (type)


State 73

   83 type_id: TOK_PTR TOK_LT TOK_STRUCT TOK_IDENT . TOK_GT

    TOK_GT  shift, and go to state 117


State 74

   11 function: identif '(' ')' ';' .

    $default  reduce using rule 11 (function)


State 75

   13 function: identif '(' ')' block .

    $default  reduce using rule 13 (function)


State 76

   17 identif: type TOK_IDENT .

    $default  reduce using rule 17 (identif)


State 77

   12 function: identif param ')' ';' .

    $default  reduce using rule 12 (function)


State 78

   14 function: identif param ')' block .

    $default  reduce using rule 14 (function)


State 79

   19 param: param ',' identif .

    $default  reduce using rule 19 (param)


State 80

   16 vardecl: type TOK_IDENT '=' express . ';'
   59 binop: express . '=' express
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   66      | express . '+' express
   67      | express . '-' express
   68      | express . '*' express
   69      | express . '/' express
   70      | express . '%' express
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 101
    TOK_LE     shift, and go to state 102
    TOK_EQ     shift, and go to state 103
    TOK_NE     shift, and go to state 104
    TOK_GT     shift, and go to state 105
    TOK_LT     shift, and go to state 106
    TOK_ARROW  shift, and go to state 107
    '='        shift, and go to state 108
    '+'        shift, and go to state 109
    '-'        shift, and go to state 110
    '*'        shift, and go to state 111
    '/'        shift, and go to state 112
    '%'        shift, and go to state 113
    '['        shift, and go to state 114
    ';'        shift, and go to state 118


State 81

   26 ifelse: TOK_IF '(' . express ')' select else

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 119
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 82

   27 ifelse: TOK_ELSE select .

    $default  reduce using rule 27 (ifelse)


State 83

   25 select: state .

    $default  reduce using rule 25 (select)


State 84

   59 binop: express . '=' express
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   66      | express . '+' express
   67      | express . '-' express
   68      | express . '*' express
   69      | express . '/' express
   70      | express . '%' express
   73 unop: TOK_NOT express .
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 107
    '['        shift, and go to state 114

    $default  reduce using rule 73 (unop)


State 85

   32 alloc: TOK_ALLOC TOK_LT . TOK_STRING TOK_GT '(' ')'
   33      | TOK_ALLOC TOK_LT . TOK_STRING TOK_GT '(' express ')'
   34      | TOK_ALLOC TOK_LT . TOK_STRUCT TOK_IDENT TOK_GT '(' express ')'
   35      | TOK_ALLOC TOK_LT . TOK_STRUCT TOK_IDENT TOK_GT '(' ')'
   36      | TOK_ALLOC TOK_LT . TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' ')'
   37      | TOK_ALLOC TOK_LT . TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express ')'

    TOK_STRUCT  shift, and go to state 120
    TOK_ARRAY   shift, and go to state 121
    TOK_STRING  shift, and go to state 122


State 86

   24 while: TOK_WHILE '(' . express ')' select

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 123
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 87

   30 return: TOK_RETURN ';' .

    $default  reduce using rule 30 (return)


State 88

   31 return: TOK_RETURN express . ';'
   59 binop: express . '=' express
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   66      | express . '+' express
   67      | express . '-' express
   68      | express . '*' express
   69      | express . '/' express
   70      | express . '%' express
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 101
    TOK_LE     shift, and go to state 102
    TOK_EQ     shift, and go to state 103
    TOK_NE     shift, and go to state 104
    TOK_GT     shift, and go to state 105
    TOK_LT     shift, and go to state 106
    TOK_ARROW  shift, and go to state 107
    '='        shift, and go to state 108
    '+'        shift, and go to state 109
    '-'        shift, and go to state 110
    '*'        shift, and go to state 111
    '/'        shift, and go to state 112
    '%'        shift, and go to state 113
    '['        shift, and go to state 114
    ';'        shift, and go to state 124


State 89

   20 callParam: TOK_IDENT '(' . express
   22 call: TOK_IDENT '(' . ')'

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51
    ')'            shift, and go to state 125

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 126
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 90

   59 binop: express . '=' express
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   66      | express . '+' express
   67      | express . '-' express
   68      | express . '*' express
   69      | express . '/' express
   70      | express . '%' express
   71 unop: '+' express .
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 107
    '['        shift, and go to state 114

    $default  reduce using rule 71 (unop)


State 91

   59 binop: express . '=' express
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   66      | express . '+' express
   67      | express . '-' express
   68      | express . '*' express
   69      | express . '/' express
   70      | express . '%' express
   72 unop: '-' express .
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 107
    '['        shift, and go to state 114

    $default  reduce using rule 72 (unop)


State 92

   56 express: '(' express . ')'
   59 binop: express . '=' express
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   66      | express . '+' express
   67      | express . '-' express
   68      | express . '*' express
   69      | express . '/' express
   70      | express . '%' express
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 101
    TOK_LE     shift, and go to state 102
    TOK_EQ     shift, and go to state 103
    TOK_NE     shift, and go to state 104
    TOK_GT     shift, and go to state 105
    TOK_LT     shift, and go to state 106
    TOK_ARROW  shift, and go to state 107
    '='        shift, and go to state 108
    '+'        shift, and go to state 109
    '-'        shift, and go to state 110
    '*'        shift, and go to state 111
    '/'        shift, and go to state 112
    '%'        shift, and go to state 113
    '['        shift, and go to state 114
    ')'        shift, and go to state 127


State 93

   10 struct: TOK_STRUCT TOK_IDENT '{' '}' ';' .

    $default  reduce using rule 10 (struct)


State 94

   41 block: '{' '}' .

    $default  reduce using rule 41 (block)


State 95

   40 block: '{' blockBody . '}'

    '}'  shift, and go to state 128


State 96

   42 blockBody: multiState .
   44 multiState: multiState . state

    TOK_NULLPTR    shift, and go to state 38
    TOK_IF         shift, and go to state 39
    TOK_ELSE       shift, and go to state 40
    TOK_ARRAY      shift, and go to state 6
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_PTR        shift, and go to state 7
    TOK_WHILE      shift, and go to state 43
    TOK_VOID       shift, and go to state 8
    TOK_RETURN     shift, and go to state 44
    TOK_INT        shift, and go to state 9
    TOK_CHAR       shift, and go to state 10
    TOK_STRING     shift, and go to state 11
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51
    ';'            shift, and go to state 52
    '{'            shift, and go to state 54

    $default  reduce using rule 42 (blockBody)

    vardecl    go to state 55
    callParam  go to state 56
    call       go to state 57
    while      go to state 58
    ifelse     go to state 59
    return     go to state 60
    alloc      go to state 61
    block      go to state 63
    state      go to state 100
    express    go to state 66
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    type       go to state 70
    type_id    go to state 18
    constant   go to state 71


State 97

   23 call: callParam ')' .

    $default  reduce using rule 23 (call)


State 98

   21 callParam: callParam ',' . express

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 129
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 99

   38 blockS: '{' blockBodyS '}' . ';'

    ';'  shift, and go to state 130


State 100

   44 multiState: multiState state .

    $default  reduce using rule 44 (multiState)


State 101

   63 binop: express TOK_GE . express

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 131
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 102

   65 binop: express TOK_LE . express

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 132
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 103

   60 binop: express TOK_EQ . express

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 133
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 104

   61 binop: express TOK_NE . express

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 134
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 105

   62 binop: express TOK_GT . express

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 135
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 106

   64 binop: express TOK_LT . express

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 136
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 107

   76 var: express TOK_ARROW . TOK_IDENT

    TOK_IDENT  shift, and go to state 137


State 108

   59 binop: express '=' . express

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 138
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 109

   66 binop: express '+' . express

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 139
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 110

   67 binop: express '-' . express

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 140
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 111

   68 binop: express '*' . express

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 141
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 112

   69 binop: express '/' . express

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 142
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 113

   70 binop: express '%' . express

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 143
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 114

   75 var: express '[' . express ']'

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 144
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 115

   50 state: express ';' .

    $default  reduce using rule 50 (state)


State 116

   15 vardecl: type TOK_IDENT . ';'
   16        | type TOK_IDENT . '=' express ';'

    '='  shift, and go to state 36
    ';'  shift, and go to state 37


State 117

   83 type_id: TOK_PTR TOK_LT TOK_STRUCT TOK_IDENT TOK_GT .

    $default  reduce using rule 83 (type_id)


State 118

   16 vardecl: type TOK_IDENT '=' express ';' .

    $default  reduce using rule 16 (vardecl)


State 119

   26 ifelse: TOK_IF '(' express . ')' select else
   59 binop: express . '=' express
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   66      | express . '+' express
   67      | express . '-' express
   68      | express . '*' express
   69      | express . '/' express
   70      | express . '%' express
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 101
    TOK_LE     shift, and go to state 102
    TOK_EQ     shift, and go to state 103
    TOK_NE     shift, and go to state 104
    TOK_GT     shift, and go to state 105
    TOK_LT     shift, and go to state 106
    TOK_ARROW  shift, and go to state 107
    '='        shift, and go to state 108
    '+'        shift, and go to state 109
    '-'        shift, and go to state 110
    '*'        shift, and go to state 111
    '/'        shift, and go to state 112
    '%'        shift, and go to state 113
    '['        shift, and go to state 114
    ')'        shift, and go to state 145


State 120

   34 alloc: TOK_ALLOC TOK_LT TOK_STRUCT . TOK_IDENT TOK_GT '(' express ')'
   35      | TOK_ALLOC TOK_LT TOK_STRUCT . TOK_IDENT TOK_GT '(' ')'

    TOK_IDENT  shift, and go to state 146


State 121

   36 alloc: TOK_ALLOC TOK_LT TOK_ARRAY . TOK_LT type TOK_GT TOK_GT '(' ')'
   37      | TOK_ALLOC TOK_LT TOK_ARRAY . TOK_LT type TOK_GT TOK_GT '(' express ')'

    TOK_LT  shift, and go to state 147


State 122

   32 alloc: TOK_ALLOC TOK_LT TOK_STRING . TOK_GT '(' ')'
   33      | TOK_ALLOC TOK_LT TOK_STRING . TOK_GT '(' express ')'

    TOK_GT  shift, and go to state 148


State 123

   24 while: TOK_WHILE '(' express . ')' select
   59 binop: express . '=' express
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   66      | express . '+' express
   67      | express . '-' express
   68      | express . '*' express
   69      | express . '/' express
   70      | express . '%' express
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 101
    TOK_LE     shift, and go to state 102
    TOK_EQ     shift, and go to state 103
    TOK_NE     shift, and go to state 104
    TOK_GT     shift, and go to state 105
    TOK_LT     shift, and go to state 106
    TOK_ARROW  shift, and go to state 107
    '='        shift, and go to state 108
    '+'        shift, and go to state 109
    '-'        shift, and go to state 110
    '*'        shift, and go to state 111
    '/'        shift, and go to state 112
    '%'        shift, and go to state 113
    '['        shift, and go to state 114
    ')'        shift, and go to state 149


State 124

   31 return: TOK_RETURN express ';' .

    $default  reduce using rule 31 (return)


State 125

   22 call: TOK_IDENT '(' ')' .

    $default  reduce using rule 22 (call)


State 126

   20 callParam: TOK_IDENT '(' express .
   59 binop: express . '=' express
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   66      | express . '+' express
   67      | express . '-' express
   68      | express . '*' express
   69      | express . '/' express
   70      | express . '%' express
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 101
    TOK_LE     shift, and go to state 102
    TOK_EQ     shift, and go to state 103
    TOK_NE     shift, and go to state 104
    TOK_GT     shift, and go to state 105
    TOK_LT     shift, and go to state 106
    TOK_ARROW  shift, and go to state 107
    '='        shift, and go to state 108
    '+'        shift, and go to state 109
    '-'        shift, and go to state 110
    '*'        shift, and go to state 111
    '/'        shift, and go to state 112
    '%'        shift, and go to state 113
    '['        shift, and go to state 114

    $default  reduce using rule 20 (callParam)


State 127

   56 express: '(' express ')' .

    $default  reduce using rule 56 (express)


State 128

   40 block: '{' blockBody '}' .

    $default  reduce using rule 40 (block)


State 129

   21 callParam: callParam ',' express .
   59 binop: express . '=' express
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   66      | express . '+' express
   67      | express . '-' express
   68      | express . '*' express
   69      | express . '/' express
   70      | express . '%' express
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 101
    TOK_LE     shift, and go to state 102
    TOK_EQ     shift, and go to state 103
    TOK_NE     shift, and go to state 104
    TOK_GT     shift, and go to state 105
    TOK_LT     shift, and go to state 106
    TOK_ARROW  shift, and go to state 107
    '='        shift, and go to state 108
    '+'        shift, and go to state 109
    '-'        shift, and go to state 110
    '*'        shift, and go to state 111
    '/'        shift, and go to state 112
    '%'        shift, and go to state 113
    '['        shift, and go to state 114

    $default  reduce using rule 21 (callParam)


State 130

   38 blockS: '{' blockBodyS '}' ';' .

    $default  reduce using rule 38 (blockS)


State 131

   59 binop: express . '=' express
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   63      | express TOK_GE express .
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   66      | express . '+' express
   67      | express . '-' express
   68      | express . '*' express
   69      | express . '/' express
   70      | express . '%' express
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 107
    '+'        shift, and go to state 109
    '-'        shift, and go to state 110
    '*'        shift, and go to state 111
    '/'        shift, and go to state 112
    '%'        shift, and go to state 113
    '['        shift, and go to state 114

    $default  reduce using rule 63 (binop)


State 132

   59 binop: express . '=' express
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   65      | express TOK_LE express .
   66      | express . '+' express
   67      | express . '-' express
   68      | express . '*' express
   69      | express . '/' express
   70      | express . '%' express
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 107
    '+'        shift, and go to state 109
    '-'        shift, and go to state 110
    '*'        shift, and go to state 111
    '/'        shift, and go to state 112
    '%'        shift, and go to state 113
    '['        shift, and go to state 114

    $default  reduce using rule 65 (binop)


State 133

   59 binop: express . '=' express
   60      | express . TOK_EQ express
   60      | express TOK_EQ express .
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   66      | express . '+' express
   67      | express . '-' express
   68      | express . '*' express
   69      | express . '/' express
   70      | express . '%' express
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 107
    '+'        shift, and go to state 109
    '-'        shift, and go to state 110
    '*'        shift, and go to state 111
    '/'        shift, and go to state 112
    '%'        shift, and go to state 113
    '['        shift, and go to state 114

    $default  reduce using rule 60 (binop)


State 134

   59 binop: express . '=' express
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   61      | express TOK_NE express .
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   66      | express . '+' express
   67      | express . '-' express
   68      | express . '*' express
   69      | express . '/' express
   70      | express . '%' express
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 107
    '+'        shift, and go to state 109
    '-'        shift, and go to state 110
    '*'        shift, and go to state 111
    '/'        shift, and go to state 112
    '%'        shift, and go to state 113
    '['        shift, and go to state 114

    $default  reduce using rule 61 (binop)


State 135

   59 binop: express . '=' express
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   62      | express TOK_GT express .
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   66      | express . '+' express
   67      | express . '-' express
   68      | express . '*' express
   69      | express . '/' express
   70      | express . '%' express
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 107
    '+'        shift, and go to state 109
    '-'        shift, and go to state 110
    '*'        shift, and go to state 111
    '/'        shift, and go to state 112
    '%'        shift, and go to state 113
    '['        shift, and go to state 114

    $default  reduce using rule 62 (binop)


State 136

   59 binop: express . '=' express
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   64      | express TOK_LT express .
   65      | express . TOK_LE express
   66      | express . '+' express
   67      | express . '-' express
   68      | express . '*' express
   69      | express . '/' express
   70      | express . '%' express
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 107
    '+'        shift, and go to state 109
    '-'        shift, and go to state 110
    '*'        shift, and go to state 111
    '/'        shift, and go to state 112
    '%'        shift, and go to state 113
    '['        shift, and go to state 114

    $default  reduce using rule 64 (binop)


State 137

   76 var: express TOK_ARROW TOK_IDENT .

    $default  reduce using rule 76 (var)


State 138

   59 binop: express . '=' express
   59      | express '=' express .
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   66      | express . '+' express
   67      | express . '-' express
   68      | express . '*' express
   69      | express . '/' express
   70      | express . '%' express
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 101
    TOK_LE     shift, and go to state 102
    TOK_EQ     shift, and go to state 103
    TOK_NE     shift, and go to state 104
    TOK_GT     shift, and go to state 105
    TOK_LT     shift, and go to state 106
    TOK_ARROW  shift, and go to state 107
    '='        shift, and go to state 108
    '+'        shift, and go to state 109
    '-'        shift, and go to state 110
    '*'        shift, and go to state 111
    '/'        shift, and go to state 112
    '%'        shift, and go to state 113
    '['        shift, and go to state 114

    $default  reduce using rule 59 (binop)


State 139

   59 binop: express . '=' express
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   66      | express . '+' express
   66      | express '+' express .
   67      | express . '-' express
   68      | express . '*' express
   69      | express . '/' express
   70      | express . '%' express
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 107
    '*'        shift, and go to state 111
    '/'        shift, and go to state 112
    '%'        shift, and go to state 113
    '['        shift, and go to state 114

    $default  reduce using rule 66 (binop)


State 140

   59 binop: express . '=' express
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   66      | express . '+' express
   67      | express . '-' express
   67      | express '-' express .
   68      | express . '*' express
   69      | express . '/' express
   70      | express . '%' express
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 107
    '*'        shift, and go to state 111
    '/'        shift, and go to state 112
    '%'        shift, and go to state 113
    '['        shift, and go to state 114

    $default  reduce using rule 67 (binop)


State 141

   59 binop: express . '=' express
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   66      | express . '+' express
   67      | express . '-' express
   68      | express . '*' express
   68      | express '*' express .
   69      | express . '/' express
   70      | express . '%' express
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 107
    '['        shift, and go to state 114

    $default  reduce using rule 68 (binop)


State 142

   59 binop: express . '=' express
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   66      | express . '+' express
   67      | express . '-' express
   68      | express . '*' express
   69      | express . '/' express
   69      | express '/' express .
   70      | express . '%' express
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 107
    '['        shift, and go to state 114

    $default  reduce using rule 69 (binop)


State 143

   59 binop: express . '=' express
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   66      | express . '+' express
   67      | express . '-' express
   68      | express . '*' express
   69      | express . '/' express
   70      | express . '%' express
   70      | express '%' express .
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 107
    '['        shift, and go to state 114

    $default  reduce using rule 70 (binop)


State 144

   59 binop: express . '=' express
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   66      | express . '+' express
   67      | express . '-' express
   68      | express . '*' express
   69      | express . '/' express
   70      | express . '%' express
   75 var: express . '[' express ']'
   75    | express '[' express . ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 101
    TOK_LE     shift, and go to state 102
    TOK_EQ     shift, and go to state 103
    TOK_NE     shift, and go to state 104
    TOK_GT     shift, and go to state 105
    TOK_LT     shift, and go to state 106
    TOK_ARROW  shift, and go to state 107
    '='        shift, and go to state 108
    '+'        shift, and go to state 109
    '-'        shift, and go to state 110
    '*'        shift, and go to state 111
    '/'        shift, and go to state 112
    '%'        shift, and go to state 113
    '['        shift, and go to state 114
    ']'        shift, and go to state 150


State 145

   26 ifelse: TOK_IF '(' express ')' . select else

    TOK_NULLPTR    shift, and go to state 38
    TOK_IF         shift, and go to state 39
    TOK_ELSE       shift, and go to state 40
    TOK_ARRAY      shift, and go to state 6
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_PTR        shift, and go to state 7
    TOK_WHILE      shift, and go to state 43
    TOK_VOID       shift, and go to state 8
    TOK_RETURN     shift, and go to state 44
    TOK_INT        shift, and go to state 9
    TOK_CHAR       shift, and go to state 10
    TOK_STRING     shift, and go to state 11
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51
    ';'            shift, and go to state 52
    '{'            shift, and go to state 54

    vardecl    go to state 55
    callParam  go to state 56
    call       go to state 57
    while      go to state 58
    select     go to state 151
    ifelse     go to state 59
    return     go to state 60
    alloc      go to state 61
    block      go to state 63
    state      go to state 83
    express    go to state 66
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    type       go to state 70
    type_id    go to state 18
    constant   go to state 71


State 146

   34 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT . TOK_GT '(' express ')'
   35      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT . TOK_GT '(' ')'

    TOK_GT  shift, and go to state 152


State 147

   36 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT . type TOK_GT TOK_GT '(' ')'
   37      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT . type TOK_GT TOK_GT '(' express ')'

    TOK_ARRAY   shift, and go to state 6
    TOK_PTR     shift, and go to state 7
    TOK_VOID    shift, and go to state 8
    TOK_INT     shift, and go to state 9
    TOK_CHAR    shift, and go to state 10
    TOK_STRING  shift, and go to state 11

    type     go to state 153
    type_id  go to state 18


State 148

   32 alloc: TOK_ALLOC TOK_LT TOK_STRING TOK_GT . '(' ')'
   33      | TOK_ALLOC TOK_LT TOK_STRING TOK_GT . '(' express ')'

    '('  shift, and go to state 154


State 149

   24 while: TOK_WHILE '(' express ')' . select

    TOK_NULLPTR    shift, and go to state 38
    TOK_IF         shift, and go to state 39
    TOK_ELSE       shift, and go to state 40
    TOK_ARRAY      shift, and go to state 6
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_PTR        shift, and go to state 7
    TOK_WHILE      shift, and go to state 43
    TOK_VOID       shift, and go to state 8
    TOK_RETURN     shift, and go to state 44
    TOK_INT        shift, and go to state 9
    TOK_CHAR       shift, and go to state 10
    TOK_STRING     shift, and go to state 11
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51
    ';'            shift, and go to state 52
    '{'            shift, and go to state 54

    vardecl    go to state 55
    callParam  go to state 56
    call       go to state 57
    while      go to state 58
    select     go to state 155
    ifelse     go to state 59
    return     go to state 60
    alloc      go to state 61
    block      go to state 63
    state      go to state 83
    express    go to state 66
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    type       go to state 70
    type_id    go to state 18
    constant   go to state 71


State 150

   75 var: express '[' express ']' .

    $default  reduce using rule 75 (var)


State 151

   26 ifelse: TOK_IF '(' express ')' select . else

    TOK_ELSE  shift, and go to state 156

    $default  reduce using rule 29 (else)

    else  go to state 157


State 152

   34 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT . '(' express ')'
   35      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT . '(' ')'

    '('  shift, and go to state 158


State 153

   36 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type . TOK_GT TOK_GT '(' ')'
   37      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type . TOK_GT TOK_GT '(' express ')'

    TOK_GT  shift, and go to state 159


State 154

   32 alloc: TOK_ALLOC TOK_LT TOK_STRING TOK_GT '(' . ')'
   33      | TOK_ALLOC TOK_LT TOK_STRING TOK_GT '(' . express ')'

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51
    ')'            shift, and go to state 160

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 161
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 155

   24 while: TOK_WHILE '(' express ')' select .

    $default  reduce using rule 24 (while)


State 156

   28 else: TOK_ELSE . state

    TOK_NULLPTR    shift, and go to state 38
    TOK_IF         shift, and go to state 39
    TOK_ELSE       shift, and go to state 40
    TOK_ARRAY      shift, and go to state 6
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_PTR        shift, and go to state 7
    TOK_WHILE      shift, and go to state 43
    TOK_VOID       shift, and go to state 8
    TOK_RETURN     shift, and go to state 44
    TOK_INT        shift, and go to state 9
    TOK_CHAR       shift, and go to state 10
    TOK_STRING     shift, and go to state 11
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51
    ';'            shift, and go to state 52
    '{'            shift, and go to state 54

    vardecl    go to state 55
    callParam  go to state 56
    call       go to state 57
    while      go to state 58
    ifelse     go to state 59
    return     go to state 60
    alloc      go to state 61
    block      go to state 63
    state      go to state 162
    express    go to state 66
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    type       go to state 70
    type_id    go to state 18
    constant   go to state 71


State 157

   26 ifelse: TOK_IF '(' express ')' select else .

    $default  reduce using rule 26 (ifelse)


State 158

   34 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' . express ')'
   35      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' . ')'

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51
    ')'            shift, and go to state 163

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 164
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 159

   36 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT . TOK_GT '(' ')'
   37      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT . TOK_GT '(' express ')'

    TOK_GT  shift, and go to state 165


State 160

   32 alloc: TOK_ALLOC TOK_LT TOK_STRING TOK_GT '(' ')' .

    $default  reduce using rule 32 (alloc)


State 161

   33 alloc: TOK_ALLOC TOK_LT TOK_STRING TOK_GT '(' express . ')'
   59 binop: express . '=' express
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   66      | express . '+' express
   67      | express . '-' express
   68      | express . '*' express
   69      | express . '/' express
   70      | express . '%' express
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 101
    TOK_LE     shift, and go to state 102
    TOK_EQ     shift, and go to state 103
    TOK_NE     shift, and go to state 104
    TOK_GT     shift, and go to state 105
    TOK_LT     shift, and go to state 106
    TOK_ARROW  shift, and go to state 107
    '='        shift, and go to state 108
    '+'        shift, and go to state 109
    '-'        shift, and go to state 110
    '*'        shift, and go to state 111
    '/'        shift, and go to state 112
    '%'        shift, and go to state 113
    '['        shift, and go to state 114
    ')'        shift, and go to state 166


State 162

   28 else: TOK_ELSE state .

    $default  reduce using rule 28 (else)


State 163

   35 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' ')' .

    $default  reduce using rule 35 (alloc)


State 164

   34 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' express . ')'
   59 binop: express . '=' express
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   66      | express . '+' express
   67      | express . '-' express
   68      | express . '*' express
   69      | express . '/' express
   70      | express . '%' express
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 101
    TOK_LE     shift, and go to state 102
    TOK_EQ     shift, and go to state 103
    TOK_NE     shift, and go to state 104
    TOK_GT     shift, and go to state 105
    TOK_LT     shift, and go to state 106
    TOK_ARROW  shift, and go to state 107
    '='        shift, and go to state 108
    '+'        shift, and go to state 109
    '-'        shift, and go to state 110
    '*'        shift, and go to state 111
    '/'        shift, and go to state 112
    '%'        shift, and go to state 113
    '['        shift, and go to state 114
    ')'        shift, and go to state 167


State 165

   36 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT . '(' ')'
   37      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT . '(' express ')'

    '('  shift, and go to state 168


State 166

   33 alloc: TOK_ALLOC TOK_LT TOK_STRING TOK_GT '(' express ')' .

    $default  reduce using rule 33 (alloc)


State 167

   34 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' express ')' .

    $default  reduce using rule 34 (alloc)


State 168

   36 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' . ')'
   37      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' . express ')'

    TOK_NULLPTR    shift, and go to state 38
    TOK_NOT        shift, and go to state 41
    TOK_ALLOC      shift, and go to state 42
    TOK_CHARCON    shift, and go to state 45
    TOK_STRINGCON  shift, and go to state 46
    TOK_INTCON     shift, and go to state 47
    TOK_IDENT      shift, and go to state 48
    '+'            shift, and go to state 49
    '-'            shift, and go to state 50
    '('            shift, and go to state 51
    ')'            shift, and go to state 169

    callParam  go to state 56
    call       go to state 57
    alloc      go to state 61
    express    go to state 170
    binop      go to state 67
    unop       go to state 68
    var        go to state 69
    constant   go to state 71


State 169

   36 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' ')' .

    $default  reduce using rule 36 (alloc)


State 170

   37 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express . ')'
   59 binop: express . '=' express
   60      | express . TOK_EQ express
   61      | express . TOK_NE express
   62      | express . TOK_GT express
   63      | express . TOK_GE express
   64      | express . TOK_LT express
   65      | express . TOK_LE express
   66      | express . '+' express
   67      | express . '-' express
   68      | express . '*' express
   69      | express . '/' express
   70      | express . '%' express
   75 var: express . '[' express ']'
   76    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 101
    TOK_LE     shift, and go to state 102
    TOK_EQ     shift, and go to state 103
    TOK_NE     shift, and go to state 104
    TOK_GT     shift, and go to state 105
    TOK_LT     shift, and go to state 106
    TOK_ARROW  shift, and go to state 107
    '='        shift, and go to state 108
    '+'        shift, and go to state 109
    '-'        shift, and go to state 110
    '*'        shift, and go to state 111
    '/'        shift, and go to state 112
    '%'        shift, and go to state 113
    '['        shift, and go to state 114
    ')'        shift, and go to state 171


State 171

   37 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express ')' .

    $default  reduce using rule 37 (alloc)
