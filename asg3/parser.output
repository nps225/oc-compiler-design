Nonterminals useless in grammar

   struct


Terminals unused in grammar

   ROOT
   IDENT
   NUMBER
   TYPE_ID
   FUNCTION
   TOK_PARAM
   TOK_PROTOTYPE
   BLOCK
   TOK_INDEX
   CALL
   ENDIF
   TOK_NOT
   '^'


Rules useless in grammar

   79 struct: TOK_STRUCT TOK_IDENT '{' '}' ';'
   80       | TOK_STRUCT TOK_IDENT block ';'


State 23 conflicts: 19 shift/reduce
State 26 conflicts: 22 reduce/reduce
State 52 conflicts: 2 shift/reduce
State 53 conflicts: 2 shift/reduce
State 101 conflicts: 14 shift/reduce


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program state
    3        | program vardecl
    4        | program function
    5        | program error ';'
    6        | program ';'
    7        | %empty

    8 function: identif '(' ')' ';'
    9         | identif param ')' ';'
   10         | identif '(' ')' block
   11         | identif param ')' block

   12 vardecl: type TOK_IDENT ';'
   13        | type TOK_IDENT '=' express ';'

   14 identif: type TOK_IDENT

   15 param: '(' identif
   16      | param ',' identif

   17 callParam: TOK_IDENT '(' express
   18          | callParam ',' express

   19 call: TOK_IDENT '(' ')'
   20     | callParam ')'

   21 while: TOK_WHILE '(' express ')' select

   22 select: block
   23       | express ';'

   24 ifelse: TOK_IF '(' express ')' select
   25       | TOK_IF '(' express ')' select TOK_ELSE select

   26 return: TOK_RETURN ';'
   27       | TOK_RETURN express ';'

   28 alloc: TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT '(' ')'
   29      | TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT '(' express ')'
   30      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' express ')'
   31      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' ')'
   32      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' ')'
   33      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express ')'

   34 block: blockBody '}'

   35 blockBody: '{' state
   36          | blockBody state
   37          | '{'

   38 state: vardecl
   39      | block
   40      | while
   41      | ifelse
   42      | return
   43      | express ';'

   44 express: express binop express
   45        | unop
   46        | alloc
   47        | call
   48        | '(' express ')'
   49        | var
   50        | constant

   51 binop: '='
   52      | TOK_EQ
   53      | TOK_NE
   54      | TOK_GT
   55      | TOK_GE
   56      | TOK_LT
   57      | TOK_LE
   58      | '+'
   59      | '-'
   60      | '*'
   61      | '/'
   62      | '%'

   63 unop: '+' express
   64     | '-' express

   65 var: TOK_IDENT
   66    | express '[' express ']'
   67    | express TOK_ARROW TOK_IDENT

   68 type: type_id
   69     | TOK_ARRAY TOK_LT type_id TOK_GT

   70 type_id: TOK_INT
   71        | TOK_STRING
   72        | TOK_CHAR
   73        | TOK_VOID
   74        | TOK_PTR TOK_LT TOK_STRUCT TOK_IDENT TOK_GT

   75 constant: TOK_INTCON
   76         | TOK_STRINGCON
   77         | TOK_CHARCON
   78         | TOK_NULLPTR


Terminals, with rules where they appear

$end (0) 0
'%' (37) 62
'(' (40) 8 10 15 17 19 21 24 25 28 29 30 31 32 33 48
')' (41) 8 9 10 11 19 20 21 24 25 28 29 30 31 32 33 48
'*' (42) 60
'+' (43) 58 63
',' (44) 16 18
'-' (45) 59 64
'/' (47) 61
';' (59) 5 6 8 9 12 13 23 26 27 43
'=' (61) 13 51
'[' (91) 66
']' (93) 66
'^' (94)
'{' (123) 35 37
'}' (125) 34
error (256) 5
ROOT (258)
IDENT (259)
NUMBER (260)
TYPE_ID (261)
FUNCTION (262)
TOK_PARAM (263)
TOK_PROTOTYPE (264)
BLOCK (265)
TOK_NULLPTR (266) 78
TOK_INDEX (267)
CALL (268)
ENDIF (269)
TOK_GE (270) 55
TOK_LE (271) 57
TOK_EQ (272) 52
TOK_NE (273) 53
TOK_GT (274) 28 29 30 31 32 33 54 69 74
TOK_LT (275) 28 29 30 31 32 33 56 69 74
TOK_IF (276) 24 25
TOK_ELSE (277) 25
TOK_STRUCT (278) 30 31 74
TOK_ARRAY (279) 32 33 69
TOK_NOT (280)
TOK_ALLOC (281) 28 29 30 31 32 33
TOK_PTR (282) 74
TOK_ARROW (283) 67
TOK_WHILE (284) 21
TOK_VOID (285) 73
TOK_RETURN (286) 26 27
TOK_INT (287) 70
TOK_CHAR (288) 72
TOK_STRING (289) 71
TOK_CHARCON (290) 77
TOK_STRINGCON (291) 28 29 76
TOK_INTCON (292) 75
TOK_IDENT (293) 12 13 14 17 19 30 31 65 67 74
POS (294)
NEG (295)


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
start (57)
    on left: 1, on right: 0
program (58)
    on left: 2 3 4 5 6 7, on right: 1 2 3 4 5 6
function (59)
    on left: 8 9 10 11, on right: 4
vardecl (60)
    on left: 12 13, on right: 3 38
identif (61)
    on left: 14, on right: 8 9 10 11 15 16
param (62)
    on left: 15 16, on right: 9 11 16
callParam (63)
    on left: 17 18, on right: 18 20
call (64)
    on left: 19 20, on right: 47
while (65)
    on left: 21, on right: 40
select (66)
    on left: 22 23, on right: 21 24 25
ifelse (67)
    on left: 24 25, on right: 41
return (68)
    on left: 26 27, on right: 42
alloc (69)
    on left: 28 29 30 31 32 33, on right: 46
block (70)
    on left: 34, on right: 10 11 22 39
blockBody (71)
    on left: 35 36 37, on right: 34 36
state (72)
    on left: 38 39 40 41 42 43, on right: 2 35 36
express (73)
    on left: 44 45 46 47 48 49 50, on right: 13 17 18 21 23 24 25 27
    29 30 33 43 44 48 63 64 66 67
binop (74)
    on left: 51 52 53 54 55 56 57 58 59 60 61 62, on right: 44
unop (75)
    on left: 63 64, on right: 45
var (76)
    on left: 65 66 67, on right: 49
type (77)
    on left: 68 69, on right: 12 13 14 32 33
type_id (78)
    on left: 70 71 72 73 74, on right: 68 69
constant (79)
    on left: 75 76 77 78, on right: 50


State 0

    0 $accept: . start $end

    $default  reduce using rule 7 (program)

    start    go to state 1
    program  go to state 2


State 1

    0 $accept: start . $end

    $end  shift, and go to state 3


State 2

    1 start: program .
    2 program: program . state
    3        | program . vardecl
    4        | program . function
    5        | program . error ';'
    6        | program . ';'

    error          shift, and go to state 4
    TOK_NULLPTR    shift, and go to state 5
    TOK_IF         shift, and go to state 6
    TOK_ARRAY      shift, and go to state 7
    TOK_ALLOC      shift, and go to state 8
    TOK_PTR        shift, and go to state 9
    TOK_WHILE      shift, and go to state 10
    TOK_VOID       shift, and go to state 11
    TOK_RETURN     shift, and go to state 12
    TOK_INT        shift, and go to state 13
    TOK_CHAR       shift, and go to state 14
    TOK_STRING     shift, and go to state 15
    TOK_CHARCON    shift, and go to state 16
    TOK_STRINGCON  shift, and go to state 17
    TOK_INTCON     shift, and go to state 18
    TOK_IDENT      shift, and go to state 19
    '+'            shift, and go to state 20
    '-'            shift, and go to state 21
    ';'            shift, and go to state 22
    '{'            shift, and go to state 23
    '('            shift, and go to state 24

    $end  reduce using rule 1 (start)

    function   go to state 25
    vardecl    go to state 26
    identif    go to state 27
    callParam  go to state 28
    call       go to state 29
    while      go to state 30
    ifelse     go to state 31
    return     go to state 32
    alloc      go to state 33
    block      go to state 34
    blockBody  go to state 35
    state      go to state 36
    express    go to state 37
    unop       go to state 38
    var        go to state 39
    type       go to state 40
    type_id    go to state 41
    constant   go to state 42


State 3

    0 $accept: start $end .

    $default  accept


State 4

    5 program: program error . ';'

    ';'  shift, and go to state 43


State 5

   78 constant: TOK_NULLPTR .

    $default  reduce using rule 78 (constant)


State 6

   24 ifelse: TOK_IF . '(' express ')' select
   25       | TOK_IF . '(' express ')' select TOK_ELSE select

    '('  shift, and go to state 44


State 7

   69 type: TOK_ARRAY . TOK_LT type_id TOK_GT

    TOK_LT  shift, and go to state 45


State 8

   28 alloc: TOK_ALLOC . TOK_LT TOK_STRINGCON TOK_GT '(' ')'
   29      | TOK_ALLOC . TOK_LT TOK_STRINGCON TOK_GT '(' express ')'
   30      | TOK_ALLOC . TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' express ')'
   31      | TOK_ALLOC . TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' ')'
   32      | TOK_ALLOC . TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' ')'
   33      | TOK_ALLOC . TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express ')'

    TOK_LT  shift, and go to state 46


State 9

   74 type_id: TOK_PTR . TOK_LT TOK_STRUCT TOK_IDENT TOK_GT

    TOK_LT  shift, and go to state 47


State 10

   21 while: TOK_WHILE . '(' express ')' select

    '('  shift, and go to state 48


State 11

   73 type_id: TOK_VOID .

    $default  reduce using rule 73 (type_id)


State 12

   26 return: TOK_RETURN . ';'
   27       | TOK_RETURN . express ';'

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 16
    TOK_STRINGCON  shift, and go to state 17
    TOK_INTCON     shift, and go to state 18
    TOK_IDENT      shift, and go to state 19
    '+'            shift, and go to state 20
    '-'            shift, and go to state 21
    ';'            shift, and go to state 49
    '('            shift, and go to state 24

    callParam  go to state 28
    call       go to state 29
    alloc      go to state 33
    express    go to state 50
    unop       go to state 38
    var        go to state 39
    constant   go to state 42


State 13

   70 type_id: TOK_INT .

    $default  reduce using rule 70 (type_id)


State 14

   72 type_id: TOK_CHAR .

    $default  reduce using rule 72 (type_id)


State 15

   71 type_id: TOK_STRING .

    $default  reduce using rule 71 (type_id)


State 16

   77 constant: TOK_CHARCON .

    $default  reduce using rule 77 (constant)


State 17

   76 constant: TOK_STRINGCON .

    $default  reduce using rule 76 (constant)


State 18

   75 constant: TOK_INTCON .

    $default  reduce using rule 75 (constant)


State 19

   17 callParam: TOK_IDENT . '(' express
   19 call: TOK_IDENT . '(' ')'
   65 var: TOK_IDENT .

    '('  shift, and go to state 51

    $default  reduce using rule 65 (var)


State 20

   63 unop: '+' . express

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 16
    TOK_STRINGCON  shift, and go to state 17
    TOK_INTCON     shift, and go to state 18
    TOK_IDENT      shift, and go to state 19
    '+'            shift, and go to state 20
    '-'            shift, and go to state 21
    '('            shift, and go to state 24

    callParam  go to state 28
    call       go to state 29
    alloc      go to state 33
    express    go to state 52
    unop       go to state 38
    var        go to state 39
    constant   go to state 42


State 21

   64 unop: '-' . express

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 16
    TOK_STRINGCON  shift, and go to state 17
    TOK_INTCON     shift, and go to state 18
    TOK_IDENT      shift, and go to state 19
    '+'            shift, and go to state 20
    '-'            shift, and go to state 21
    '('            shift, and go to state 24

    callParam  go to state 28
    call       go to state 29
    alloc      go to state 33
    express    go to state 53
    unop       go to state 38
    var        go to state 39
    constant   go to state 42


State 22

    6 program: program ';' .

    $default  reduce using rule 6 (program)


State 23

   35 blockBody: '{' . state
   37          | '{' .

    TOK_NULLPTR    shift, and go to state 5
    TOK_IF         shift, and go to state 6
    TOK_ARRAY      shift, and go to state 7
    TOK_ALLOC      shift, and go to state 8
    TOK_PTR        shift, and go to state 9
    TOK_WHILE      shift, and go to state 10
    TOK_VOID       shift, and go to state 11
    TOK_RETURN     shift, and go to state 12
    TOK_INT        shift, and go to state 13
    TOK_CHAR       shift, and go to state 14
    TOK_STRING     shift, and go to state 15
    TOK_CHARCON    shift, and go to state 16
    TOK_STRINGCON  shift, and go to state 17
    TOK_INTCON     shift, and go to state 18
    TOK_IDENT      shift, and go to state 19
    '+'            shift, and go to state 20
    '-'            shift, and go to state 21
    '{'            shift, and go to state 23
    '('            shift, and go to state 24

    TOK_NULLPTR    [reduce using rule 37 (blockBody)]
    TOK_IF         [reduce using rule 37 (blockBody)]
    TOK_ARRAY      [reduce using rule 37 (blockBody)]
    TOK_ALLOC      [reduce using rule 37 (blockBody)]
    TOK_PTR        [reduce using rule 37 (blockBody)]
    TOK_WHILE      [reduce using rule 37 (blockBody)]
    TOK_VOID       [reduce using rule 37 (blockBody)]
    TOK_RETURN     [reduce using rule 37 (blockBody)]
    TOK_INT        [reduce using rule 37 (blockBody)]
    TOK_CHAR       [reduce using rule 37 (blockBody)]
    TOK_STRING     [reduce using rule 37 (blockBody)]
    TOK_CHARCON    [reduce using rule 37 (blockBody)]
    TOK_STRINGCON  [reduce using rule 37 (blockBody)]
    TOK_INTCON     [reduce using rule 37 (blockBody)]
    TOK_IDENT      [reduce using rule 37 (blockBody)]
    '+'            [reduce using rule 37 (blockBody)]
    '-'            [reduce using rule 37 (blockBody)]
    '{'            [reduce using rule 37 (blockBody)]
    '('            [reduce using rule 37 (blockBody)]
    $default       reduce using rule 37 (blockBody)

    vardecl    go to state 54
    callParam  go to state 28
    call       go to state 29
    while      go to state 30
    ifelse     go to state 31
    return     go to state 32
    alloc      go to state 33
    block      go to state 34
    blockBody  go to state 35
    state      go to state 55
    express    go to state 37
    unop       go to state 38
    var        go to state 39
    type       go to state 56
    type_id    go to state 41
    constant   go to state 42


State 24

   48 express: '(' . express ')'

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 16
    TOK_STRINGCON  shift, and go to state 17
    TOK_INTCON     shift, and go to state 18
    TOK_IDENT      shift, and go to state 19
    '+'            shift, and go to state 20
    '-'            shift, and go to state 21
    '('            shift, and go to state 24

    callParam  go to state 28
    call       go to state 29
    alloc      go to state 33
    express    go to state 57
    unop       go to state 38
    var        go to state 39
    constant   go to state 42


State 25

    4 program: program function .

    $default  reduce using rule 4 (program)


State 26

    3 program: program vardecl .
   38 state: vardecl .

    $end           reduce using rule 3 (program)
    $end           [reduce using rule 38 (state)]
    error          reduce using rule 3 (program)
    error          [reduce using rule 38 (state)]
    TOK_NULLPTR    reduce using rule 3 (program)
    TOK_NULLPTR    [reduce using rule 38 (state)]
    TOK_IF         reduce using rule 3 (program)
    TOK_IF         [reduce using rule 38 (state)]
    TOK_ARRAY      reduce using rule 3 (program)
    TOK_ARRAY      [reduce using rule 38 (state)]
    TOK_ALLOC      reduce using rule 3 (program)
    TOK_ALLOC      [reduce using rule 38 (state)]
    TOK_PTR        reduce using rule 3 (program)
    TOK_PTR        [reduce using rule 38 (state)]
    TOK_WHILE      reduce using rule 3 (program)
    TOK_WHILE      [reduce using rule 38 (state)]
    TOK_VOID       reduce using rule 3 (program)
    TOK_VOID       [reduce using rule 38 (state)]
    TOK_RETURN     reduce using rule 3 (program)
    TOK_RETURN     [reduce using rule 38 (state)]
    TOK_INT        reduce using rule 3 (program)
    TOK_INT        [reduce using rule 38 (state)]
    TOK_CHAR       reduce using rule 3 (program)
    TOK_CHAR       [reduce using rule 38 (state)]
    TOK_STRING     reduce using rule 3 (program)
    TOK_STRING     [reduce using rule 38 (state)]
    TOK_CHARCON    reduce using rule 3 (program)
    TOK_CHARCON    [reduce using rule 38 (state)]
    TOK_STRINGCON  reduce using rule 3 (program)
    TOK_STRINGCON  [reduce using rule 38 (state)]
    TOK_INTCON     reduce using rule 3 (program)
    TOK_INTCON     [reduce using rule 38 (state)]
    TOK_IDENT      reduce using rule 3 (program)
    TOK_IDENT      [reduce using rule 38 (state)]
    '+'            reduce using rule 3 (program)
    '+'            [reduce using rule 38 (state)]
    '-'            reduce using rule 3 (program)
    '-'            [reduce using rule 38 (state)]
    ';'            reduce using rule 3 (program)
    ';'            [reduce using rule 38 (state)]
    '{'            reduce using rule 3 (program)
    '{'            [reduce using rule 38 (state)]
    '('            reduce using rule 3 (program)
    '('            [reduce using rule 38 (state)]
    $default       reduce using rule 3 (program)


State 27

    8 function: identif . '(' ')' ';'
    9         | identif . param ')' ';'
   10         | identif . '(' ')' block
   11         | identif . param ')' block

    '('  shift, and go to state 58

    param  go to state 59


State 28

   18 callParam: callParam . ',' express
   20 call: callParam . ')'

    ')'  shift, and go to state 60
    ','  shift, and go to state 61


State 29

   47 express: call .

    $default  reduce using rule 47 (express)


State 30

   40 state: while .

    $default  reduce using rule 40 (state)


State 31

   41 state: ifelse .

    $default  reduce using rule 41 (state)


State 32

   42 state: return .

    $default  reduce using rule 42 (state)


State 33

   46 express: alloc .

    $default  reduce using rule 46 (express)


State 34

   39 state: block .

    $default  reduce using rule 39 (state)


State 35

   34 block: blockBody . '}'
   36 blockBody: blockBody . state

    TOK_NULLPTR    shift, and go to state 5
    TOK_IF         shift, and go to state 6
    TOK_ARRAY      shift, and go to state 7
    TOK_ALLOC      shift, and go to state 8
    TOK_PTR        shift, and go to state 9
    TOK_WHILE      shift, and go to state 10
    TOK_VOID       shift, and go to state 11
    TOK_RETURN     shift, and go to state 12
    TOK_INT        shift, and go to state 13
    TOK_CHAR       shift, and go to state 14
    TOK_STRING     shift, and go to state 15
    TOK_CHARCON    shift, and go to state 16
    TOK_STRINGCON  shift, and go to state 17
    TOK_INTCON     shift, and go to state 18
    TOK_IDENT      shift, and go to state 19
    '+'            shift, and go to state 20
    '-'            shift, and go to state 21
    '{'            shift, and go to state 23
    '}'            shift, and go to state 62
    '('            shift, and go to state 24

    vardecl    go to state 54
    callParam  go to state 28
    call       go to state 29
    while      go to state 30
    ifelse     go to state 31
    return     go to state 32
    alloc      go to state 33
    block      go to state 34
    blockBody  go to state 35
    state      go to state 63
    express    go to state 37
    unop       go to state 38
    var        go to state 39
    type       go to state 56
    type_id    go to state 41
    constant   go to state 42


State 36

    2 program: program state .

    $default  reduce using rule 2 (program)


State 37

   43 state: express . ';'
   44 express: express . binop express
   66 var: express . '[' express ']'
   67    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 64
    TOK_LE     shift, and go to state 65
    TOK_EQ     shift, and go to state 66
    TOK_NE     shift, and go to state 67
    TOK_GT     shift, and go to state 68
    TOK_LT     shift, and go to state 69
    TOK_ARROW  shift, and go to state 70
    '='        shift, and go to state 71
    '+'        shift, and go to state 72
    '-'        shift, and go to state 73
    '*'        shift, and go to state 74
    '/'        shift, and go to state 75
    '%'        shift, and go to state 76
    ';'        shift, and go to state 77
    '['        shift, and go to state 78

    binop  go to state 79


State 38

   45 express: unop .

    $default  reduce using rule 45 (express)


State 39

   49 express: var .

    $default  reduce using rule 49 (express)


State 40

   12 vardecl: type . TOK_IDENT ';'
   13        | type . TOK_IDENT '=' express ';'
   14 identif: type . TOK_IDENT

    TOK_IDENT  shift, and go to state 80


State 41

   68 type: type_id .

    $default  reduce using rule 68 (type)


State 42

   50 express: constant .

    $default  reduce using rule 50 (express)


State 43

    5 program: program error ';' .

    $default  reduce using rule 5 (program)


State 44

   24 ifelse: TOK_IF '(' . express ')' select
   25       | TOK_IF '(' . express ')' select TOK_ELSE select

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 16
    TOK_STRINGCON  shift, and go to state 17
    TOK_INTCON     shift, and go to state 18
    TOK_IDENT      shift, and go to state 19
    '+'            shift, and go to state 20
    '-'            shift, and go to state 21
    '('            shift, and go to state 24

    callParam  go to state 28
    call       go to state 29
    alloc      go to state 33
    express    go to state 81
    unop       go to state 38
    var        go to state 39
    constant   go to state 42


State 45

   69 type: TOK_ARRAY TOK_LT . type_id TOK_GT

    TOK_PTR     shift, and go to state 9
    TOK_VOID    shift, and go to state 11
    TOK_INT     shift, and go to state 13
    TOK_CHAR    shift, and go to state 14
    TOK_STRING  shift, and go to state 15

    type_id  go to state 82


State 46

   28 alloc: TOK_ALLOC TOK_LT . TOK_STRINGCON TOK_GT '(' ')'
   29      | TOK_ALLOC TOK_LT . TOK_STRINGCON TOK_GT '(' express ')'
   30      | TOK_ALLOC TOK_LT . TOK_STRUCT TOK_IDENT TOK_GT '(' express ')'
   31      | TOK_ALLOC TOK_LT . TOK_STRUCT TOK_IDENT TOK_GT '(' ')'
   32      | TOK_ALLOC TOK_LT . TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' ')'
   33      | TOK_ALLOC TOK_LT . TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express ')'

    TOK_STRUCT     shift, and go to state 83
    TOK_ARRAY      shift, and go to state 84
    TOK_STRINGCON  shift, and go to state 85


State 47

   74 type_id: TOK_PTR TOK_LT . TOK_STRUCT TOK_IDENT TOK_GT

    TOK_STRUCT  shift, and go to state 86


State 48

   21 while: TOK_WHILE '(' . express ')' select

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 16
    TOK_STRINGCON  shift, and go to state 17
    TOK_INTCON     shift, and go to state 18
    TOK_IDENT      shift, and go to state 19
    '+'            shift, and go to state 20
    '-'            shift, and go to state 21
    '('            shift, and go to state 24

    callParam  go to state 28
    call       go to state 29
    alloc      go to state 33
    express    go to state 87
    unop       go to state 38
    var        go to state 39
    constant   go to state 42


State 49

   26 return: TOK_RETURN ';' .

    $default  reduce using rule 26 (return)


State 50

   27 return: TOK_RETURN express . ';'
   44 express: express . binop express
   66 var: express . '[' express ']'
   67    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 64
    TOK_LE     shift, and go to state 65
    TOK_EQ     shift, and go to state 66
    TOK_NE     shift, and go to state 67
    TOK_GT     shift, and go to state 68
    TOK_LT     shift, and go to state 69
    TOK_ARROW  shift, and go to state 70
    '='        shift, and go to state 71
    '+'        shift, and go to state 72
    '-'        shift, and go to state 73
    '*'        shift, and go to state 74
    '/'        shift, and go to state 75
    '%'        shift, and go to state 76
    ';'        shift, and go to state 88
    '['        shift, and go to state 78

    binop  go to state 79


State 51

   17 callParam: TOK_IDENT '(' . express
   19 call: TOK_IDENT '(' . ')'

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 16
    TOK_STRINGCON  shift, and go to state 17
    TOK_INTCON     shift, and go to state 18
    TOK_IDENT      shift, and go to state 19
    '+'            shift, and go to state 20
    '-'            shift, and go to state 21
    '('            shift, and go to state 24
    ')'            shift, and go to state 89

    callParam  go to state 28
    call       go to state 29
    alloc      go to state 33
    express    go to state 90
    unop       go to state 38
    var        go to state 39
    constant   go to state 42


State 52

   44 express: express . binop express
   63 unop: '+' express .
   66 var: express . '[' express ']'
   67    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 70
    '['        shift, and go to state 78

    TOK_ARROW  [reduce using rule 63 (unop)]
    '['        [reduce using rule 63 (unop)]
    $default   reduce using rule 63 (unop)

    binop  go to state 79


State 53

   44 express: express . binop express
   64 unop: '-' express .
   66 var: express . '[' express ']'
   67    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 70
    '['        shift, and go to state 78

    TOK_ARROW  [reduce using rule 64 (unop)]
    '['        [reduce using rule 64 (unop)]
    $default   reduce using rule 64 (unop)

    binop  go to state 79


State 54

   38 state: vardecl .

    $default  reduce using rule 38 (state)


State 55

   35 blockBody: '{' state .

    $default  reduce using rule 35 (blockBody)


State 56

   12 vardecl: type . TOK_IDENT ';'
   13        | type . TOK_IDENT '=' express ';'

    TOK_IDENT  shift, and go to state 91


State 57

   44 express: express . binop express
   48        | '(' express . ')'
   66 var: express . '[' express ']'
   67    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 64
    TOK_LE     shift, and go to state 65
    TOK_EQ     shift, and go to state 66
    TOK_NE     shift, and go to state 67
    TOK_GT     shift, and go to state 68
    TOK_LT     shift, and go to state 69
    TOK_ARROW  shift, and go to state 70
    '='        shift, and go to state 71
    '+'        shift, and go to state 72
    '-'        shift, and go to state 73
    '*'        shift, and go to state 74
    '/'        shift, and go to state 75
    '%'        shift, and go to state 76
    ')'        shift, and go to state 92
    '['        shift, and go to state 78

    binop  go to state 79


State 58

    8 function: identif '(' . ')' ';'
   10         | identif '(' . ')' block
   15 param: '(' . identif

    TOK_ARRAY   shift, and go to state 7
    TOK_PTR     shift, and go to state 9
    TOK_VOID    shift, and go to state 11
    TOK_INT     shift, and go to state 13
    TOK_CHAR    shift, and go to state 14
    TOK_STRING  shift, and go to state 15
    ')'         shift, and go to state 93

    identif  go to state 94
    type     go to state 95
    type_id  go to state 41


State 59

    9 function: identif param . ')' ';'
   11         | identif param . ')' block
   16 param: param . ',' identif

    ')'  shift, and go to state 96
    ','  shift, and go to state 97


State 60

   20 call: callParam ')' .

    $default  reduce using rule 20 (call)


State 61

   18 callParam: callParam ',' . express

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 16
    TOK_STRINGCON  shift, and go to state 17
    TOK_INTCON     shift, and go to state 18
    TOK_IDENT      shift, and go to state 19
    '+'            shift, and go to state 20
    '-'            shift, and go to state 21
    '('            shift, and go to state 24

    callParam  go to state 28
    call       go to state 29
    alloc      go to state 33
    express    go to state 98
    unop       go to state 38
    var        go to state 39
    constant   go to state 42


State 62

   34 block: blockBody '}' .

    $default  reduce using rule 34 (block)


State 63

   36 blockBody: blockBody state .

    $default  reduce using rule 36 (blockBody)


State 64

   55 binop: TOK_GE .

    $default  reduce using rule 55 (binop)


State 65

   57 binop: TOK_LE .

    $default  reduce using rule 57 (binop)


State 66

   52 binop: TOK_EQ .

    $default  reduce using rule 52 (binop)


State 67

   53 binop: TOK_NE .

    $default  reduce using rule 53 (binop)


State 68

   54 binop: TOK_GT .

    $default  reduce using rule 54 (binop)


State 69

   56 binop: TOK_LT .

    $default  reduce using rule 56 (binop)


State 70

   67 var: express TOK_ARROW . TOK_IDENT

    TOK_IDENT  shift, and go to state 99


State 71

   51 binop: '=' .

    $default  reduce using rule 51 (binop)


State 72

   58 binop: '+' .

    $default  reduce using rule 58 (binop)


State 73

   59 binop: '-' .

    $default  reduce using rule 59 (binop)


State 74

   60 binop: '*' .

    $default  reduce using rule 60 (binop)


State 75

   61 binop: '/' .

    $default  reduce using rule 61 (binop)


State 76

   62 binop: '%' .

    $default  reduce using rule 62 (binop)


State 77

   43 state: express ';' .

    $default  reduce using rule 43 (state)


State 78

   66 var: express '[' . express ']'

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 16
    TOK_STRINGCON  shift, and go to state 17
    TOK_INTCON     shift, and go to state 18
    TOK_IDENT      shift, and go to state 19
    '+'            shift, and go to state 20
    '-'            shift, and go to state 21
    '('            shift, and go to state 24

    callParam  go to state 28
    call       go to state 29
    alloc      go to state 33
    express    go to state 100
    unop       go to state 38
    var        go to state 39
    constant   go to state 42


State 79

   44 express: express binop . express

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 16
    TOK_STRINGCON  shift, and go to state 17
    TOK_INTCON     shift, and go to state 18
    TOK_IDENT      shift, and go to state 19
    '+'            shift, and go to state 20
    '-'            shift, and go to state 21
    '('            shift, and go to state 24

    callParam  go to state 28
    call       go to state 29
    alloc      go to state 33
    express    go to state 101
    unop       go to state 38
    var        go to state 39
    constant   go to state 42


State 80

   12 vardecl: type TOK_IDENT . ';'
   13        | type TOK_IDENT . '=' express ';'
   14 identif: type TOK_IDENT .

    '='  shift, and go to state 102
    ';'  shift, and go to state 103

    $default  reduce using rule 14 (identif)


State 81

   24 ifelse: TOK_IF '(' express . ')' select
   25       | TOK_IF '(' express . ')' select TOK_ELSE select
   44 express: express . binop express
   66 var: express . '[' express ']'
   67    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 64
    TOK_LE     shift, and go to state 65
    TOK_EQ     shift, and go to state 66
    TOK_NE     shift, and go to state 67
    TOK_GT     shift, and go to state 68
    TOK_LT     shift, and go to state 69
    TOK_ARROW  shift, and go to state 70
    '='        shift, and go to state 71
    '+'        shift, and go to state 72
    '-'        shift, and go to state 73
    '*'        shift, and go to state 74
    '/'        shift, and go to state 75
    '%'        shift, and go to state 76
    ')'        shift, and go to state 104
    '['        shift, and go to state 78

    binop  go to state 79


State 82

   69 type: TOK_ARRAY TOK_LT type_id . TOK_GT

    TOK_GT  shift, and go to state 105


State 83

   30 alloc: TOK_ALLOC TOK_LT TOK_STRUCT . TOK_IDENT TOK_GT '(' express ')'
   31      | TOK_ALLOC TOK_LT TOK_STRUCT . TOK_IDENT TOK_GT '(' ')'

    TOK_IDENT  shift, and go to state 106


State 84

   32 alloc: TOK_ALLOC TOK_LT TOK_ARRAY . TOK_LT type TOK_GT TOK_GT '(' ')'
   33      | TOK_ALLOC TOK_LT TOK_ARRAY . TOK_LT type TOK_GT TOK_GT '(' express ')'

    TOK_LT  shift, and go to state 107


State 85

   28 alloc: TOK_ALLOC TOK_LT TOK_STRINGCON . TOK_GT '(' ')'
   29      | TOK_ALLOC TOK_LT TOK_STRINGCON . TOK_GT '(' express ')'

    TOK_GT  shift, and go to state 108


State 86

   74 type_id: TOK_PTR TOK_LT TOK_STRUCT . TOK_IDENT TOK_GT

    TOK_IDENT  shift, and go to state 109


State 87

   21 while: TOK_WHILE '(' express . ')' select
   44 express: express . binop express
   66 var: express . '[' express ']'
   67    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 64
    TOK_LE     shift, and go to state 65
    TOK_EQ     shift, and go to state 66
    TOK_NE     shift, and go to state 67
    TOK_GT     shift, and go to state 68
    TOK_LT     shift, and go to state 69
    TOK_ARROW  shift, and go to state 70
    '='        shift, and go to state 71
    '+'        shift, and go to state 72
    '-'        shift, and go to state 73
    '*'        shift, and go to state 74
    '/'        shift, and go to state 75
    '%'        shift, and go to state 76
    ')'        shift, and go to state 110
    '['        shift, and go to state 78

    binop  go to state 79


State 88

   27 return: TOK_RETURN express ';' .

    $default  reduce using rule 27 (return)


State 89

   19 call: TOK_IDENT '(' ')' .

    $default  reduce using rule 19 (call)


State 90

   17 callParam: TOK_IDENT '(' express .
   44 express: express . binop express
   66 var: express . '[' express ']'
   67    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 64
    TOK_LE     shift, and go to state 65
    TOK_EQ     shift, and go to state 66
    TOK_NE     shift, and go to state 67
    TOK_GT     shift, and go to state 68
    TOK_LT     shift, and go to state 69
    TOK_ARROW  shift, and go to state 70
    '='        shift, and go to state 71
    '+'        shift, and go to state 72
    '-'        shift, and go to state 73
    '*'        shift, and go to state 74
    '/'        shift, and go to state 75
    '%'        shift, and go to state 76
    '['        shift, and go to state 78

    $default  reduce using rule 17 (callParam)

    binop  go to state 79


State 91

   12 vardecl: type TOK_IDENT . ';'
   13        | type TOK_IDENT . '=' express ';'

    '='  shift, and go to state 102
    ';'  shift, and go to state 103


State 92

   48 express: '(' express ')' .

    $default  reduce using rule 48 (express)


State 93

    8 function: identif '(' ')' . ';'
   10         | identif '(' ')' . block

    ';'  shift, and go to state 111
    '{'  shift, and go to state 23

    block      go to state 112
    blockBody  go to state 35


State 94

   15 param: '(' identif .

    $default  reduce using rule 15 (param)


State 95

   14 identif: type . TOK_IDENT

    TOK_IDENT  shift, and go to state 113


State 96

    9 function: identif param ')' . ';'
   11         | identif param ')' . block

    ';'  shift, and go to state 114
    '{'  shift, and go to state 23

    block      go to state 115
    blockBody  go to state 35


State 97

   16 param: param ',' . identif

    TOK_ARRAY   shift, and go to state 7
    TOK_PTR     shift, and go to state 9
    TOK_VOID    shift, and go to state 11
    TOK_INT     shift, and go to state 13
    TOK_CHAR    shift, and go to state 14
    TOK_STRING  shift, and go to state 15

    identif  go to state 116
    type     go to state 95
    type_id  go to state 41


State 98

   18 callParam: callParam ',' express .
   44 express: express . binop express
   66 var: express . '[' express ']'
   67    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 64
    TOK_LE     shift, and go to state 65
    TOK_EQ     shift, and go to state 66
    TOK_NE     shift, and go to state 67
    TOK_GT     shift, and go to state 68
    TOK_LT     shift, and go to state 69
    TOK_ARROW  shift, and go to state 70
    '='        shift, and go to state 71
    '+'        shift, and go to state 72
    '-'        shift, and go to state 73
    '*'        shift, and go to state 74
    '/'        shift, and go to state 75
    '%'        shift, and go to state 76
    '['        shift, and go to state 78

    $default  reduce using rule 18 (callParam)

    binop  go to state 79


State 99

   67 var: express TOK_ARROW TOK_IDENT .

    $default  reduce using rule 67 (var)


State 100

   44 express: express . binop express
   66 var: express . '[' express ']'
   66    | express '[' express . ']'
   67    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 64
    TOK_LE     shift, and go to state 65
    TOK_EQ     shift, and go to state 66
    TOK_NE     shift, and go to state 67
    TOK_GT     shift, and go to state 68
    TOK_LT     shift, and go to state 69
    TOK_ARROW  shift, and go to state 70
    '='        shift, and go to state 71
    '+'        shift, and go to state 72
    '-'        shift, and go to state 73
    '*'        shift, and go to state 74
    '/'        shift, and go to state 75
    '%'        shift, and go to state 76
    '['        shift, and go to state 78
    ']'        shift, and go to state 117

    binop  go to state 79


State 101

   44 express: express . binop express
   44        | express binop express .
   66 var: express . '[' express ']'
   67    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 64
    TOK_LE     shift, and go to state 65
    TOK_EQ     shift, and go to state 66
    TOK_NE     shift, and go to state 67
    TOK_GT     shift, and go to state 68
    TOK_LT     shift, and go to state 69
    TOK_ARROW  shift, and go to state 70
    '='        shift, and go to state 71
    '+'        shift, and go to state 72
    '-'        shift, and go to state 73
    '*'        shift, and go to state 74
    '/'        shift, and go to state 75
    '%'        shift, and go to state 76
    '['        shift, and go to state 78

    TOK_GE     [reduce using rule 44 (express)]
    TOK_LE     [reduce using rule 44 (express)]
    TOK_EQ     [reduce using rule 44 (express)]
    TOK_NE     [reduce using rule 44 (express)]
    TOK_GT     [reduce using rule 44 (express)]
    TOK_LT     [reduce using rule 44 (express)]
    TOK_ARROW  [reduce using rule 44 (express)]
    '='        [reduce using rule 44 (express)]
    '+'        [reduce using rule 44 (express)]
    '-'        [reduce using rule 44 (express)]
    '*'        [reduce using rule 44 (express)]
    '/'        [reduce using rule 44 (express)]
    '%'        [reduce using rule 44 (express)]
    '['        [reduce using rule 44 (express)]
    $default   reduce using rule 44 (express)

    binop  go to state 79


State 102

   13 vardecl: type TOK_IDENT '=' . express ';'

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 16
    TOK_STRINGCON  shift, and go to state 17
    TOK_INTCON     shift, and go to state 18
    TOK_IDENT      shift, and go to state 19
    '+'            shift, and go to state 20
    '-'            shift, and go to state 21
    '('            shift, and go to state 24

    callParam  go to state 28
    call       go to state 29
    alloc      go to state 33
    express    go to state 118
    unop       go to state 38
    var        go to state 39
    constant   go to state 42


State 103

   12 vardecl: type TOK_IDENT ';' .

    $default  reduce using rule 12 (vardecl)


State 104

   24 ifelse: TOK_IF '(' express ')' . select
   25       | TOK_IF '(' express ')' . select TOK_ELSE select

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 16
    TOK_STRINGCON  shift, and go to state 17
    TOK_INTCON     shift, and go to state 18
    TOK_IDENT      shift, and go to state 19
    '+'            shift, and go to state 20
    '-'            shift, and go to state 21
    '{'            shift, and go to state 23
    '('            shift, and go to state 24

    callParam  go to state 28
    call       go to state 29
    select     go to state 119
    alloc      go to state 33
    block      go to state 120
    blockBody  go to state 35
    express    go to state 121
    unop       go to state 38
    var        go to state 39
    constant   go to state 42


State 105

   69 type: TOK_ARRAY TOK_LT type_id TOK_GT .

    $default  reduce using rule 69 (type)


State 106

   30 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT . TOK_GT '(' express ')'
   31      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT . TOK_GT '(' ')'

    TOK_GT  shift, and go to state 122


State 107

   32 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT . type TOK_GT TOK_GT '(' ')'
   33      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT . type TOK_GT TOK_GT '(' express ')'

    TOK_ARRAY   shift, and go to state 7
    TOK_PTR     shift, and go to state 9
    TOK_VOID    shift, and go to state 11
    TOK_INT     shift, and go to state 13
    TOK_CHAR    shift, and go to state 14
    TOK_STRING  shift, and go to state 15

    type     go to state 123
    type_id  go to state 41


State 108

   28 alloc: TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT . '(' ')'
   29      | TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT . '(' express ')'

    '('  shift, and go to state 124


State 109

   74 type_id: TOK_PTR TOK_LT TOK_STRUCT TOK_IDENT . TOK_GT

    TOK_GT  shift, and go to state 125


State 110

   21 while: TOK_WHILE '(' express ')' . select

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 16
    TOK_STRINGCON  shift, and go to state 17
    TOK_INTCON     shift, and go to state 18
    TOK_IDENT      shift, and go to state 19
    '+'            shift, and go to state 20
    '-'            shift, and go to state 21
    '{'            shift, and go to state 23
    '('            shift, and go to state 24

    callParam  go to state 28
    call       go to state 29
    select     go to state 126
    alloc      go to state 33
    block      go to state 120
    blockBody  go to state 35
    express    go to state 121
    unop       go to state 38
    var        go to state 39
    constant   go to state 42


State 111

    8 function: identif '(' ')' ';' .

    $default  reduce using rule 8 (function)


State 112

   10 function: identif '(' ')' block .

    $default  reduce using rule 10 (function)


State 113

   14 identif: type TOK_IDENT .

    $default  reduce using rule 14 (identif)


State 114

    9 function: identif param ')' ';' .

    $default  reduce using rule 9 (function)


State 115

   11 function: identif param ')' block .

    $default  reduce using rule 11 (function)


State 116

   16 param: param ',' identif .

    $default  reduce using rule 16 (param)


State 117

   66 var: express '[' express ']' .

    $default  reduce using rule 66 (var)


State 118

   13 vardecl: type TOK_IDENT '=' express . ';'
   44 express: express . binop express
   66 var: express . '[' express ']'
   67    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 64
    TOK_LE     shift, and go to state 65
    TOK_EQ     shift, and go to state 66
    TOK_NE     shift, and go to state 67
    TOK_GT     shift, and go to state 68
    TOK_LT     shift, and go to state 69
    TOK_ARROW  shift, and go to state 70
    '='        shift, and go to state 71
    '+'        shift, and go to state 72
    '-'        shift, and go to state 73
    '*'        shift, and go to state 74
    '/'        shift, and go to state 75
    '%'        shift, and go to state 76
    ';'        shift, and go to state 127
    '['        shift, and go to state 78

    binop  go to state 79


State 119

   24 ifelse: TOK_IF '(' express ')' select .
   25       | TOK_IF '(' express ')' select . TOK_ELSE select

    TOK_ELSE  shift, and go to state 128

    $default  reduce using rule 24 (ifelse)


State 120

   22 select: block .

    $default  reduce using rule 22 (select)


State 121

   23 select: express . ';'
   44 express: express . binop express
   66 var: express . '[' express ']'
   67    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 64
    TOK_LE     shift, and go to state 65
    TOK_EQ     shift, and go to state 66
    TOK_NE     shift, and go to state 67
    TOK_GT     shift, and go to state 68
    TOK_LT     shift, and go to state 69
    TOK_ARROW  shift, and go to state 70
    '='        shift, and go to state 71
    '+'        shift, and go to state 72
    '-'        shift, and go to state 73
    '*'        shift, and go to state 74
    '/'        shift, and go to state 75
    '%'        shift, and go to state 76
    ';'        shift, and go to state 129
    '['        shift, and go to state 78

    binop  go to state 79


State 122

   30 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT . '(' express ')'
   31      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT . '(' ')'

    '('  shift, and go to state 130


State 123

   32 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type . TOK_GT TOK_GT '(' ')'
   33      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type . TOK_GT TOK_GT '(' express ')'

    TOK_GT  shift, and go to state 131


State 124

   28 alloc: TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT '(' . ')'
   29      | TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT '(' . express ')'

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 16
    TOK_STRINGCON  shift, and go to state 17
    TOK_INTCON     shift, and go to state 18
    TOK_IDENT      shift, and go to state 19
    '+'            shift, and go to state 20
    '-'            shift, and go to state 21
    '('            shift, and go to state 24
    ')'            shift, and go to state 132

    callParam  go to state 28
    call       go to state 29
    alloc      go to state 33
    express    go to state 133
    unop       go to state 38
    var        go to state 39
    constant   go to state 42


State 125

   74 type_id: TOK_PTR TOK_LT TOK_STRUCT TOK_IDENT TOK_GT .

    $default  reduce using rule 74 (type_id)


State 126

   21 while: TOK_WHILE '(' express ')' select .

    $default  reduce using rule 21 (while)


State 127

   13 vardecl: type TOK_IDENT '=' express ';' .

    $default  reduce using rule 13 (vardecl)


State 128

   25 ifelse: TOK_IF '(' express ')' select TOK_ELSE . select

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 16
    TOK_STRINGCON  shift, and go to state 17
    TOK_INTCON     shift, and go to state 18
    TOK_IDENT      shift, and go to state 19
    '+'            shift, and go to state 20
    '-'            shift, and go to state 21
    '{'            shift, and go to state 23
    '('            shift, and go to state 24

    callParam  go to state 28
    call       go to state 29
    select     go to state 134
    alloc      go to state 33
    block      go to state 120
    blockBody  go to state 35
    express    go to state 121
    unop       go to state 38
    var        go to state 39
    constant   go to state 42


State 129

   23 select: express ';' .

    $default  reduce using rule 23 (select)


State 130

   30 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' . express ')'
   31      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' . ')'

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 16
    TOK_STRINGCON  shift, and go to state 17
    TOK_INTCON     shift, and go to state 18
    TOK_IDENT      shift, and go to state 19
    '+'            shift, and go to state 20
    '-'            shift, and go to state 21
    '('            shift, and go to state 24
    ')'            shift, and go to state 135

    callParam  go to state 28
    call       go to state 29
    alloc      go to state 33
    express    go to state 136
    unop       go to state 38
    var        go to state 39
    constant   go to state 42


State 131

   32 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT . TOK_GT '(' ')'
   33      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT . TOK_GT '(' express ')'

    TOK_GT  shift, and go to state 137


State 132

   28 alloc: TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT '(' ')' .

    $default  reduce using rule 28 (alloc)


State 133

   29 alloc: TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT '(' express . ')'
   44 express: express . binop express
   66 var: express . '[' express ']'
   67    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 64
    TOK_LE     shift, and go to state 65
    TOK_EQ     shift, and go to state 66
    TOK_NE     shift, and go to state 67
    TOK_GT     shift, and go to state 68
    TOK_LT     shift, and go to state 69
    TOK_ARROW  shift, and go to state 70
    '='        shift, and go to state 71
    '+'        shift, and go to state 72
    '-'        shift, and go to state 73
    '*'        shift, and go to state 74
    '/'        shift, and go to state 75
    '%'        shift, and go to state 76
    ')'        shift, and go to state 138
    '['        shift, and go to state 78

    binop  go to state 79


State 134

   25 ifelse: TOK_IF '(' express ')' select TOK_ELSE select .

    $default  reduce using rule 25 (ifelse)


State 135

   31 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' ')' .

    $default  reduce using rule 31 (alloc)


State 136

   30 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' express . ')'
   44 express: express . binop express
   66 var: express . '[' express ']'
   67    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 64
    TOK_LE     shift, and go to state 65
    TOK_EQ     shift, and go to state 66
    TOK_NE     shift, and go to state 67
    TOK_GT     shift, and go to state 68
    TOK_LT     shift, and go to state 69
    TOK_ARROW  shift, and go to state 70
    '='        shift, and go to state 71
    '+'        shift, and go to state 72
    '-'        shift, and go to state 73
    '*'        shift, and go to state 74
    '/'        shift, and go to state 75
    '%'        shift, and go to state 76
    ')'        shift, and go to state 139
    '['        shift, and go to state 78

    binop  go to state 79


State 137

   32 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT . '(' ')'
   33      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT . '(' express ')'

    '('  shift, and go to state 140


State 138

   29 alloc: TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT '(' express ')' .

    $default  reduce using rule 29 (alloc)


State 139

   30 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' express ')' .

    $default  reduce using rule 30 (alloc)


State 140

   32 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' . ')'
   33      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' . express ')'

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 16
    TOK_STRINGCON  shift, and go to state 17
    TOK_INTCON     shift, and go to state 18
    TOK_IDENT      shift, and go to state 19
    '+'            shift, and go to state 20
    '-'            shift, and go to state 21
    '('            shift, and go to state 24
    ')'            shift, and go to state 141

    callParam  go to state 28
    call       go to state 29
    alloc      go to state 33
    express    go to state 142
    unop       go to state 38
    var        go to state 39
    constant   go to state 42


State 141

   32 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' ')' .

    $default  reduce using rule 32 (alloc)


State 142

   33 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express . ')'
   44 express: express . binop express
   66 var: express . '[' express ']'
   67    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 64
    TOK_LE     shift, and go to state 65
    TOK_EQ     shift, and go to state 66
    TOK_NE     shift, and go to state 67
    TOK_GT     shift, and go to state 68
    TOK_LT     shift, and go to state 69
    TOK_ARROW  shift, and go to state 70
    '='        shift, and go to state 71
    '+'        shift, and go to state 72
    '-'        shift, and go to state 73
    '*'        shift, and go to state 74
    '/'        shift, and go to state 75
    '%'        shift, and go to state 76
    ')'        shift, and go to state 143
    '['        shift, and go to state 78

    binop  go to state 79


State 143

   33 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express ')' .

    $default  reduce using rule 33 (alloc)
