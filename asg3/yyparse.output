Nonterminals useless in grammar

   function
   identif
   param
   unop


Terminals unused in grammar

   ROOT
   IDENT
   TYPE_ID
   FUNCTION
   TOK_PARAM
   TOK_PROTOTYPE
   BLOCK
   TOK_INDEX
   TOK_IF
   TOK_ELSE
   TOK_STRUCT
   TOK_ARRAY
   TOK_NOT
   TOK_ALLOC
   TOK_PTR
   TOK_ARROW
   TOK_RETURN
   ','


Rules useless in grammar

   57 function: identif '(' ')' ';'
   58         | identif param ')' ';'
   59         | identif '(' ')' block
   60         | identif param ')' block

   61 identif: type TOK_IDENT

   62 param: '(' identif
   63      | '(' identif ',' identif

   64 unop: '+' express
   65     | '-' express


State 48 conflicts: 13 shift/reduce
State 60 conflicts: 9 shift/reduce


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program state
    3        | program vardecl
    4        | program error ';'
    5        | program ';'
    6        | %empty

    7 vardecl: type TOK_IDENT ';'
    8        | type TOK_IDENT '=' expr ';'

    9 while: TOK_WHILE '(' express ')' block

   10 block: blockBody '}'

   11 blockBody: '{' statement
   12          | blockBody statement
   13          | '{'

   14 statement: expr ';'

   15 state: while
   16      | express ';'

   17 express: express binop express
   18        | '(' express ')'
   19        | var
   20        | constant

   21 binop: '='
   22      | TOK_EQ
   23      | TOK_NE
   24      | TOK_GT
   25      | TOK_GE
   26      | TOK_LT
   27      | TOK_LE
   28      | '+'
   29      | '-'
   30      | '*'
   31      | '/'
   32      | '%'

   33 var: TOK_IDENT
   34    | express '[' express ']'

   35 type: type_id

   36 type_id: TOK_INT
   37        | TOK_STRING
   38        | TOK_CHAR
   39        | TOK_VOID
   40        | TOK_IDENT

   41 constant: TOK_INTCON
   42         | TOK_STRINGCON
   43         | TOK_CHARCON
   44         | TOK_NULLPTR

   45 expr: expr '=' expr
   46     | expr '+' expr
   47     | expr '-' expr
   48     | expr '*' expr
   49     | expr '/' expr
   50     | expr '^' expr
   51     | '+' expr
   52     | '-' expr
   53     | '(' expr ')'
   54     | TOK_IDENT
   55     | constant
   56     | NUMBER


Terminals, with rules where they appear

$end (0) 0
'%' (37) 32
'(' (40) 9 18 53
')' (41) 9 18 53
'*' (42) 30 48
'+' (43) 28 46 51
',' (44)
'-' (45) 29 47 52
'/' (47) 31 49
';' (59) 4 5 7 8 14 16
'=' (61) 8 21 45
'[' (91) 34
']' (93) 34
'^' (94) 50
'{' (123) 11 13
'}' (125) 10
error (256) 4
ROOT (258)
IDENT (259)
NUMBER (260) 56
TYPE_ID (261)
FUNCTION (262)
TOK_PARAM (263)
TOK_PROTOTYPE (264)
BLOCK (265)
TOK_NULLPTR (266) 44
TOK_INDEX (267)
TOK_GE (268) 25
TOK_LE (269) 27
TOK_EQ (270) 22
TOK_NE (271) 23
TOK_GT (272) 24
TOK_LT (273) 26
TOK_IF (274)
TOK_ELSE (275)
TOK_STRUCT (276)
TOK_ARRAY (277)
TOK_NOT (278)
TOK_ALLOC (279)
TOK_PTR (280)
TOK_ARROW (281)
TOK_WHILE (282) 9
TOK_VOID (283) 39
TOK_RETURN (284)
TOK_INT (285) 36
TOK_CHAR (286) 38
TOK_STRING (287) 37
TOK_CHARCON (288) 43
TOK_STRINGCON (289) 42
TOK_INTCON (290) 41
TOK_IDENT (291) 7 8 33 40 54
POS (292)
NEG (293)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
start (55)
    on left: 1, on right: 0
program (56)
    on left: 2 3 4 5 6, on right: 1 2 3 4 5
vardecl (57)
    on left: 7 8, on right: 3
while (58)
    on left: 9, on right: 15
block (59)
    on left: 10, on right: 9
blockBody (60)
    on left: 11 12 13, on right: 10 12
statement (61)
    on left: 14, on right: 11 12
state (62)
    on left: 15 16, on right: 2
express (63)
    on left: 17 18 19 20, on right: 9 16 17 18 34
binop (64)
    on left: 21 22 23 24 25 26 27 28 29 30 31 32, on right: 17
var (65)
    on left: 33 34, on right: 19
type (66)
    on left: 35, on right: 7 8
type_id (67)
    on left: 36 37 38 39 40, on right: 35
constant (68)
    on left: 41 42 43 44, on right: 20 55
expr (69)
    on left: 45 46 47 48 49 50 51 52 53 54 55 56, on right: 8 14 45
    46 47 48 49 50 51 52 53


State 0

    0 $accept: . start $end

    $default  reduce using rule 6 (program)

    start    go to state 1
    program  go to state 2


State 1

    0 $accept: start . $end

    $end  shift, and go to state 3


State 2

    1 start: program .
    2 program: program . state
    3        | program . vardecl
    4        | program . error ';'
    5        | program . ';'

    error          shift, and go to state 4
    TOK_NULLPTR    shift, and go to state 5
    TOK_WHILE      shift, and go to state 6
    TOK_VOID       shift, and go to state 7
    TOK_INT        shift, and go to state 8
    TOK_CHAR       shift, and go to state 9
    TOK_STRING     shift, and go to state 10
    TOK_CHARCON    shift, and go to state 11
    TOK_STRINGCON  shift, and go to state 12
    TOK_INTCON     shift, and go to state 13
    TOK_IDENT      shift, and go to state 14
    ';'            shift, and go to state 15
    '('            shift, and go to state 16

    $end  reduce using rule 1 (start)

    vardecl   go to state 17
    while     go to state 18
    state     go to state 19
    express   go to state 20
    var       go to state 21
    type      go to state 22
    type_id   go to state 23
    constant  go to state 24


State 3

    0 $accept: start $end .

    $default  accept


State 4

    4 program: program error . ';'

    ';'  shift, and go to state 25


State 5

   44 constant: TOK_NULLPTR .

    $default  reduce using rule 44 (constant)


State 6

    9 while: TOK_WHILE . '(' express ')' block

    '('  shift, and go to state 26


State 7

   39 type_id: TOK_VOID .

    $default  reduce using rule 39 (type_id)


State 8

   36 type_id: TOK_INT .

    $default  reduce using rule 36 (type_id)


State 9

   38 type_id: TOK_CHAR .

    $default  reduce using rule 38 (type_id)


State 10

   37 type_id: TOK_STRING .

    $default  reduce using rule 37 (type_id)


State 11

   43 constant: TOK_CHARCON .

    $default  reduce using rule 43 (constant)


State 12

   42 constant: TOK_STRINGCON .

    $default  reduce using rule 42 (constant)


State 13

   41 constant: TOK_INTCON .

    $default  reduce using rule 41 (constant)


State 14

   33 var: TOK_IDENT .
   40 type_id: TOK_IDENT .

    TOK_IDENT  reduce using rule 40 (type_id)
    $default   reduce using rule 33 (var)


State 15

    5 program: program ';' .

    $default  reduce using rule 5 (program)


State 16

   18 express: '(' . express ')'

    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 11
    TOK_STRINGCON  shift, and go to state 12
    TOK_INTCON     shift, and go to state 13
    TOK_IDENT      shift, and go to state 27
    '('            shift, and go to state 16

    express   go to state 28
    var       go to state 21
    constant  go to state 24


State 17

    3 program: program vardecl .

    $default  reduce using rule 3 (program)


State 18

   15 state: while .

    $default  reduce using rule 15 (state)


State 19

    2 program: program state .

    $default  reduce using rule 2 (program)


State 20

   16 state: express . ';'
   17 express: express . binop express
   34 var: express . '[' express ']'

    TOK_GE  shift, and go to state 29
    TOK_LE  shift, and go to state 30
    TOK_EQ  shift, and go to state 31
    TOK_NE  shift, and go to state 32
    TOK_GT  shift, and go to state 33
    TOK_LT  shift, and go to state 34
    '='     shift, and go to state 35
    '+'     shift, and go to state 36
    '-'     shift, and go to state 37
    '*'     shift, and go to state 38
    '/'     shift, and go to state 39
    '%'     shift, and go to state 40
    ';'     shift, and go to state 41
    '['     shift, and go to state 42

    binop  go to state 43


State 21

   19 express: var .

    $default  reduce using rule 19 (express)


State 22

    7 vardecl: type . TOK_IDENT ';'
    8        | type . TOK_IDENT '=' expr ';'

    TOK_IDENT  shift, and go to state 44


State 23

   35 type: type_id .

    $default  reduce using rule 35 (type)


State 24

   20 express: constant .

    $default  reduce using rule 20 (express)


State 25

    4 program: program error ';' .

    $default  reduce using rule 4 (program)


State 26

    9 while: TOK_WHILE '(' . express ')' block

    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 11
    TOK_STRINGCON  shift, and go to state 12
    TOK_INTCON     shift, and go to state 13
    TOK_IDENT      shift, and go to state 27
    '('            shift, and go to state 16

    express   go to state 45
    var       go to state 21
    constant  go to state 24


State 27

   33 var: TOK_IDENT .

    $default  reduce using rule 33 (var)


State 28

   17 express: express . binop express
   18        | '(' express . ')'
   34 var: express . '[' express ']'

    TOK_GE  shift, and go to state 29
    TOK_LE  shift, and go to state 30
    TOK_EQ  shift, and go to state 31
    TOK_NE  shift, and go to state 32
    TOK_GT  shift, and go to state 33
    TOK_LT  shift, and go to state 34
    '='     shift, and go to state 35
    '+'     shift, and go to state 36
    '-'     shift, and go to state 37
    '*'     shift, and go to state 38
    '/'     shift, and go to state 39
    '%'     shift, and go to state 40
    ')'     shift, and go to state 46
    '['     shift, and go to state 42

    binop  go to state 43


State 29

   25 binop: TOK_GE .

    $default  reduce using rule 25 (binop)


State 30

   27 binop: TOK_LE .

    $default  reduce using rule 27 (binop)


State 31

   22 binop: TOK_EQ .

    $default  reduce using rule 22 (binop)


State 32

   23 binop: TOK_NE .

    $default  reduce using rule 23 (binop)


State 33

   24 binop: TOK_GT .

    $default  reduce using rule 24 (binop)


State 34

   26 binop: TOK_LT .

    $default  reduce using rule 26 (binop)


State 35

   21 binop: '=' .

    $default  reduce using rule 21 (binop)


State 36

   28 binop: '+' .

    $default  reduce using rule 28 (binop)


State 37

   29 binop: '-' .

    $default  reduce using rule 29 (binop)


State 38

   30 binop: '*' .

    $default  reduce using rule 30 (binop)


State 39

   31 binop: '/' .

    $default  reduce using rule 31 (binop)


State 40

   32 binop: '%' .

    $default  reduce using rule 32 (binop)


State 41

   16 state: express ';' .

    $default  reduce using rule 16 (state)


State 42

   34 var: express '[' . express ']'

    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 11
    TOK_STRINGCON  shift, and go to state 12
    TOK_INTCON     shift, and go to state 13
    TOK_IDENT      shift, and go to state 27
    '('            shift, and go to state 16

    express   go to state 47
    var       go to state 21
    constant  go to state 24


State 43

   17 express: express binop . express

    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 11
    TOK_STRINGCON  shift, and go to state 12
    TOK_INTCON     shift, and go to state 13
    TOK_IDENT      shift, and go to state 27
    '('            shift, and go to state 16

    express   go to state 48
    var       go to state 21
    constant  go to state 24


State 44

    7 vardecl: type TOK_IDENT . ';'
    8        | type TOK_IDENT . '=' expr ';'

    '='  shift, and go to state 49
    ';'  shift, and go to state 50


State 45

    9 while: TOK_WHILE '(' express . ')' block
   17 express: express . binop express
   34 var: express . '[' express ']'

    TOK_GE  shift, and go to state 29
    TOK_LE  shift, and go to state 30
    TOK_EQ  shift, and go to state 31
    TOK_NE  shift, and go to state 32
    TOK_GT  shift, and go to state 33
    TOK_LT  shift, and go to state 34
    '='     shift, and go to state 35
    '+'     shift, and go to state 36
    '-'     shift, and go to state 37
    '*'     shift, and go to state 38
    '/'     shift, and go to state 39
    '%'     shift, and go to state 40
    ')'     shift, and go to state 51
    '['     shift, and go to state 42

    binop  go to state 43


State 46

   18 express: '(' express ')' .

    $default  reduce using rule 18 (express)


State 47

   17 express: express . binop express
   34 var: express . '[' express ']'
   34    | express '[' express . ']'

    TOK_GE  shift, and go to state 29
    TOK_LE  shift, and go to state 30
    TOK_EQ  shift, and go to state 31
    TOK_NE  shift, and go to state 32
    TOK_GT  shift, and go to state 33
    TOK_LT  shift, and go to state 34
    '='     shift, and go to state 35
    '+'     shift, and go to state 36
    '-'     shift, and go to state 37
    '*'     shift, and go to state 38
    '/'     shift, and go to state 39
    '%'     shift, and go to state 40
    '['     shift, and go to state 42
    ']'     shift, and go to state 52

    binop  go to state 43


State 48

   17 express: express . binop express
   17        | express binop express .
   34 var: express . '[' express ']'

    TOK_GE  shift, and go to state 29
    TOK_LE  shift, and go to state 30
    TOK_EQ  shift, and go to state 31
    TOK_NE  shift, and go to state 32
    TOK_GT  shift, and go to state 33
    TOK_LT  shift, and go to state 34
    '='     shift, and go to state 35
    '+'     shift, and go to state 36
    '-'     shift, and go to state 37
    '*'     shift, and go to state 38
    '/'     shift, and go to state 39
    '%'     shift, and go to state 40
    '['     shift, and go to state 42

    TOK_GE    [reduce using rule 17 (express)]
    TOK_LE    [reduce using rule 17 (express)]
    TOK_EQ    [reduce using rule 17 (express)]
    TOK_NE    [reduce using rule 17 (express)]
    TOK_GT    [reduce using rule 17 (express)]
    TOK_LT    [reduce using rule 17 (express)]
    '='       [reduce using rule 17 (express)]
    '+'       [reduce using rule 17 (express)]
    '-'       [reduce using rule 17 (express)]
    '*'       [reduce using rule 17 (express)]
    '/'       [reduce using rule 17 (express)]
    '%'       [reduce using rule 17 (express)]
    '['       [reduce using rule 17 (express)]
    $default  reduce using rule 17 (express)

    binop  go to state 43


State 49

    8 vardecl: type TOK_IDENT '=' . expr ';'

    NUMBER         shift, and go to state 53
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 11
    TOK_STRINGCON  shift, and go to state 12
    TOK_INTCON     shift, and go to state 13
    TOK_IDENT      shift, and go to state 54
    '+'            shift, and go to state 55
    '-'            shift, and go to state 56
    '('            shift, and go to state 57

    constant  go to state 58
    expr      go to state 59


State 50

    7 vardecl: type TOK_IDENT ';' .

    $default  reduce using rule 7 (vardecl)


State 51

    9 while: TOK_WHILE '(' express ')' . block

    '{'  shift, and go to state 60

    block      go to state 61
    blockBody  go to state 62


State 52

   34 var: express '[' express ']' .

    $default  reduce using rule 34 (var)


State 53

   56 expr: NUMBER .

    $default  reduce using rule 56 (expr)


State 54

   54 expr: TOK_IDENT .

    $default  reduce using rule 54 (expr)


State 55

   51 expr: '+' . expr

    NUMBER         shift, and go to state 53
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 11
    TOK_STRINGCON  shift, and go to state 12
    TOK_INTCON     shift, and go to state 13
    TOK_IDENT      shift, and go to state 54
    '+'            shift, and go to state 55
    '-'            shift, and go to state 56
    '('            shift, and go to state 57

    constant  go to state 58
    expr      go to state 63


State 56

   52 expr: '-' . expr

    NUMBER         shift, and go to state 53
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 11
    TOK_STRINGCON  shift, and go to state 12
    TOK_INTCON     shift, and go to state 13
    TOK_IDENT      shift, and go to state 54
    '+'            shift, and go to state 55
    '-'            shift, and go to state 56
    '('            shift, and go to state 57

    constant  go to state 58
    expr      go to state 64


State 57

   53 expr: '(' . expr ')'

    NUMBER         shift, and go to state 53
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 11
    TOK_STRINGCON  shift, and go to state 12
    TOK_INTCON     shift, and go to state 13
    TOK_IDENT      shift, and go to state 54
    '+'            shift, and go to state 55
    '-'            shift, and go to state 56
    '('            shift, and go to state 57

    constant  go to state 58
    expr      go to state 65


State 58

   55 expr: constant .

    $default  reduce using rule 55 (expr)


State 59

    8 vardecl: type TOK_IDENT '=' expr . ';'
   45 expr: expr . '=' expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '^' expr

    '='  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71
    ';'  shift, and go to state 72


State 60

   11 blockBody: '{' . statement
   13          | '{' .

    NUMBER         shift, and go to state 53
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 11
    TOK_STRINGCON  shift, and go to state 12
    TOK_INTCON     shift, and go to state 13
    TOK_IDENT      shift, and go to state 54
    '+'            shift, and go to state 55
    '-'            shift, and go to state 56
    '('            shift, and go to state 57

    NUMBER         [reduce using rule 13 (blockBody)]
    TOK_NULLPTR    [reduce using rule 13 (blockBody)]
    TOK_CHARCON    [reduce using rule 13 (blockBody)]
    TOK_STRINGCON  [reduce using rule 13 (blockBody)]
    TOK_INTCON     [reduce using rule 13 (blockBody)]
    TOK_IDENT      [reduce using rule 13 (blockBody)]
    '+'            [reduce using rule 13 (blockBody)]
    '-'            [reduce using rule 13 (blockBody)]
    '('            [reduce using rule 13 (blockBody)]
    $default       reduce using rule 13 (blockBody)

    statement  go to state 73
    constant   go to state 58
    expr       go to state 74


State 61

    9 while: TOK_WHILE '(' express ')' block .

    $default  reduce using rule 9 (while)


State 62

   10 block: blockBody . '}'
   12 blockBody: blockBody . statement

    NUMBER         shift, and go to state 53
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 11
    TOK_STRINGCON  shift, and go to state 12
    TOK_INTCON     shift, and go to state 13
    TOK_IDENT      shift, and go to state 54
    '+'            shift, and go to state 55
    '-'            shift, and go to state 56
    '('            shift, and go to state 57
    '}'            shift, and go to state 75

    statement  go to state 76
    constant   go to state 58
    expr       go to state 74


State 63

   45 expr: expr . '=' expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '^' expr
   51     | '+' expr .

    $default  reduce using rule 51 (expr)


State 64

   45 expr: expr . '=' expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '^' expr
   52     | '-' expr .

    $default  reduce using rule 52 (expr)


State 65

   45 expr: expr . '=' expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '^' expr
   53     | '(' expr . ')'

    '='  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71
    ')'  shift, and go to state 77


State 66

   45 expr: expr '=' . expr

    NUMBER         shift, and go to state 53
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 11
    TOK_STRINGCON  shift, and go to state 12
    TOK_INTCON     shift, and go to state 13
    TOK_IDENT      shift, and go to state 54
    '+'            shift, and go to state 55
    '-'            shift, and go to state 56
    '('            shift, and go to state 57

    constant  go to state 58
    expr      go to state 78


State 67

   46 expr: expr '+' . expr

    NUMBER         shift, and go to state 53
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 11
    TOK_STRINGCON  shift, and go to state 12
    TOK_INTCON     shift, and go to state 13
    TOK_IDENT      shift, and go to state 54
    '+'            shift, and go to state 55
    '-'            shift, and go to state 56
    '('            shift, and go to state 57

    constant  go to state 58
    expr      go to state 79


State 68

   47 expr: expr '-' . expr

    NUMBER         shift, and go to state 53
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 11
    TOK_STRINGCON  shift, and go to state 12
    TOK_INTCON     shift, and go to state 13
    TOK_IDENT      shift, and go to state 54
    '+'            shift, and go to state 55
    '-'            shift, and go to state 56
    '('            shift, and go to state 57

    constant  go to state 58
    expr      go to state 80


State 69

   48 expr: expr '*' . expr

    NUMBER         shift, and go to state 53
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 11
    TOK_STRINGCON  shift, and go to state 12
    TOK_INTCON     shift, and go to state 13
    TOK_IDENT      shift, and go to state 54
    '+'            shift, and go to state 55
    '-'            shift, and go to state 56
    '('            shift, and go to state 57

    constant  go to state 58
    expr      go to state 81


State 70

   49 expr: expr '/' . expr

    NUMBER         shift, and go to state 53
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 11
    TOK_STRINGCON  shift, and go to state 12
    TOK_INTCON     shift, and go to state 13
    TOK_IDENT      shift, and go to state 54
    '+'            shift, and go to state 55
    '-'            shift, and go to state 56
    '('            shift, and go to state 57

    constant  go to state 58
    expr      go to state 82


State 71

   50 expr: expr '^' . expr

    NUMBER         shift, and go to state 53
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 11
    TOK_STRINGCON  shift, and go to state 12
    TOK_INTCON     shift, and go to state 13
    TOK_IDENT      shift, and go to state 54
    '+'            shift, and go to state 55
    '-'            shift, and go to state 56
    '('            shift, and go to state 57

    constant  go to state 58
    expr      go to state 83


State 72

    8 vardecl: type TOK_IDENT '=' expr ';' .

    $default  reduce using rule 8 (vardecl)


State 73

   11 blockBody: '{' statement .

    $default  reduce using rule 11 (blockBody)


State 74

   14 statement: expr . ';'
   45 expr: expr . '=' expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '^' expr

    '='  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71
    ';'  shift, and go to state 84


State 75

   10 block: blockBody '}' .

    $default  reduce using rule 10 (block)


State 76

   12 blockBody: blockBody statement .

    $default  reduce using rule 12 (blockBody)


State 77

   53 expr: '(' expr ')' .

    $default  reduce using rule 53 (expr)


State 78

   45 expr: expr . '=' expr
   45     | expr '=' expr .
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '^' expr

    '='  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71

    $default  reduce using rule 45 (expr)


State 79

   45 expr: expr . '=' expr
   46     | expr . '+' expr
   46     | expr '+' expr .
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '^' expr

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71

    $default  reduce using rule 46 (expr)


State 80

   45 expr: expr . '=' expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   47     | expr '-' expr .
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '^' expr

    '*'  shift, and go to state 69
    '/'  shift, and go to state 70
    '^'  shift, and go to state 71

    $default  reduce using rule 47 (expr)


State 81

   45 expr: expr . '=' expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   48     | expr '*' expr .
   49     | expr . '/' expr
   50     | expr . '^' expr

    '^'  shift, and go to state 71

    $default  reduce using rule 48 (expr)


State 82

   45 expr: expr . '=' expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   49     | expr '/' expr .
   50     | expr . '^' expr

    '^'  shift, and go to state 71

    $default  reduce using rule 49 (expr)


State 83

   45 expr: expr . '=' expr
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '^' expr
   50     | expr '^' expr .

    '^'  shift, and go to state 71

    $default  reduce using rule 50 (expr)


State 84

   14 statement: expr ';' .

    $default  reduce using rule 14 (statement)
