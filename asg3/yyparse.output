Nonterminals useless in grammar

   callParam
   call
   while
   ifelse
   alloc
   state
   express
   binop
   unop
   var


Terminals unused in grammar

   ROOT
   IDENT
   TYPE_ID
   FUNCTION
   TOK_PARAM
   TOK_PROTOTYPE
   BLOCK
   TOK_INDEX
   CALL
   TOK_GE
   TOK_LE
   TOK_EQ
   TOK_NE
   TOK_GT
   TOK_LT
   TOK_IF
   TOK_ELSE
   TOK_STRUCT
   TOK_ARRAY
   TOK_NOT
   TOK_ALLOC
   TOK_PTR
   TOK_ARROW
   TOK_WHILE
   TOK_RETURN
   '%'
   '['
   ']'


Rules useless in grammar

   42 callParam: TOK_IDENT '(' express
   43          | callParam ',' express

   44 call: TOK_IDENT '(' ')'
   45     | callParam ')'

   46 while: TOK_WHILE '(' express ')' block

   47 ifelse: TOK_IF '(' express ')' block
   48       | TOK_IF '(' express ')' block TOK_ELSE block

   49 alloc: TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT '(' ')'
   50      | TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT '(' express ')'
   51      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' express ')'
   52      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' ')'
   53      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' ')'
   54      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express ')'

   55 state: while
   56      | ifelse
   57      | express ';'

   58 express: express binop express
   59        | alloc
   60        | call
   61        | '(' express ')'
   62        | var
   63        | constant

   64 binop: '='
   65      | TOK_EQ
   66      | TOK_NE
   67      | TOK_GT
   68      | TOK_GE
   69      | TOK_LT
   70      | TOK_LE
   71      | '+'
   72      | '-'
   73      | '*'
   74      | '/'
   75      | '%'

   76 unop: '+' express
   77     | '-' express

   78 var: TOK_IDENT
   79    | express '[' express ']'


State 27 conflicts: 9 shift/reduce


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program function
    3        | program vardecl
    4        | program error ';'
    5        | program ';'
    6        | %empty

    7 function: identif '(' ')' ';'
    8         | identif param ')' ';'
    9         | identif '(' ')' block
   10         | identif param ')' block

   11 vardecl: type TOK_IDENT ';'
   12        | type TOK_IDENT '=' expr ';'

   13 identif: type TOK_IDENT

   14 param: '(' identif
   15      | param ',' identif

   16 block: blockBody '}'

   17 blockBody: '{' statement
   18          | blockBody statement
   19          | '{'

   20 statement: expr ';'

   21 type: type_id

   22 type_id: TOK_INT
   23        | TOK_STRING
   24        | TOK_CHAR
   25        | TOK_VOID

   26 constant: TOK_INTCON
   27         | TOK_STRINGCON
   28         | TOK_CHARCON
   29         | TOK_NULLPTR

   30 expr: expr '=' expr
   31     | expr '+' expr
   32     | expr '-' expr
   33     | expr '*' expr
   34     | expr '/' expr
   35     | expr '^' expr
   36     | '+' expr
   37     | '-' expr
   38     | '(' expr ')'
   39     | TOK_IDENT
   40     | constant
   41     | NUMBER


Terminals, with rules where they appear

$end (0) 0
'%' (37)
'(' (40) 7 9 14 38
')' (41) 7 8 9 10 38
'*' (42) 33
'+' (43) 31 36
',' (44) 15
'-' (45) 32 37
'/' (47) 34
';' (59) 4 5 7 8 11 12 20
'=' (61) 12 30
'[' (91)
']' (93)
'^' (94) 35
'{' (123) 17 19
'}' (125) 16
error (256) 4
ROOT (258)
IDENT (259)
NUMBER (260) 41
TYPE_ID (261)
FUNCTION (262)
TOK_PARAM (263)
TOK_PROTOTYPE (264)
BLOCK (265)
TOK_NULLPTR (266) 29
TOK_INDEX (267)
CALL (268)
TOK_GE (269)
TOK_LE (270)
TOK_EQ (271)
TOK_NE (272)
TOK_GT (273)
TOK_LT (274)
TOK_IF (275)
TOK_ELSE (276)
TOK_STRUCT (277)
TOK_ARRAY (278)
TOK_NOT (279)
TOK_ALLOC (280)
TOK_PTR (281)
TOK_ARROW (282)
TOK_WHILE (283)
TOK_VOID (284) 25
TOK_RETURN (285)
TOK_INT (286) 22
TOK_CHAR (287) 24
TOK_STRING (288) 23
TOK_CHARCON (289) 28
TOK_STRINGCON (290) 27
TOK_INTCON (291) 26
TOK_IDENT (292) 11 12 13 39
POS (293)
NEG (294)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
start (56)
    on left: 1, on right: 0
program (57)
    on left: 2 3 4 5 6, on right: 1 2 3 4 5
function (58)
    on left: 7 8 9 10, on right: 2
vardecl (59)
    on left: 11 12, on right: 3
identif (60)
    on left: 13, on right: 7 8 9 10 14 15
param (61)
    on left: 14 15, on right: 8 10 15
block (62)
    on left: 16, on right: 9 10
blockBody (63)
    on left: 17 18 19, on right: 16 18
statement (64)
    on left: 20, on right: 17 18
type (65)
    on left: 21, on right: 11 12 13
type_id (66)
    on left: 22 23 24 25, on right: 21
constant (67)
    on left: 26 27 28 29, on right: 40
expr (68)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41, on right: 12 20 30
    31 32 33 34 35 36 37 38


State 0

    0 $accept: . start $end

    $default  reduce using rule 6 (program)

    start    go to state 1
    program  go to state 2


State 1

    0 $accept: start . $end

    $end  shift, and go to state 3


State 2

    1 start: program .
    2 program: program . function
    3        | program . vardecl
    4        | program . error ';'
    5        | program . ';'

    error       shift, and go to state 4
    TOK_VOID    shift, and go to state 5
    TOK_INT     shift, and go to state 6
    TOK_CHAR    shift, and go to state 7
    TOK_STRING  shift, and go to state 8
    ';'         shift, and go to state 9

    $end  reduce using rule 1 (start)

    function  go to state 10
    vardecl   go to state 11
    identif   go to state 12
    type      go to state 13
    type_id   go to state 14


State 3

    0 $accept: start $end .

    $default  accept


State 4

    4 program: program error . ';'

    ';'  shift, and go to state 15


State 5

   25 type_id: TOK_VOID .

    $default  reduce using rule 25 (type_id)


State 6

   22 type_id: TOK_INT .

    $default  reduce using rule 22 (type_id)


State 7

   24 type_id: TOK_CHAR .

    $default  reduce using rule 24 (type_id)


State 8

   23 type_id: TOK_STRING .

    $default  reduce using rule 23 (type_id)


State 9

    5 program: program ';' .

    $default  reduce using rule 5 (program)


State 10

    2 program: program function .

    $default  reduce using rule 2 (program)


State 11

    3 program: program vardecl .

    $default  reduce using rule 3 (program)


State 12

    7 function: identif . '(' ')' ';'
    8         | identif . param ')' ';'
    9         | identif . '(' ')' block
   10         | identif . param ')' block

    '('  shift, and go to state 16

    param  go to state 17


State 13

   11 vardecl: type . TOK_IDENT ';'
   12        | type . TOK_IDENT '=' expr ';'
   13 identif: type . TOK_IDENT

    TOK_IDENT  shift, and go to state 18


State 14

   21 type: type_id .

    $default  reduce using rule 21 (type)


State 15

    4 program: program error ';' .

    $default  reduce using rule 4 (program)


State 16

    7 function: identif '(' . ')' ';'
    9         | identif '(' . ')' block
   14 param: '(' . identif

    TOK_VOID    shift, and go to state 5
    TOK_INT     shift, and go to state 6
    TOK_CHAR    shift, and go to state 7
    TOK_STRING  shift, and go to state 8
    ')'         shift, and go to state 19

    identif  go to state 20
    type     go to state 21
    type_id  go to state 14


State 17

    8 function: identif param . ')' ';'
   10         | identif param . ')' block
   15 param: param . ',' identif

    ')'  shift, and go to state 22
    ','  shift, and go to state 23


State 18

   11 vardecl: type TOK_IDENT . ';'
   12        | type TOK_IDENT . '=' expr ';'
   13 identif: type TOK_IDENT .

    '='  shift, and go to state 24
    ';'  shift, and go to state 25

    $default  reduce using rule 13 (identif)


State 19

    7 function: identif '(' ')' . ';'
    9         | identif '(' ')' . block

    ';'  shift, and go to state 26
    '{'  shift, and go to state 27

    block      go to state 28
    blockBody  go to state 29


State 20

   14 param: '(' identif .

    $default  reduce using rule 14 (param)


State 21

   13 identif: type . TOK_IDENT

    TOK_IDENT  shift, and go to state 30


State 22

    8 function: identif param ')' . ';'
   10         | identif param ')' . block

    ';'  shift, and go to state 31
    '{'  shift, and go to state 27

    block      go to state 32
    blockBody  go to state 29


State 23

   15 param: param ',' . identif

    TOK_VOID    shift, and go to state 5
    TOK_INT     shift, and go to state 6
    TOK_CHAR    shift, and go to state 7
    TOK_STRING  shift, and go to state 8

    identif  go to state 33
    type     go to state 21
    type_id  go to state 14


State 24

   12 vardecl: type TOK_IDENT '=' . expr ';'

    NUMBER         shift, and go to state 34
    TOK_NULLPTR    shift, and go to state 35
    TOK_CHARCON    shift, and go to state 36
    TOK_STRINGCON  shift, and go to state 37
    TOK_INTCON     shift, and go to state 38
    TOK_IDENT      shift, and go to state 39
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42

    constant  go to state 43
    expr      go to state 44


State 25

   11 vardecl: type TOK_IDENT ';' .

    $default  reduce using rule 11 (vardecl)


State 26

    7 function: identif '(' ')' ';' .

    $default  reduce using rule 7 (function)


State 27

   17 blockBody: '{' . statement
   19          | '{' .

    NUMBER         shift, and go to state 34
    TOK_NULLPTR    shift, and go to state 35
    TOK_CHARCON    shift, and go to state 36
    TOK_STRINGCON  shift, and go to state 37
    TOK_INTCON     shift, and go to state 38
    TOK_IDENT      shift, and go to state 39
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42

    NUMBER         [reduce using rule 19 (blockBody)]
    TOK_NULLPTR    [reduce using rule 19 (blockBody)]
    TOK_CHARCON    [reduce using rule 19 (blockBody)]
    TOK_STRINGCON  [reduce using rule 19 (blockBody)]
    TOK_INTCON     [reduce using rule 19 (blockBody)]
    TOK_IDENT      [reduce using rule 19 (blockBody)]
    '+'            [reduce using rule 19 (blockBody)]
    '-'            [reduce using rule 19 (blockBody)]
    '('            [reduce using rule 19 (blockBody)]
    $default       reduce using rule 19 (blockBody)

    statement  go to state 45
    constant   go to state 43
    expr       go to state 46


State 28

    9 function: identif '(' ')' block .

    $default  reduce using rule 9 (function)


State 29

   16 block: blockBody . '}'
   18 blockBody: blockBody . statement

    NUMBER         shift, and go to state 34
    TOK_NULLPTR    shift, and go to state 35
    TOK_CHARCON    shift, and go to state 36
    TOK_STRINGCON  shift, and go to state 37
    TOK_INTCON     shift, and go to state 38
    TOK_IDENT      shift, and go to state 39
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42
    '}'            shift, and go to state 47

    statement  go to state 48
    constant   go to state 43
    expr       go to state 46


State 30

   13 identif: type TOK_IDENT .

    $default  reduce using rule 13 (identif)


State 31

    8 function: identif param ')' ';' .

    $default  reduce using rule 8 (function)


State 32

   10 function: identif param ')' block .

    $default  reduce using rule 10 (function)


State 33

   15 param: param ',' identif .

    $default  reduce using rule 15 (param)


State 34

   41 expr: NUMBER .

    $default  reduce using rule 41 (expr)


State 35

   29 constant: TOK_NULLPTR .

    $default  reduce using rule 29 (constant)


State 36

   28 constant: TOK_CHARCON .

    $default  reduce using rule 28 (constant)


State 37

   27 constant: TOK_STRINGCON .

    $default  reduce using rule 27 (constant)


State 38

   26 constant: TOK_INTCON .

    $default  reduce using rule 26 (constant)


State 39

   39 expr: TOK_IDENT .

    $default  reduce using rule 39 (expr)


State 40

   36 expr: '+' . expr

    NUMBER         shift, and go to state 34
    TOK_NULLPTR    shift, and go to state 35
    TOK_CHARCON    shift, and go to state 36
    TOK_STRINGCON  shift, and go to state 37
    TOK_INTCON     shift, and go to state 38
    TOK_IDENT      shift, and go to state 39
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42

    constant  go to state 43
    expr      go to state 49


State 41

   37 expr: '-' . expr

    NUMBER         shift, and go to state 34
    TOK_NULLPTR    shift, and go to state 35
    TOK_CHARCON    shift, and go to state 36
    TOK_STRINGCON  shift, and go to state 37
    TOK_INTCON     shift, and go to state 38
    TOK_IDENT      shift, and go to state 39
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42

    constant  go to state 43
    expr      go to state 50


State 42

   38 expr: '(' . expr ')'

    NUMBER         shift, and go to state 34
    TOK_NULLPTR    shift, and go to state 35
    TOK_CHARCON    shift, and go to state 36
    TOK_STRINGCON  shift, and go to state 37
    TOK_INTCON     shift, and go to state 38
    TOK_IDENT      shift, and go to state 39
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42

    constant  go to state 43
    expr      go to state 51


State 43

   40 expr: constant .

    $default  reduce using rule 40 (expr)


State 44

   12 vardecl: type TOK_IDENT '=' expr . ';'
   30 expr: expr . '=' expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '^' expr

    '='  shift, and go to state 52
    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    '^'  shift, and go to state 57
    ';'  shift, and go to state 58


State 45

   17 blockBody: '{' statement .

    $default  reduce using rule 17 (blockBody)


State 46

   20 statement: expr . ';'
   30 expr: expr . '=' expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '^' expr

    '='  shift, and go to state 52
    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    '^'  shift, and go to state 57
    ';'  shift, and go to state 59


State 47

   16 block: blockBody '}' .

    $default  reduce using rule 16 (block)


State 48

   18 blockBody: blockBody statement .

    $default  reduce using rule 18 (blockBody)


State 49

   30 expr: expr . '=' expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '^' expr
   36     | '+' expr .

    $default  reduce using rule 36 (expr)


State 50

   30 expr: expr . '=' expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '^' expr
   37     | '-' expr .

    $default  reduce using rule 37 (expr)


State 51

   30 expr: expr . '=' expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '^' expr
   38     | '(' expr . ')'

    '='  shift, and go to state 52
    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    '^'  shift, and go to state 57
    ')'  shift, and go to state 60


State 52

   30 expr: expr '=' . expr

    NUMBER         shift, and go to state 34
    TOK_NULLPTR    shift, and go to state 35
    TOK_CHARCON    shift, and go to state 36
    TOK_STRINGCON  shift, and go to state 37
    TOK_INTCON     shift, and go to state 38
    TOK_IDENT      shift, and go to state 39
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42

    constant  go to state 43
    expr      go to state 61


State 53

   31 expr: expr '+' . expr

    NUMBER         shift, and go to state 34
    TOK_NULLPTR    shift, and go to state 35
    TOK_CHARCON    shift, and go to state 36
    TOK_STRINGCON  shift, and go to state 37
    TOK_INTCON     shift, and go to state 38
    TOK_IDENT      shift, and go to state 39
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42

    constant  go to state 43
    expr      go to state 62


State 54

   32 expr: expr '-' . expr

    NUMBER         shift, and go to state 34
    TOK_NULLPTR    shift, and go to state 35
    TOK_CHARCON    shift, and go to state 36
    TOK_STRINGCON  shift, and go to state 37
    TOK_INTCON     shift, and go to state 38
    TOK_IDENT      shift, and go to state 39
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42

    constant  go to state 43
    expr      go to state 63


State 55

   33 expr: expr '*' . expr

    NUMBER         shift, and go to state 34
    TOK_NULLPTR    shift, and go to state 35
    TOK_CHARCON    shift, and go to state 36
    TOK_STRINGCON  shift, and go to state 37
    TOK_INTCON     shift, and go to state 38
    TOK_IDENT      shift, and go to state 39
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42

    constant  go to state 43
    expr      go to state 64


State 56

   34 expr: expr '/' . expr

    NUMBER         shift, and go to state 34
    TOK_NULLPTR    shift, and go to state 35
    TOK_CHARCON    shift, and go to state 36
    TOK_STRINGCON  shift, and go to state 37
    TOK_INTCON     shift, and go to state 38
    TOK_IDENT      shift, and go to state 39
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42

    constant  go to state 43
    expr      go to state 65


State 57

   35 expr: expr '^' . expr

    NUMBER         shift, and go to state 34
    TOK_NULLPTR    shift, and go to state 35
    TOK_CHARCON    shift, and go to state 36
    TOK_STRINGCON  shift, and go to state 37
    TOK_INTCON     shift, and go to state 38
    TOK_IDENT      shift, and go to state 39
    '+'            shift, and go to state 40
    '-'            shift, and go to state 41
    '('            shift, and go to state 42

    constant  go to state 43
    expr      go to state 66


State 58

   12 vardecl: type TOK_IDENT '=' expr ';' .

    $default  reduce using rule 12 (vardecl)


State 59

   20 statement: expr ';' .

    $default  reduce using rule 20 (statement)


State 60

   38 expr: '(' expr ')' .

    $default  reduce using rule 38 (expr)


State 61

   30 expr: expr . '=' expr
   30     | expr '=' expr .
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '^' expr

    '='  shift, and go to state 52
    '+'  shift, and go to state 53
    '-'  shift, and go to state 54
    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    '^'  shift, and go to state 57

    $default  reduce using rule 30 (expr)


State 62

   30 expr: expr . '=' expr
   31     | expr . '+' expr
   31     | expr '+' expr .
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '^' expr

    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    '^'  shift, and go to state 57

    $default  reduce using rule 31 (expr)


State 63

   30 expr: expr . '=' expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   32     | expr '-' expr .
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '^' expr

    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    '^'  shift, and go to state 57

    $default  reduce using rule 32 (expr)


State 64

   30 expr: expr . '=' expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   33     | expr '*' expr .
   34     | expr . '/' expr
   35     | expr . '^' expr

    '^'  shift, and go to state 57

    $default  reduce using rule 33 (expr)


State 65

   30 expr: expr . '=' expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   34     | expr '/' expr .
   35     | expr . '^' expr

    '^'  shift, and go to state 57

    $default  reduce using rule 34 (expr)


State 66

   30 expr: expr . '=' expr
   31     | expr . '+' expr
   32     | expr . '-' expr
   33     | expr . '*' expr
   34     | expr . '/' expr
   35     | expr . '^' expr
   35     | expr '^' expr .

    '^'  shift, and go to state 57

    $default  reduce using rule 35 (expr)
