Nonterminals useless in grammar

   struct


Terminals unused in grammar

   ROOT
   IDENT
   NUMBER
   TYPE_ID
   FUNCTION
   TOK_PARAM
   TOK_PROTOTYPE
   BLOCK
   TOK_INDEX
   CALL
   ENDIF
   TOK_NOT
   '^'


Rules useless in grammar

   80 struct: TOK_STRUCT TOK_IDENT '{' '}' ';'
   81       | TOK_STRUCT TOK_IDENT block ';'


State 24 conflicts: 20 shift/reduce
State 27 conflicts: 23 reduce/reduce
State 57 conflicts: 2 shift/reduce
State 58 conflicts: 2 shift/reduce
State 108 conflicts: 14 shift/reduce


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program state
    3        | program vardecl
    4        | program function
    5        | program error ';'
    6        | program ';'
    7        | %empty

    8 function: identif '(' ')' ';'
    9         | identif param ')' ';'
   10         | identif '(' ')' block
   11         | identif param ')' block

   12 vardecl: type TOK_IDENT ';'
   13        | type TOK_IDENT '=' express ';'

   14 identif: type TOK_IDENT

   15 param: '(' identif
   16      | param ',' identif

   17 callParam: TOK_IDENT '(' express
   18          | callParam ',' express

   19 call: TOK_IDENT '(' ')'
   20     | callParam ')'

   21 while: TOK_WHILE '(' express ')' select

   22 select: block
   23       | express ';'

   24 ifelse: TOK_IF '(' express ')' select
   25       | TOK_ELSE TOK_IF '(' express ')' select
   26       | TOK_ELSE select

   27 return: TOK_RETURN ';'
   28       | TOK_RETURN express ';'

   29 alloc: TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT '(' ')'
   30      | TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT '(' express ')'
   31      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' express ')'
   32      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' ')'
   33      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' ')'
   34      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express ')'

   35 block: blockBody '}'

   36 blockBody: '{' state
   37          | blockBody state
   38          | '{'

   39 state: vardecl
   40      | block
   41      | while
   42      | ifelse
   43      | return
   44      | express ';'

   45 express: express binop express
   46        | unop
   47        | alloc
   48        | call
   49        | '(' express ')'
   50        | var
   51        | constant

   52 binop: '='
   53      | TOK_EQ
   54      | TOK_NE
   55      | TOK_GT
   56      | TOK_GE
   57      | TOK_LT
   58      | TOK_LE
   59      | '+'
   60      | '-'
   61      | '*'
   62      | '/'
   63      | '%'

   64 unop: '+' express
   65     | '-' express

   66 var: TOK_IDENT
   67    | express '[' express ']'
   68    | express TOK_ARROW TOK_IDENT

   69 type: type_id
   70     | TOK_ARRAY TOK_LT type_id TOK_GT

   71 type_id: TOK_INT
   72        | TOK_STRING
   73        | TOK_CHAR
   74        | TOK_VOID
   75        | TOK_PTR TOK_LT TOK_STRUCT TOK_IDENT TOK_GT

   76 constant: TOK_INTCON
   77         | TOK_STRINGCON
   78         | TOK_CHARCON
   79         | TOK_NULLPTR


Terminals, with rules where they appear

$end (0) 0
'%' (37) 63
'(' (40) 8 10 15 17 19 21 24 25 29 30 31 32 33 34 49
')' (41) 8 9 10 11 19 20 21 24 25 29 30 31 32 33 34 49
'*' (42) 61
'+' (43) 59 64
',' (44) 16 18
'-' (45) 60 65
'/' (47) 62
';' (59) 5 6 8 9 12 13 23 27 28 44
'=' (61) 13 52
'[' (91) 67
']' (93) 67
'^' (94)
'{' (123) 36 38
'}' (125) 35
error (256) 5
ROOT (258)
IDENT (259)
NUMBER (260)
TYPE_ID (261)
FUNCTION (262)
TOK_PARAM (263)
TOK_PROTOTYPE (264)
BLOCK (265)
TOK_NULLPTR (266) 79
TOK_INDEX (267)
CALL (268)
ENDIF (269)
TOK_GE (270) 56
TOK_LE (271) 58
TOK_EQ (272) 53
TOK_NE (273) 54
TOK_GT (274) 29 30 31 32 33 34 55 70 75
TOK_LT (275) 29 30 31 32 33 34 57 70 75
TOK_IF (276) 24 25
TOK_ELSE (277) 25 26
TOK_STRUCT (278) 31 32 75
TOK_ARRAY (279) 33 34 70
TOK_NOT (280)
TOK_ALLOC (281) 29 30 31 32 33 34
TOK_PTR (282) 75
TOK_ARROW (283) 68
TOK_WHILE (284) 21
TOK_VOID (285) 74
TOK_RETURN (286) 27 28
TOK_INT (287) 71
TOK_CHAR (288) 73
TOK_STRING (289) 72
TOK_CHARCON (290) 78
TOK_STRINGCON (291) 29 30 77
TOK_INTCON (292) 76
TOK_IDENT (293) 12 13 14 17 19 31 32 66 68 75
POS (294)
NEG (295)


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
start (57)
    on left: 1, on right: 0
program (58)
    on left: 2 3 4 5 6 7, on right: 1 2 3 4 5 6
function (59)
    on left: 8 9 10 11, on right: 4
vardecl (60)
    on left: 12 13, on right: 3 39
identif (61)
    on left: 14, on right: 8 9 10 11 15 16
param (62)
    on left: 15 16, on right: 9 11 16
callParam (63)
    on left: 17 18, on right: 18 20
call (64)
    on left: 19 20, on right: 48
while (65)
    on left: 21, on right: 41
select (66)
    on left: 22 23, on right: 21 24 25 26
ifelse (67)
    on left: 24 25 26, on right: 42
return (68)
    on left: 27 28, on right: 43
alloc (69)
    on left: 29 30 31 32 33 34, on right: 47
block (70)
    on left: 35, on right: 10 11 22 40
blockBody (71)
    on left: 36 37 38, on right: 35 37
state (72)
    on left: 39 40 41 42 43 44, on right: 2 36 37
express (73)
    on left: 45 46 47 48 49 50 51, on right: 13 17 18 21 23 24 25 28
    30 31 34 44 45 49 64 65 67 68
binop (74)
    on left: 52 53 54 55 56 57 58 59 60 61 62 63, on right: 45
unop (75)
    on left: 64 65, on right: 46
var (76)
    on left: 66 67 68, on right: 50
type (77)
    on left: 69 70, on right: 12 13 14 33 34
type_id (78)
    on left: 71 72 73 74 75, on right: 69 70
constant (79)
    on left: 76 77 78 79, on right: 51


State 0

    0 $accept: . start $end

    $default  reduce using rule 7 (program)

    start    go to state 1
    program  go to state 2


State 1

    0 $accept: start . $end

    $end  shift, and go to state 3


State 2

    1 start: program .
    2 program: program . state
    3        | program . vardecl
    4        | program . function
    5        | program . error ';'
    6        | program . ';'

    error          shift, and go to state 4
    TOK_NULLPTR    shift, and go to state 5
    TOK_IF         shift, and go to state 6
    TOK_ELSE       shift, and go to state 7
    TOK_ARRAY      shift, and go to state 8
    TOK_ALLOC      shift, and go to state 9
    TOK_PTR        shift, and go to state 10
    TOK_WHILE      shift, and go to state 11
    TOK_VOID       shift, and go to state 12
    TOK_RETURN     shift, and go to state 13
    TOK_INT        shift, and go to state 14
    TOK_CHAR       shift, and go to state 15
    TOK_STRING     shift, and go to state 16
    TOK_CHARCON    shift, and go to state 17
    TOK_STRINGCON  shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_IDENT      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    ';'            shift, and go to state 23
    '{'            shift, and go to state 24
    '('            shift, and go to state 25

    $end  reduce using rule 1 (start)

    function   go to state 26
    vardecl    go to state 27
    identif    go to state 28
    callParam  go to state 29
    call       go to state 30
    while      go to state 31
    ifelse     go to state 32
    return     go to state 33
    alloc      go to state 34
    block      go to state 35
    blockBody  go to state 36
    state      go to state 37
    express    go to state 38
    unop       go to state 39
    var        go to state 40
    type       go to state 41
    type_id    go to state 42
    constant   go to state 43


State 3

    0 $accept: start $end .

    $default  accept


State 4

    5 program: program error . ';'

    ';'  shift, and go to state 44


State 5

   79 constant: TOK_NULLPTR .

    $default  reduce using rule 79 (constant)


State 6

   24 ifelse: TOK_IF . '(' express ')' select

    '('  shift, and go to state 45


State 7

   25 ifelse: TOK_ELSE . TOK_IF '(' express ')' select
   26       | TOK_ELSE . select

    TOK_NULLPTR    shift, and go to state 5
    TOK_IF         shift, and go to state 46
    TOK_ALLOC      shift, and go to state 9
    TOK_CHARCON    shift, and go to state 17
    TOK_STRINGCON  shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_IDENT      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '{'            shift, and go to state 24
    '('            shift, and go to state 25

    callParam  go to state 29
    call       go to state 30
    select     go to state 47
    alloc      go to state 34
    block      go to state 48
    blockBody  go to state 36
    express    go to state 49
    unop       go to state 39
    var        go to state 40
    constant   go to state 43


State 8

   70 type: TOK_ARRAY . TOK_LT type_id TOK_GT

    TOK_LT  shift, and go to state 50


State 9

   29 alloc: TOK_ALLOC . TOK_LT TOK_STRINGCON TOK_GT '(' ')'
   30      | TOK_ALLOC . TOK_LT TOK_STRINGCON TOK_GT '(' express ')'
   31      | TOK_ALLOC . TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' express ')'
   32      | TOK_ALLOC . TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' ')'
   33      | TOK_ALLOC . TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' ')'
   34      | TOK_ALLOC . TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express ')'

    TOK_LT  shift, and go to state 51


State 10

   75 type_id: TOK_PTR . TOK_LT TOK_STRUCT TOK_IDENT TOK_GT

    TOK_LT  shift, and go to state 52


State 11

   21 while: TOK_WHILE . '(' express ')' select

    '('  shift, and go to state 53


State 12

   74 type_id: TOK_VOID .

    $default  reduce using rule 74 (type_id)


State 13

   27 return: TOK_RETURN . ';'
   28       | TOK_RETURN . express ';'

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 9
    TOK_CHARCON    shift, and go to state 17
    TOK_STRINGCON  shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_IDENT      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    ';'            shift, and go to state 54
    '('            shift, and go to state 25

    callParam  go to state 29
    call       go to state 30
    alloc      go to state 34
    express    go to state 55
    unop       go to state 39
    var        go to state 40
    constant   go to state 43


State 14

   71 type_id: TOK_INT .

    $default  reduce using rule 71 (type_id)


State 15

   73 type_id: TOK_CHAR .

    $default  reduce using rule 73 (type_id)


State 16

   72 type_id: TOK_STRING .

    $default  reduce using rule 72 (type_id)


State 17

   78 constant: TOK_CHARCON .

    $default  reduce using rule 78 (constant)


State 18

   77 constant: TOK_STRINGCON .

    $default  reduce using rule 77 (constant)


State 19

   76 constant: TOK_INTCON .

    $default  reduce using rule 76 (constant)


State 20

   17 callParam: TOK_IDENT . '(' express
   19 call: TOK_IDENT . '(' ')'
   66 var: TOK_IDENT .

    '('  shift, and go to state 56

    $default  reduce using rule 66 (var)


State 21

   64 unop: '+' . express

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 9
    TOK_CHARCON    shift, and go to state 17
    TOK_STRINGCON  shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_IDENT      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 25

    callParam  go to state 29
    call       go to state 30
    alloc      go to state 34
    express    go to state 57
    unop       go to state 39
    var        go to state 40
    constant   go to state 43


State 22

   65 unop: '-' . express

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 9
    TOK_CHARCON    shift, and go to state 17
    TOK_STRINGCON  shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_IDENT      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 25

    callParam  go to state 29
    call       go to state 30
    alloc      go to state 34
    express    go to state 58
    unop       go to state 39
    var        go to state 40
    constant   go to state 43


State 23

    6 program: program ';' .

    $default  reduce using rule 6 (program)


State 24

   36 blockBody: '{' . state
   38          | '{' .

    TOK_NULLPTR    shift, and go to state 5
    TOK_IF         shift, and go to state 6
    TOK_ELSE       shift, and go to state 7
    TOK_ARRAY      shift, and go to state 8
    TOK_ALLOC      shift, and go to state 9
    TOK_PTR        shift, and go to state 10
    TOK_WHILE      shift, and go to state 11
    TOK_VOID       shift, and go to state 12
    TOK_RETURN     shift, and go to state 13
    TOK_INT        shift, and go to state 14
    TOK_CHAR       shift, and go to state 15
    TOK_STRING     shift, and go to state 16
    TOK_CHARCON    shift, and go to state 17
    TOK_STRINGCON  shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_IDENT      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '{'            shift, and go to state 24
    '('            shift, and go to state 25

    TOK_NULLPTR    [reduce using rule 38 (blockBody)]
    TOK_IF         [reduce using rule 38 (blockBody)]
    TOK_ELSE       [reduce using rule 38 (blockBody)]
    TOK_ARRAY      [reduce using rule 38 (blockBody)]
    TOK_ALLOC      [reduce using rule 38 (blockBody)]
    TOK_PTR        [reduce using rule 38 (blockBody)]
    TOK_WHILE      [reduce using rule 38 (blockBody)]
    TOK_VOID       [reduce using rule 38 (blockBody)]
    TOK_RETURN     [reduce using rule 38 (blockBody)]
    TOK_INT        [reduce using rule 38 (blockBody)]
    TOK_CHAR       [reduce using rule 38 (blockBody)]
    TOK_STRING     [reduce using rule 38 (blockBody)]
    TOK_CHARCON    [reduce using rule 38 (blockBody)]
    TOK_STRINGCON  [reduce using rule 38 (blockBody)]
    TOK_INTCON     [reduce using rule 38 (blockBody)]
    TOK_IDENT      [reduce using rule 38 (blockBody)]
    '+'            [reduce using rule 38 (blockBody)]
    '-'            [reduce using rule 38 (blockBody)]
    '{'            [reduce using rule 38 (blockBody)]
    '('            [reduce using rule 38 (blockBody)]
    $default       reduce using rule 38 (blockBody)

    vardecl    go to state 59
    callParam  go to state 29
    call       go to state 30
    while      go to state 31
    ifelse     go to state 32
    return     go to state 33
    alloc      go to state 34
    block      go to state 35
    blockBody  go to state 36
    state      go to state 60
    express    go to state 38
    unop       go to state 39
    var        go to state 40
    type       go to state 61
    type_id    go to state 42
    constant   go to state 43


State 25

   49 express: '(' . express ')'

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 9
    TOK_CHARCON    shift, and go to state 17
    TOK_STRINGCON  shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_IDENT      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 25

    callParam  go to state 29
    call       go to state 30
    alloc      go to state 34
    express    go to state 62
    unop       go to state 39
    var        go to state 40
    constant   go to state 43


State 26

    4 program: program function .

    $default  reduce using rule 4 (program)


State 27

    3 program: program vardecl .
   39 state: vardecl .

    $end           reduce using rule 3 (program)
    $end           [reduce using rule 39 (state)]
    error          reduce using rule 3 (program)
    error          [reduce using rule 39 (state)]
    TOK_NULLPTR    reduce using rule 3 (program)
    TOK_NULLPTR    [reduce using rule 39 (state)]
    TOK_IF         reduce using rule 3 (program)
    TOK_IF         [reduce using rule 39 (state)]
    TOK_ELSE       reduce using rule 3 (program)
    TOK_ELSE       [reduce using rule 39 (state)]
    TOK_ARRAY      reduce using rule 3 (program)
    TOK_ARRAY      [reduce using rule 39 (state)]
    TOK_ALLOC      reduce using rule 3 (program)
    TOK_ALLOC      [reduce using rule 39 (state)]
    TOK_PTR        reduce using rule 3 (program)
    TOK_PTR        [reduce using rule 39 (state)]
    TOK_WHILE      reduce using rule 3 (program)
    TOK_WHILE      [reduce using rule 39 (state)]
    TOK_VOID       reduce using rule 3 (program)
    TOK_VOID       [reduce using rule 39 (state)]
    TOK_RETURN     reduce using rule 3 (program)
    TOK_RETURN     [reduce using rule 39 (state)]
    TOK_INT        reduce using rule 3 (program)
    TOK_INT        [reduce using rule 39 (state)]
    TOK_CHAR       reduce using rule 3 (program)
    TOK_CHAR       [reduce using rule 39 (state)]
    TOK_STRING     reduce using rule 3 (program)
    TOK_STRING     [reduce using rule 39 (state)]
    TOK_CHARCON    reduce using rule 3 (program)
    TOK_CHARCON    [reduce using rule 39 (state)]
    TOK_STRINGCON  reduce using rule 3 (program)
    TOK_STRINGCON  [reduce using rule 39 (state)]
    TOK_INTCON     reduce using rule 3 (program)
    TOK_INTCON     [reduce using rule 39 (state)]
    TOK_IDENT      reduce using rule 3 (program)
    TOK_IDENT      [reduce using rule 39 (state)]
    '+'            reduce using rule 3 (program)
    '+'            [reduce using rule 39 (state)]
    '-'            reduce using rule 3 (program)
    '-'            [reduce using rule 39 (state)]
    ';'            reduce using rule 3 (program)
    ';'            [reduce using rule 39 (state)]
    '{'            reduce using rule 3 (program)
    '{'            [reduce using rule 39 (state)]
    '('            reduce using rule 3 (program)
    '('            [reduce using rule 39 (state)]
    $default       reduce using rule 3 (program)


State 28

    8 function: identif . '(' ')' ';'
    9         | identif . param ')' ';'
   10         | identif . '(' ')' block
   11         | identif . param ')' block

    '('  shift, and go to state 63

    param  go to state 64


State 29

   18 callParam: callParam . ',' express
   20 call: callParam . ')'

    ')'  shift, and go to state 65
    ','  shift, and go to state 66


State 30

   48 express: call .

    $default  reduce using rule 48 (express)


State 31

   41 state: while .

    $default  reduce using rule 41 (state)


State 32

   42 state: ifelse .

    $default  reduce using rule 42 (state)


State 33

   43 state: return .

    $default  reduce using rule 43 (state)


State 34

   47 express: alloc .

    $default  reduce using rule 47 (express)


State 35

   40 state: block .

    $default  reduce using rule 40 (state)


State 36

   35 block: blockBody . '}'
   37 blockBody: blockBody . state

    TOK_NULLPTR    shift, and go to state 5
    TOK_IF         shift, and go to state 6
    TOK_ELSE       shift, and go to state 7
    TOK_ARRAY      shift, and go to state 8
    TOK_ALLOC      shift, and go to state 9
    TOK_PTR        shift, and go to state 10
    TOK_WHILE      shift, and go to state 11
    TOK_VOID       shift, and go to state 12
    TOK_RETURN     shift, and go to state 13
    TOK_INT        shift, and go to state 14
    TOK_CHAR       shift, and go to state 15
    TOK_STRING     shift, and go to state 16
    TOK_CHARCON    shift, and go to state 17
    TOK_STRINGCON  shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_IDENT      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '{'            shift, and go to state 24
    '}'            shift, and go to state 67
    '('            shift, and go to state 25

    vardecl    go to state 59
    callParam  go to state 29
    call       go to state 30
    while      go to state 31
    ifelse     go to state 32
    return     go to state 33
    alloc      go to state 34
    block      go to state 35
    blockBody  go to state 36
    state      go to state 68
    express    go to state 38
    unop       go to state 39
    var        go to state 40
    type       go to state 61
    type_id    go to state 42
    constant   go to state 43


State 37

    2 program: program state .

    $default  reduce using rule 2 (program)


State 38

   44 state: express . ';'
   45 express: express . binop express
   67 var: express . '[' express ']'
   68    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 69
    TOK_LE     shift, and go to state 70
    TOK_EQ     shift, and go to state 71
    TOK_NE     shift, and go to state 72
    TOK_GT     shift, and go to state 73
    TOK_LT     shift, and go to state 74
    TOK_ARROW  shift, and go to state 75
    '='        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '*'        shift, and go to state 79
    '/'        shift, and go to state 80
    '%'        shift, and go to state 81
    ';'        shift, and go to state 82
    '['        shift, and go to state 83

    binop  go to state 84


State 39

   46 express: unop .

    $default  reduce using rule 46 (express)


State 40

   50 express: var .

    $default  reduce using rule 50 (express)


State 41

   12 vardecl: type . TOK_IDENT ';'
   13        | type . TOK_IDENT '=' express ';'
   14 identif: type . TOK_IDENT

    TOK_IDENT  shift, and go to state 85


State 42

   69 type: type_id .

    $default  reduce using rule 69 (type)


State 43

   51 express: constant .

    $default  reduce using rule 51 (express)


State 44

    5 program: program error ';' .

    $default  reduce using rule 5 (program)


State 45

   24 ifelse: TOK_IF '(' . express ')' select

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 9
    TOK_CHARCON    shift, and go to state 17
    TOK_STRINGCON  shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_IDENT      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 25

    callParam  go to state 29
    call       go to state 30
    alloc      go to state 34
    express    go to state 86
    unop       go to state 39
    var        go to state 40
    constant   go to state 43


State 46

   25 ifelse: TOK_ELSE TOK_IF . '(' express ')' select

    '('  shift, and go to state 87


State 47

   26 ifelse: TOK_ELSE select .

    $default  reduce using rule 26 (ifelse)


State 48

   22 select: block .

    $default  reduce using rule 22 (select)


State 49

   23 select: express . ';'
   45 express: express . binop express
   67 var: express . '[' express ']'
   68    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 69
    TOK_LE     shift, and go to state 70
    TOK_EQ     shift, and go to state 71
    TOK_NE     shift, and go to state 72
    TOK_GT     shift, and go to state 73
    TOK_LT     shift, and go to state 74
    TOK_ARROW  shift, and go to state 75
    '='        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '*'        shift, and go to state 79
    '/'        shift, and go to state 80
    '%'        shift, and go to state 81
    ';'        shift, and go to state 88
    '['        shift, and go to state 83

    binop  go to state 84


State 50

   70 type: TOK_ARRAY TOK_LT . type_id TOK_GT

    TOK_PTR     shift, and go to state 10
    TOK_VOID    shift, and go to state 12
    TOK_INT     shift, and go to state 14
    TOK_CHAR    shift, and go to state 15
    TOK_STRING  shift, and go to state 16

    type_id  go to state 89


State 51

   29 alloc: TOK_ALLOC TOK_LT . TOK_STRINGCON TOK_GT '(' ')'
   30      | TOK_ALLOC TOK_LT . TOK_STRINGCON TOK_GT '(' express ')'
   31      | TOK_ALLOC TOK_LT . TOK_STRUCT TOK_IDENT TOK_GT '(' express ')'
   32      | TOK_ALLOC TOK_LT . TOK_STRUCT TOK_IDENT TOK_GT '(' ')'
   33      | TOK_ALLOC TOK_LT . TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' ')'
   34      | TOK_ALLOC TOK_LT . TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express ')'

    TOK_STRUCT     shift, and go to state 90
    TOK_ARRAY      shift, and go to state 91
    TOK_STRINGCON  shift, and go to state 92


State 52

   75 type_id: TOK_PTR TOK_LT . TOK_STRUCT TOK_IDENT TOK_GT

    TOK_STRUCT  shift, and go to state 93


State 53

   21 while: TOK_WHILE '(' . express ')' select

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 9
    TOK_CHARCON    shift, and go to state 17
    TOK_STRINGCON  shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_IDENT      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 25

    callParam  go to state 29
    call       go to state 30
    alloc      go to state 34
    express    go to state 94
    unop       go to state 39
    var        go to state 40
    constant   go to state 43


State 54

   27 return: TOK_RETURN ';' .

    $default  reduce using rule 27 (return)


State 55

   28 return: TOK_RETURN express . ';'
   45 express: express . binop express
   67 var: express . '[' express ']'
   68    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 69
    TOK_LE     shift, and go to state 70
    TOK_EQ     shift, and go to state 71
    TOK_NE     shift, and go to state 72
    TOK_GT     shift, and go to state 73
    TOK_LT     shift, and go to state 74
    TOK_ARROW  shift, and go to state 75
    '='        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '*'        shift, and go to state 79
    '/'        shift, and go to state 80
    '%'        shift, and go to state 81
    ';'        shift, and go to state 95
    '['        shift, and go to state 83

    binop  go to state 84


State 56

   17 callParam: TOK_IDENT '(' . express
   19 call: TOK_IDENT '(' . ')'

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 9
    TOK_CHARCON    shift, and go to state 17
    TOK_STRINGCON  shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_IDENT      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 25
    ')'            shift, and go to state 96

    callParam  go to state 29
    call       go to state 30
    alloc      go to state 34
    express    go to state 97
    unop       go to state 39
    var        go to state 40
    constant   go to state 43


State 57

   45 express: express . binop express
   64 unop: '+' express .
   67 var: express . '[' express ']'
   68    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 75
    '['        shift, and go to state 83

    TOK_ARROW  [reduce using rule 64 (unop)]
    '['        [reduce using rule 64 (unop)]
    $default   reduce using rule 64 (unop)

    binop  go to state 84


State 58

   45 express: express . binop express
   65 unop: '-' express .
   67 var: express . '[' express ']'
   68    | express . TOK_ARROW TOK_IDENT

    TOK_ARROW  shift, and go to state 75
    '['        shift, and go to state 83

    TOK_ARROW  [reduce using rule 65 (unop)]
    '['        [reduce using rule 65 (unop)]
    $default   reduce using rule 65 (unop)

    binop  go to state 84


State 59

   39 state: vardecl .

    $default  reduce using rule 39 (state)


State 60

   36 blockBody: '{' state .

    $default  reduce using rule 36 (blockBody)


State 61

   12 vardecl: type . TOK_IDENT ';'
   13        | type . TOK_IDENT '=' express ';'

    TOK_IDENT  shift, and go to state 98


State 62

   45 express: express . binop express
   49        | '(' express . ')'
   67 var: express . '[' express ']'
   68    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 69
    TOK_LE     shift, and go to state 70
    TOK_EQ     shift, and go to state 71
    TOK_NE     shift, and go to state 72
    TOK_GT     shift, and go to state 73
    TOK_LT     shift, and go to state 74
    TOK_ARROW  shift, and go to state 75
    '='        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '*'        shift, and go to state 79
    '/'        shift, and go to state 80
    '%'        shift, and go to state 81
    ')'        shift, and go to state 99
    '['        shift, and go to state 83

    binop  go to state 84


State 63

    8 function: identif '(' . ')' ';'
   10         | identif '(' . ')' block
   15 param: '(' . identif

    TOK_ARRAY   shift, and go to state 8
    TOK_PTR     shift, and go to state 10
    TOK_VOID    shift, and go to state 12
    TOK_INT     shift, and go to state 14
    TOK_CHAR    shift, and go to state 15
    TOK_STRING  shift, and go to state 16
    ')'         shift, and go to state 100

    identif  go to state 101
    type     go to state 102
    type_id  go to state 42


State 64

    9 function: identif param . ')' ';'
   11         | identif param . ')' block
   16 param: param . ',' identif

    ')'  shift, and go to state 103
    ','  shift, and go to state 104


State 65

   20 call: callParam ')' .

    $default  reduce using rule 20 (call)


State 66

   18 callParam: callParam ',' . express

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 9
    TOK_CHARCON    shift, and go to state 17
    TOK_STRINGCON  shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_IDENT      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 25

    callParam  go to state 29
    call       go to state 30
    alloc      go to state 34
    express    go to state 105
    unop       go to state 39
    var        go to state 40
    constant   go to state 43


State 67

   35 block: blockBody '}' .

    $default  reduce using rule 35 (block)


State 68

   37 blockBody: blockBody state .

    $default  reduce using rule 37 (blockBody)


State 69

   56 binop: TOK_GE .

    $default  reduce using rule 56 (binop)


State 70

   58 binop: TOK_LE .

    $default  reduce using rule 58 (binop)


State 71

   53 binop: TOK_EQ .

    $default  reduce using rule 53 (binop)


State 72

   54 binop: TOK_NE .

    $default  reduce using rule 54 (binop)


State 73

   55 binop: TOK_GT .

    $default  reduce using rule 55 (binop)


State 74

   57 binop: TOK_LT .

    $default  reduce using rule 57 (binop)


State 75

   68 var: express TOK_ARROW . TOK_IDENT

    TOK_IDENT  shift, and go to state 106


State 76

   52 binop: '=' .

    $default  reduce using rule 52 (binop)


State 77

   59 binop: '+' .

    $default  reduce using rule 59 (binop)


State 78

   60 binop: '-' .

    $default  reduce using rule 60 (binop)


State 79

   61 binop: '*' .

    $default  reduce using rule 61 (binop)


State 80

   62 binop: '/' .

    $default  reduce using rule 62 (binop)


State 81

   63 binop: '%' .

    $default  reduce using rule 63 (binop)


State 82

   44 state: express ';' .

    $default  reduce using rule 44 (state)


State 83

   67 var: express '[' . express ']'

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 9
    TOK_CHARCON    shift, and go to state 17
    TOK_STRINGCON  shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_IDENT      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 25

    callParam  go to state 29
    call       go to state 30
    alloc      go to state 34
    express    go to state 107
    unop       go to state 39
    var        go to state 40
    constant   go to state 43


State 84

   45 express: express binop . express

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 9
    TOK_CHARCON    shift, and go to state 17
    TOK_STRINGCON  shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_IDENT      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 25

    callParam  go to state 29
    call       go to state 30
    alloc      go to state 34
    express    go to state 108
    unop       go to state 39
    var        go to state 40
    constant   go to state 43


State 85

   12 vardecl: type TOK_IDENT . ';'
   13        | type TOK_IDENT . '=' express ';'
   14 identif: type TOK_IDENT .

    '='  shift, and go to state 109
    ';'  shift, and go to state 110

    $default  reduce using rule 14 (identif)


State 86

   24 ifelse: TOK_IF '(' express . ')' select
   45 express: express . binop express
   67 var: express . '[' express ']'
   68    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 69
    TOK_LE     shift, and go to state 70
    TOK_EQ     shift, and go to state 71
    TOK_NE     shift, and go to state 72
    TOK_GT     shift, and go to state 73
    TOK_LT     shift, and go to state 74
    TOK_ARROW  shift, and go to state 75
    '='        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '*'        shift, and go to state 79
    '/'        shift, and go to state 80
    '%'        shift, and go to state 81
    ')'        shift, and go to state 111
    '['        shift, and go to state 83

    binop  go to state 84


State 87

   25 ifelse: TOK_ELSE TOK_IF '(' . express ')' select

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 9
    TOK_CHARCON    shift, and go to state 17
    TOK_STRINGCON  shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_IDENT      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 25

    callParam  go to state 29
    call       go to state 30
    alloc      go to state 34
    express    go to state 112
    unop       go to state 39
    var        go to state 40
    constant   go to state 43


State 88

   23 select: express ';' .

    $default  reduce using rule 23 (select)


State 89

   70 type: TOK_ARRAY TOK_LT type_id . TOK_GT

    TOK_GT  shift, and go to state 113


State 90

   31 alloc: TOK_ALLOC TOK_LT TOK_STRUCT . TOK_IDENT TOK_GT '(' express ')'
   32      | TOK_ALLOC TOK_LT TOK_STRUCT . TOK_IDENT TOK_GT '(' ')'

    TOK_IDENT  shift, and go to state 114


State 91

   33 alloc: TOK_ALLOC TOK_LT TOK_ARRAY . TOK_LT type TOK_GT TOK_GT '(' ')'
   34      | TOK_ALLOC TOK_LT TOK_ARRAY . TOK_LT type TOK_GT TOK_GT '(' express ')'

    TOK_LT  shift, and go to state 115


State 92

   29 alloc: TOK_ALLOC TOK_LT TOK_STRINGCON . TOK_GT '(' ')'
   30      | TOK_ALLOC TOK_LT TOK_STRINGCON . TOK_GT '(' express ')'

    TOK_GT  shift, and go to state 116


State 93

   75 type_id: TOK_PTR TOK_LT TOK_STRUCT . TOK_IDENT TOK_GT

    TOK_IDENT  shift, and go to state 117


State 94

   21 while: TOK_WHILE '(' express . ')' select
   45 express: express . binop express
   67 var: express . '[' express ']'
   68    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 69
    TOK_LE     shift, and go to state 70
    TOK_EQ     shift, and go to state 71
    TOK_NE     shift, and go to state 72
    TOK_GT     shift, and go to state 73
    TOK_LT     shift, and go to state 74
    TOK_ARROW  shift, and go to state 75
    '='        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '*'        shift, and go to state 79
    '/'        shift, and go to state 80
    '%'        shift, and go to state 81
    ')'        shift, and go to state 118
    '['        shift, and go to state 83

    binop  go to state 84


State 95

   28 return: TOK_RETURN express ';' .

    $default  reduce using rule 28 (return)


State 96

   19 call: TOK_IDENT '(' ')' .

    $default  reduce using rule 19 (call)


State 97

   17 callParam: TOK_IDENT '(' express .
   45 express: express . binop express
   67 var: express . '[' express ']'
   68    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 69
    TOK_LE     shift, and go to state 70
    TOK_EQ     shift, and go to state 71
    TOK_NE     shift, and go to state 72
    TOK_GT     shift, and go to state 73
    TOK_LT     shift, and go to state 74
    TOK_ARROW  shift, and go to state 75
    '='        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '*'        shift, and go to state 79
    '/'        shift, and go to state 80
    '%'        shift, and go to state 81
    '['        shift, and go to state 83

    $default  reduce using rule 17 (callParam)

    binop  go to state 84


State 98

   12 vardecl: type TOK_IDENT . ';'
   13        | type TOK_IDENT . '=' express ';'

    '='  shift, and go to state 109
    ';'  shift, and go to state 110


State 99

   49 express: '(' express ')' .

    $default  reduce using rule 49 (express)


State 100

    8 function: identif '(' ')' . ';'
   10         | identif '(' ')' . block

    ';'  shift, and go to state 119
    '{'  shift, and go to state 24

    block      go to state 120
    blockBody  go to state 36


State 101

   15 param: '(' identif .

    $default  reduce using rule 15 (param)


State 102

   14 identif: type . TOK_IDENT

    TOK_IDENT  shift, and go to state 121


State 103

    9 function: identif param ')' . ';'
   11         | identif param ')' . block

    ';'  shift, and go to state 122
    '{'  shift, and go to state 24

    block      go to state 123
    blockBody  go to state 36


State 104

   16 param: param ',' . identif

    TOK_ARRAY   shift, and go to state 8
    TOK_PTR     shift, and go to state 10
    TOK_VOID    shift, and go to state 12
    TOK_INT     shift, and go to state 14
    TOK_CHAR    shift, and go to state 15
    TOK_STRING  shift, and go to state 16

    identif  go to state 124
    type     go to state 102
    type_id  go to state 42


State 105

   18 callParam: callParam ',' express .
   45 express: express . binop express
   67 var: express . '[' express ']'
   68    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 69
    TOK_LE     shift, and go to state 70
    TOK_EQ     shift, and go to state 71
    TOK_NE     shift, and go to state 72
    TOK_GT     shift, and go to state 73
    TOK_LT     shift, and go to state 74
    TOK_ARROW  shift, and go to state 75
    '='        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '*'        shift, and go to state 79
    '/'        shift, and go to state 80
    '%'        shift, and go to state 81
    '['        shift, and go to state 83

    $default  reduce using rule 18 (callParam)

    binop  go to state 84


State 106

   68 var: express TOK_ARROW TOK_IDENT .

    $default  reduce using rule 68 (var)


State 107

   45 express: express . binop express
   67 var: express . '[' express ']'
   67    | express '[' express . ']'
   68    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 69
    TOK_LE     shift, and go to state 70
    TOK_EQ     shift, and go to state 71
    TOK_NE     shift, and go to state 72
    TOK_GT     shift, and go to state 73
    TOK_LT     shift, and go to state 74
    TOK_ARROW  shift, and go to state 75
    '='        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '*'        shift, and go to state 79
    '/'        shift, and go to state 80
    '%'        shift, and go to state 81
    '['        shift, and go to state 83
    ']'        shift, and go to state 125

    binop  go to state 84


State 108

   45 express: express . binop express
   45        | express binop express .
   67 var: express . '[' express ']'
   68    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 69
    TOK_LE     shift, and go to state 70
    TOK_EQ     shift, and go to state 71
    TOK_NE     shift, and go to state 72
    TOK_GT     shift, and go to state 73
    TOK_LT     shift, and go to state 74
    TOK_ARROW  shift, and go to state 75
    '='        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '*'        shift, and go to state 79
    '/'        shift, and go to state 80
    '%'        shift, and go to state 81
    '['        shift, and go to state 83

    TOK_GE     [reduce using rule 45 (express)]
    TOK_LE     [reduce using rule 45 (express)]
    TOK_EQ     [reduce using rule 45 (express)]
    TOK_NE     [reduce using rule 45 (express)]
    TOK_GT     [reduce using rule 45 (express)]
    TOK_LT     [reduce using rule 45 (express)]
    TOK_ARROW  [reduce using rule 45 (express)]
    '='        [reduce using rule 45 (express)]
    '+'        [reduce using rule 45 (express)]
    '-'        [reduce using rule 45 (express)]
    '*'        [reduce using rule 45 (express)]
    '/'        [reduce using rule 45 (express)]
    '%'        [reduce using rule 45 (express)]
    '['        [reduce using rule 45 (express)]
    $default   reduce using rule 45 (express)

    binop  go to state 84


State 109

   13 vardecl: type TOK_IDENT '=' . express ';'

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 9
    TOK_CHARCON    shift, and go to state 17
    TOK_STRINGCON  shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_IDENT      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 25

    callParam  go to state 29
    call       go to state 30
    alloc      go to state 34
    express    go to state 126
    unop       go to state 39
    var        go to state 40
    constant   go to state 43


State 110

   12 vardecl: type TOK_IDENT ';' .

    $default  reduce using rule 12 (vardecl)


State 111

   24 ifelse: TOK_IF '(' express ')' . select

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 9
    TOK_CHARCON    shift, and go to state 17
    TOK_STRINGCON  shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_IDENT      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '{'            shift, and go to state 24
    '('            shift, and go to state 25

    callParam  go to state 29
    call       go to state 30
    select     go to state 127
    alloc      go to state 34
    block      go to state 48
    blockBody  go to state 36
    express    go to state 49
    unop       go to state 39
    var        go to state 40
    constant   go to state 43


State 112

   25 ifelse: TOK_ELSE TOK_IF '(' express . ')' select
   45 express: express . binop express
   67 var: express . '[' express ']'
   68    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 69
    TOK_LE     shift, and go to state 70
    TOK_EQ     shift, and go to state 71
    TOK_NE     shift, and go to state 72
    TOK_GT     shift, and go to state 73
    TOK_LT     shift, and go to state 74
    TOK_ARROW  shift, and go to state 75
    '='        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '*'        shift, and go to state 79
    '/'        shift, and go to state 80
    '%'        shift, and go to state 81
    ')'        shift, and go to state 128
    '['        shift, and go to state 83

    binop  go to state 84


State 113

   70 type: TOK_ARRAY TOK_LT type_id TOK_GT .

    $default  reduce using rule 70 (type)


State 114

   31 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT . TOK_GT '(' express ')'
   32      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT . TOK_GT '(' ')'

    TOK_GT  shift, and go to state 129


State 115

   33 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT . type TOK_GT TOK_GT '(' ')'
   34      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT . type TOK_GT TOK_GT '(' express ')'

    TOK_ARRAY   shift, and go to state 8
    TOK_PTR     shift, and go to state 10
    TOK_VOID    shift, and go to state 12
    TOK_INT     shift, and go to state 14
    TOK_CHAR    shift, and go to state 15
    TOK_STRING  shift, and go to state 16

    type     go to state 130
    type_id  go to state 42


State 116

   29 alloc: TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT . '(' ')'
   30      | TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT . '(' express ')'

    '('  shift, and go to state 131


State 117

   75 type_id: TOK_PTR TOK_LT TOK_STRUCT TOK_IDENT . TOK_GT

    TOK_GT  shift, and go to state 132


State 118

   21 while: TOK_WHILE '(' express ')' . select

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 9
    TOK_CHARCON    shift, and go to state 17
    TOK_STRINGCON  shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_IDENT      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '{'            shift, and go to state 24
    '('            shift, and go to state 25

    callParam  go to state 29
    call       go to state 30
    select     go to state 133
    alloc      go to state 34
    block      go to state 48
    blockBody  go to state 36
    express    go to state 49
    unop       go to state 39
    var        go to state 40
    constant   go to state 43


State 119

    8 function: identif '(' ')' ';' .

    $default  reduce using rule 8 (function)


State 120

   10 function: identif '(' ')' block .

    $default  reduce using rule 10 (function)


State 121

   14 identif: type TOK_IDENT .

    $default  reduce using rule 14 (identif)


State 122

    9 function: identif param ')' ';' .

    $default  reduce using rule 9 (function)


State 123

   11 function: identif param ')' block .

    $default  reduce using rule 11 (function)


State 124

   16 param: param ',' identif .

    $default  reduce using rule 16 (param)


State 125

   67 var: express '[' express ']' .

    $default  reduce using rule 67 (var)


State 126

   13 vardecl: type TOK_IDENT '=' express . ';'
   45 express: express . binop express
   67 var: express . '[' express ']'
   68    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 69
    TOK_LE     shift, and go to state 70
    TOK_EQ     shift, and go to state 71
    TOK_NE     shift, and go to state 72
    TOK_GT     shift, and go to state 73
    TOK_LT     shift, and go to state 74
    TOK_ARROW  shift, and go to state 75
    '='        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '*'        shift, and go to state 79
    '/'        shift, and go to state 80
    '%'        shift, and go to state 81
    ';'        shift, and go to state 134
    '['        shift, and go to state 83

    binop  go to state 84


State 127

   24 ifelse: TOK_IF '(' express ')' select .

    $default  reduce using rule 24 (ifelse)


State 128

   25 ifelse: TOK_ELSE TOK_IF '(' express ')' . select

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 9
    TOK_CHARCON    shift, and go to state 17
    TOK_STRINGCON  shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_IDENT      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '{'            shift, and go to state 24
    '('            shift, and go to state 25

    callParam  go to state 29
    call       go to state 30
    select     go to state 135
    alloc      go to state 34
    block      go to state 48
    blockBody  go to state 36
    express    go to state 49
    unop       go to state 39
    var        go to state 40
    constant   go to state 43


State 129

   31 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT . '(' express ')'
   32      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT . '(' ')'

    '('  shift, and go to state 136


State 130

   33 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type . TOK_GT TOK_GT '(' ')'
   34      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type . TOK_GT TOK_GT '(' express ')'

    TOK_GT  shift, and go to state 137


State 131

   29 alloc: TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT '(' . ')'
   30      | TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT '(' . express ')'

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 9
    TOK_CHARCON    shift, and go to state 17
    TOK_STRINGCON  shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_IDENT      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 25
    ')'            shift, and go to state 138

    callParam  go to state 29
    call       go to state 30
    alloc      go to state 34
    express    go to state 139
    unop       go to state 39
    var        go to state 40
    constant   go to state 43


State 132

   75 type_id: TOK_PTR TOK_LT TOK_STRUCT TOK_IDENT TOK_GT .

    $default  reduce using rule 75 (type_id)


State 133

   21 while: TOK_WHILE '(' express ')' select .

    $default  reduce using rule 21 (while)


State 134

   13 vardecl: type TOK_IDENT '=' express ';' .

    $default  reduce using rule 13 (vardecl)


State 135

   25 ifelse: TOK_ELSE TOK_IF '(' express ')' select .

    $default  reduce using rule 25 (ifelse)


State 136

   31 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' . express ')'
   32      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' . ')'

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 9
    TOK_CHARCON    shift, and go to state 17
    TOK_STRINGCON  shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_IDENT      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 25
    ')'            shift, and go to state 140

    callParam  go to state 29
    call       go to state 30
    alloc      go to state 34
    express    go to state 141
    unop       go to state 39
    var        go to state 40
    constant   go to state 43


State 137

   33 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT . TOK_GT '(' ')'
   34      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT . TOK_GT '(' express ')'

    TOK_GT  shift, and go to state 142


State 138

   29 alloc: TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT '(' ')' .

    $default  reduce using rule 29 (alloc)


State 139

   30 alloc: TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT '(' express . ')'
   45 express: express . binop express
   67 var: express . '[' express ']'
   68    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 69
    TOK_LE     shift, and go to state 70
    TOK_EQ     shift, and go to state 71
    TOK_NE     shift, and go to state 72
    TOK_GT     shift, and go to state 73
    TOK_LT     shift, and go to state 74
    TOK_ARROW  shift, and go to state 75
    '='        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '*'        shift, and go to state 79
    '/'        shift, and go to state 80
    '%'        shift, and go to state 81
    ')'        shift, and go to state 143
    '['        shift, and go to state 83

    binop  go to state 84


State 140

   32 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' ')' .

    $default  reduce using rule 32 (alloc)


State 141

   31 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' express . ')'
   45 express: express . binop express
   67 var: express . '[' express ']'
   68    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 69
    TOK_LE     shift, and go to state 70
    TOK_EQ     shift, and go to state 71
    TOK_NE     shift, and go to state 72
    TOK_GT     shift, and go to state 73
    TOK_LT     shift, and go to state 74
    TOK_ARROW  shift, and go to state 75
    '='        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '*'        shift, and go to state 79
    '/'        shift, and go to state 80
    '%'        shift, and go to state 81
    ')'        shift, and go to state 144
    '['        shift, and go to state 83

    binop  go to state 84


State 142

   33 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT . '(' ')'
   34      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT . '(' express ')'

    '('  shift, and go to state 145


State 143

   30 alloc: TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT '(' express ')' .

    $default  reduce using rule 30 (alloc)


State 144

   31 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' express ')' .

    $default  reduce using rule 31 (alloc)


State 145

   33 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' . ')'
   34      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' . express ')'

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 9
    TOK_CHARCON    shift, and go to state 17
    TOK_STRINGCON  shift, and go to state 18
    TOK_INTCON     shift, and go to state 19
    TOK_IDENT      shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 25
    ')'            shift, and go to state 146

    callParam  go to state 29
    call       go to state 30
    alloc      go to state 34
    express    go to state 147
    unop       go to state 39
    var        go to state 40
    constant   go to state 43


State 146

   33 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' ')' .

    $default  reduce using rule 33 (alloc)


State 147

   34 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express . ')'
   45 express: express . binop express
   67 var: express . '[' express ']'
   68    | express . TOK_ARROW TOK_IDENT

    TOK_GE     shift, and go to state 69
    TOK_LE     shift, and go to state 70
    TOK_EQ     shift, and go to state 71
    TOK_NE     shift, and go to state 72
    TOK_GT     shift, and go to state 73
    TOK_LT     shift, and go to state 74
    TOK_ARROW  shift, and go to state 75
    '='        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '*'        shift, and go to state 79
    '/'        shift, and go to state 80
    '%'        shift, and go to state 81
    ')'        shift, and go to state 148
    '['        shift, and go to state 83

    binop  go to state 84


State 148

   34 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express ')' .

    $default  reduce using rule 34 (alloc)
