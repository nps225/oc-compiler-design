Nonterminals useless in grammar

   identif
   type_id


Terminals unused in grammar

   ROOT
   IDENT
   TYPE_ID
   FUNCTION
   TOK_GE
   TOK_LE
   TOK_EQ
   TOK_NE
   TOK_GT
   TOK_LT
   TOK_IF
   TOK_ELSE
   TOK_STRUCT
   TOK_ARRAY
   TOK_NOT
   TOK_ALLOC
   TOK_PTR
   TOK_ARROW
   TOK_WHILE
   TOK_VOID
   TOK_RETURN
   TOK_INT
   TOK_CHAR
   TOK_STRING
   TOK_CHARCON
   TOK_STRINGCON
   TOK_INTCON
   '%'


Rules useless in grammar

   18 identif: type_id IDENT

   19 type_id: TOK_INT
   20        | TOK_STRING
   21        | TOK_CHAR
   22        | TOK_VOID
   23        | TOK_IDENT


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program function
    3        | program error ';'
    4        | program ';'
    5        | %empty

    6 function: expr ';'

    7 expr: expr '=' expr
    8     | expr '+' expr
    9     | expr '-' expr
   10     | expr '*' expr
   11     | expr '/' expr
   12     | expr '^' expr
   13     | '+' expr
   14     | '-' expr
   15     | '(' expr ')'
   16     | TOK_IDENT
   17     | NUMBER


Terminals, with rules where they appear

$end (0) 0
'%' (37)
'(' (40) 15
')' (41) 15
'*' (42) 10
'+' (43) 8 13
'-' (45) 9 14
'/' (47) 11
';' (59) 3 4 6
'=' (61) 7
'^' (94) 12
error (256) 3
ROOT (258)
IDENT (259)
NUMBER (260) 17
TYPE_ID (261)
FUNCTION (262)
TOK_GE (263)
TOK_LE (264)
TOK_EQ (265)
TOK_NE (266)
TOK_GT (267)
TOK_LT (268)
TOK_IF (269)
TOK_ELSE (270)
TOK_STRUCT (271)
TOK_ARRAY (272)
TOK_NOT (273)
TOK_ALLOC (274)
TOK_PTR (275)
TOK_ARROW (276)
TOK_WHILE (277)
TOK_VOID (278)
TOK_RETURN (279)
TOK_INT (280)
TOK_CHAR (281)
TOK_STRING (282)
TOK_CHARCON (283)
TOK_STRINGCON (284)
TOK_INTCON (285)
TOK_IDENT (286) 16
POS (287)
NEG (288)


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
start (45)
    on left: 1, on right: 0
program (46)
    on left: 2 3 4 5, on right: 1 2 3 4
function (47)
    on left: 6, on right: 2
expr (48)
    on left: 7 8 9 10 11 12 13 14 15 16 17, on right: 6 7 8 9 10 11
    12 13 14 15


State 0

    0 $accept: . start $end

    $default  reduce using rule 5 (program)

    start    go to state 1
    program  go to state 2


State 1

    0 $accept: start . $end

    $end  shift, and go to state 3


State 2

    1 start: program .
    2 program: program . function
    3        | program . error ';'
    4        | program . ';'

    error      shift, and go to state 4
    NUMBER     shift, and go to state 5
    TOK_IDENT  shift, and go to state 6
    '+'        shift, and go to state 7
    '-'        shift, and go to state 8
    ';'        shift, and go to state 9
    '('        shift, and go to state 10

    $end  reduce using rule 1 (start)

    function  go to state 11
    expr      go to state 12


State 3

    0 $accept: start $end .

    $default  accept


State 4

    3 program: program error . ';'

    ';'  shift, and go to state 13


State 5

   17 expr: NUMBER .

    $default  reduce using rule 17 (expr)


State 6

   16 expr: TOK_IDENT .

    $default  reduce using rule 16 (expr)


State 7

   13 expr: '+' . expr

    NUMBER     shift, and go to state 5
    TOK_IDENT  shift, and go to state 6
    '+'        shift, and go to state 7
    '-'        shift, and go to state 8
    '('        shift, and go to state 10

    expr  go to state 14


State 8

   14 expr: '-' . expr

    NUMBER     shift, and go to state 5
    TOK_IDENT  shift, and go to state 6
    '+'        shift, and go to state 7
    '-'        shift, and go to state 8
    '('        shift, and go to state 10

    expr  go to state 15


State 9

    4 program: program ';' .

    $default  reduce using rule 4 (program)


State 10

   15 expr: '(' . expr ')'

    NUMBER     shift, and go to state 5
    TOK_IDENT  shift, and go to state 6
    '+'        shift, and go to state 7
    '-'        shift, and go to state 8
    '('        shift, and go to state 10

    expr  go to state 16


State 11

    2 program: program function .

    $default  reduce using rule 2 (program)


State 12

    6 function: expr . ';'
    7 expr: expr . '=' expr
    8     | expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '^' expr

    '='  shift, and go to state 17
    '+'  shift, and go to state 18
    '-'  shift, and go to state 19
    '*'  shift, and go to state 20
    '/'  shift, and go to state 21
    '^'  shift, and go to state 22
    ';'  shift, and go to state 23


State 13

    3 program: program error ';' .

    $default  reduce using rule 3 (program)


State 14

    7 expr: expr . '=' expr
    8     | expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '^' expr
   13     | '+' expr .

    $default  reduce using rule 13 (expr)


State 15

    7 expr: expr . '=' expr
    8     | expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '^' expr
   14     | '-' expr .

    $default  reduce using rule 14 (expr)


State 16

    7 expr: expr . '=' expr
    8     | expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '^' expr
   15     | '(' expr . ')'

    '='  shift, and go to state 17
    '+'  shift, and go to state 18
    '-'  shift, and go to state 19
    '*'  shift, and go to state 20
    '/'  shift, and go to state 21
    '^'  shift, and go to state 22
    ')'  shift, and go to state 24


State 17

    7 expr: expr '=' . expr

    NUMBER     shift, and go to state 5
    TOK_IDENT  shift, and go to state 6
    '+'        shift, and go to state 7
    '-'        shift, and go to state 8
    '('        shift, and go to state 10

    expr  go to state 25


State 18

    8 expr: expr '+' . expr

    NUMBER     shift, and go to state 5
    TOK_IDENT  shift, and go to state 6
    '+'        shift, and go to state 7
    '-'        shift, and go to state 8
    '('        shift, and go to state 10

    expr  go to state 26


State 19

    9 expr: expr '-' . expr

    NUMBER     shift, and go to state 5
    TOK_IDENT  shift, and go to state 6
    '+'        shift, and go to state 7
    '-'        shift, and go to state 8
    '('        shift, and go to state 10

    expr  go to state 27


State 20

   10 expr: expr '*' . expr

    NUMBER     shift, and go to state 5
    TOK_IDENT  shift, and go to state 6
    '+'        shift, and go to state 7
    '-'        shift, and go to state 8
    '('        shift, and go to state 10

    expr  go to state 28


State 21

   11 expr: expr '/' . expr

    NUMBER     shift, and go to state 5
    TOK_IDENT  shift, and go to state 6
    '+'        shift, and go to state 7
    '-'        shift, and go to state 8
    '('        shift, and go to state 10

    expr  go to state 29


State 22

   12 expr: expr '^' . expr

    NUMBER     shift, and go to state 5
    TOK_IDENT  shift, and go to state 6
    '+'        shift, and go to state 7
    '-'        shift, and go to state 8
    '('        shift, and go to state 10

    expr  go to state 30


State 23

    6 function: expr ';' .

    $default  reduce using rule 6 (function)


State 24

   15 expr: '(' expr ')' .

    $default  reduce using rule 15 (expr)


State 25

    7 expr: expr . '=' expr
    7     | expr '=' expr .
    8     | expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '^' expr

    '='  shift, and go to state 17
    '+'  shift, and go to state 18
    '-'  shift, and go to state 19
    '*'  shift, and go to state 20
    '/'  shift, and go to state 21
    '^'  shift, and go to state 22

    $default  reduce using rule 7 (expr)


State 26

    7 expr: expr . '=' expr
    8     | expr . '+' expr
    8     | expr '+' expr .
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '^' expr

    '*'  shift, and go to state 20
    '/'  shift, and go to state 21
    '^'  shift, and go to state 22

    $default  reduce using rule 8 (expr)


State 27

    7 expr: expr . '=' expr
    8     | expr . '+' expr
    9     | expr . '-' expr
    9     | expr '-' expr .
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '^' expr

    '*'  shift, and go to state 20
    '/'  shift, and go to state 21
    '^'  shift, and go to state 22

    $default  reduce using rule 9 (expr)


State 28

    7 expr: expr . '=' expr
    8     | expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   10     | expr '*' expr .
   11     | expr . '/' expr
   12     | expr . '^' expr

    '^'  shift, and go to state 22

    $default  reduce using rule 10 (expr)


State 29

    7 expr: expr . '=' expr
    8     | expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   11     | expr '/' expr .
   12     | expr . '^' expr

    '^'  shift, and go to state 22

    $default  reduce using rule 11 (expr)


State 30

    7 expr: expr . '=' expr
    8     | expr . '+' expr
    9     | expr . '-' expr
   10     | expr . '*' expr
   11     | expr . '/' expr
   12     | expr . '^' expr
   12     | expr '^' expr .

    '^'  shift, and go to state 22

    $default  reduce using rule 12 (expr)
