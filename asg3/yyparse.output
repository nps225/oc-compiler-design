Nonterminals useless in grammar

   function
   identif
   param
   unop


Terminals unused in grammar

   ROOT
   IDENT
   TYPE_ID
   FUNCTION
   TOK_PARAM
   TOK_PROTOTYPE
   BLOCK
   TOK_INDEX
   TOK_STRUCT
   TOK_ARRAY
   TOK_NOT
   TOK_ALLOC
   TOK_PTR
   TOK_ARROW
   TOK_RETURN
   ','


Rules useless in grammar

   60 function: identif '(' ')' ';'
   61         | identif param ')' ';'
   62         | identif '(' ')' block
   63         | identif param ')' block

   64 identif: type TOK_IDENT

   65 param: '(' identif
   66      | '(' identif ',' identif

   67 unop: '+' express
   68     | '-' express


State 52 conflicts: 13 shift/reduce
State 65 conflicts: 9 shift/reduce


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program state
    3        | program vardecl
    4        | program error ';'
    5        | program ';'
    6        | %empty

    7 vardecl: type TOK_IDENT ';'
    8        | type TOK_IDENT '=' expr ';'

    9 while: TOK_WHILE '(' express ')' block

   10 ifelse: TOK_IF '(' express ')' block
   11       | TOK_IF '(' express ')' block TOK_ELSE block

   12 block: blockBody '}'

   13 blockBody: '{' statement
   14          | blockBody statement
   15          | '{'

   16 statement: expr ';'

   17 state: while
   18      | ifelse
   19      | express ';'

   20 express: express binop express
   21        | '(' express ')'
   22        | var
   23        | constant

   24 binop: '='
   25      | TOK_EQ
   26      | TOK_NE
   27      | TOK_GT
   28      | TOK_GE
   29      | TOK_LT
   30      | TOK_LE
   31      | '+'
   32      | '-'
   33      | '*'
   34      | '/'
   35      | '%'

   36 var: TOK_IDENT
   37    | express '[' express ']'

   38 type: type_id

   39 type_id: TOK_INT
   40        | TOK_STRING
   41        | TOK_CHAR
   42        | TOK_VOID
   43        | TOK_IDENT

   44 constant: TOK_INTCON
   45         | TOK_STRINGCON
   46         | TOK_CHARCON
   47         | TOK_NULLPTR

   48 expr: expr '=' expr
   49     | expr '+' expr
   50     | expr '-' expr
   51     | expr '*' expr
   52     | expr '/' expr
   53     | expr '^' expr
   54     | '+' expr
   55     | '-' expr
   56     | '(' expr ')'
   57     | TOK_IDENT
   58     | constant
   59     | NUMBER


Terminals, with rules where they appear

$end (0) 0
'%' (37) 35
'(' (40) 9 10 11 21 56
')' (41) 9 10 11 21 56
'*' (42) 33 51
'+' (43) 31 49 54
',' (44)
'-' (45) 32 50 55
'/' (47) 34 52
';' (59) 4 5 7 8 16 19
'=' (61) 8 24 48
'[' (91) 37
']' (93) 37
'^' (94) 53
'{' (123) 13 15
'}' (125) 12
error (256) 4
ROOT (258)
IDENT (259)
NUMBER (260) 59
TYPE_ID (261)
FUNCTION (262)
TOK_PARAM (263)
TOK_PROTOTYPE (264)
BLOCK (265)
TOK_NULLPTR (266) 47
TOK_INDEX (267)
TOK_GE (268) 28
TOK_LE (269) 30
TOK_EQ (270) 25
TOK_NE (271) 26
TOK_GT (272) 27
TOK_LT (273) 29
TOK_IF (274) 10 11
TOK_ELSE (275) 11
TOK_STRUCT (276)
TOK_ARRAY (277)
TOK_NOT (278)
TOK_ALLOC (279)
TOK_PTR (280)
TOK_ARROW (281)
TOK_WHILE (282) 9
TOK_VOID (283) 42
TOK_RETURN (284)
TOK_INT (285) 39
TOK_CHAR (286) 41
TOK_STRING (287) 40
TOK_CHARCON (288) 46
TOK_STRINGCON (289) 45
TOK_INTCON (290) 44
TOK_IDENT (291) 7 8 36 43 57
POS (292)
NEG (293)


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
start (55)
    on left: 1, on right: 0
program (56)
    on left: 2 3 4 5 6, on right: 1 2 3 4 5
vardecl (57)
    on left: 7 8, on right: 3
while (58)
    on left: 9, on right: 17
ifelse (59)
    on left: 10 11, on right: 18
block (60)
    on left: 12, on right: 9 10 11
blockBody (61)
    on left: 13 14 15, on right: 12 14
statement (62)
    on left: 16, on right: 13 14
state (63)
    on left: 17 18 19, on right: 2
express (64)
    on left: 20 21 22 23, on right: 9 10 11 19 20 21 37
binop (65)
    on left: 24 25 26 27 28 29 30 31 32 33 34 35, on right: 20
var (66)
    on left: 36 37, on right: 22
type (67)
    on left: 38, on right: 7 8
type_id (68)
    on left: 39 40 41 42 43, on right: 38
constant (69)
    on left: 44 45 46 47, on right: 23 58
expr (70)
    on left: 48 49 50 51 52 53 54 55 56 57 58 59, on right: 8 16 48
    49 50 51 52 53 54 55 56


State 0

    0 $accept: . start $end

    $default  reduce using rule 6 (program)

    start    go to state 1
    program  go to state 2


State 1

    0 $accept: start . $end

    $end  shift, and go to state 3


State 2

    1 start: program .
    2 program: program . state
    3        | program . vardecl
    4        | program . error ';'
    5        | program . ';'

    error          shift, and go to state 4
    TOK_NULLPTR    shift, and go to state 5
    TOK_IF         shift, and go to state 6
    TOK_WHILE      shift, and go to state 7
    TOK_VOID       shift, and go to state 8
    TOK_INT        shift, and go to state 9
    TOK_CHAR       shift, and go to state 10
    TOK_STRING     shift, and go to state 11
    TOK_CHARCON    shift, and go to state 12
    TOK_STRINGCON  shift, and go to state 13
    TOK_INTCON     shift, and go to state 14
    TOK_IDENT      shift, and go to state 15
    ';'            shift, and go to state 16
    '('            shift, and go to state 17

    $end  reduce using rule 1 (start)

    vardecl   go to state 18
    while     go to state 19
    ifelse    go to state 20
    state     go to state 21
    express   go to state 22
    var       go to state 23
    type      go to state 24
    type_id   go to state 25
    constant  go to state 26


State 3

    0 $accept: start $end .

    $default  accept


State 4

    4 program: program error . ';'

    ';'  shift, and go to state 27


State 5

   47 constant: TOK_NULLPTR .

    $default  reduce using rule 47 (constant)


State 6

   10 ifelse: TOK_IF . '(' express ')' block
   11       | TOK_IF . '(' express ')' block TOK_ELSE block

    '('  shift, and go to state 28


State 7

    9 while: TOK_WHILE . '(' express ')' block

    '('  shift, and go to state 29


State 8

   42 type_id: TOK_VOID .

    $default  reduce using rule 42 (type_id)


State 9

   39 type_id: TOK_INT .

    $default  reduce using rule 39 (type_id)


State 10

   41 type_id: TOK_CHAR .

    $default  reduce using rule 41 (type_id)


State 11

   40 type_id: TOK_STRING .

    $default  reduce using rule 40 (type_id)


State 12

   46 constant: TOK_CHARCON .

    $default  reduce using rule 46 (constant)


State 13

   45 constant: TOK_STRINGCON .

    $default  reduce using rule 45 (constant)


State 14

   44 constant: TOK_INTCON .

    $default  reduce using rule 44 (constant)


State 15

   36 var: TOK_IDENT .
   43 type_id: TOK_IDENT .

    TOK_IDENT  reduce using rule 43 (type_id)
    $default   reduce using rule 36 (var)


State 16

    5 program: program ';' .

    $default  reduce using rule 5 (program)


State 17

   21 express: '(' . express ')'

    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 12
    TOK_STRINGCON  shift, and go to state 13
    TOK_INTCON     shift, and go to state 14
    TOK_IDENT      shift, and go to state 30
    '('            shift, and go to state 17

    express   go to state 31
    var       go to state 23
    constant  go to state 26


State 18

    3 program: program vardecl .

    $default  reduce using rule 3 (program)


State 19

   17 state: while .

    $default  reduce using rule 17 (state)


State 20

   18 state: ifelse .

    $default  reduce using rule 18 (state)


State 21

    2 program: program state .

    $default  reduce using rule 2 (program)


State 22

   19 state: express . ';'
   20 express: express . binop express
   37 var: express . '[' express ']'

    TOK_GE  shift, and go to state 32
    TOK_LE  shift, and go to state 33
    TOK_EQ  shift, and go to state 34
    TOK_NE  shift, and go to state 35
    TOK_GT  shift, and go to state 36
    TOK_LT  shift, and go to state 37
    '='     shift, and go to state 38
    '+'     shift, and go to state 39
    '-'     shift, and go to state 40
    '*'     shift, and go to state 41
    '/'     shift, and go to state 42
    '%'     shift, and go to state 43
    ';'     shift, and go to state 44
    '['     shift, and go to state 45

    binop  go to state 46


State 23

   22 express: var .

    $default  reduce using rule 22 (express)


State 24

    7 vardecl: type . TOK_IDENT ';'
    8        | type . TOK_IDENT '=' expr ';'

    TOK_IDENT  shift, and go to state 47


State 25

   38 type: type_id .

    $default  reduce using rule 38 (type)


State 26

   23 express: constant .

    $default  reduce using rule 23 (express)


State 27

    4 program: program error ';' .

    $default  reduce using rule 4 (program)


State 28

   10 ifelse: TOK_IF '(' . express ')' block
   11       | TOK_IF '(' . express ')' block TOK_ELSE block

    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 12
    TOK_STRINGCON  shift, and go to state 13
    TOK_INTCON     shift, and go to state 14
    TOK_IDENT      shift, and go to state 30
    '('            shift, and go to state 17

    express   go to state 48
    var       go to state 23
    constant  go to state 26


State 29

    9 while: TOK_WHILE '(' . express ')' block

    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 12
    TOK_STRINGCON  shift, and go to state 13
    TOK_INTCON     shift, and go to state 14
    TOK_IDENT      shift, and go to state 30
    '('            shift, and go to state 17

    express   go to state 49
    var       go to state 23
    constant  go to state 26


State 30

   36 var: TOK_IDENT .

    $default  reduce using rule 36 (var)


State 31

   20 express: express . binop express
   21        | '(' express . ')'
   37 var: express . '[' express ']'

    TOK_GE  shift, and go to state 32
    TOK_LE  shift, and go to state 33
    TOK_EQ  shift, and go to state 34
    TOK_NE  shift, and go to state 35
    TOK_GT  shift, and go to state 36
    TOK_LT  shift, and go to state 37
    '='     shift, and go to state 38
    '+'     shift, and go to state 39
    '-'     shift, and go to state 40
    '*'     shift, and go to state 41
    '/'     shift, and go to state 42
    '%'     shift, and go to state 43
    ')'     shift, and go to state 50
    '['     shift, and go to state 45

    binop  go to state 46


State 32

   28 binop: TOK_GE .

    $default  reduce using rule 28 (binop)


State 33

   30 binop: TOK_LE .

    $default  reduce using rule 30 (binop)


State 34

   25 binop: TOK_EQ .

    $default  reduce using rule 25 (binop)


State 35

   26 binop: TOK_NE .

    $default  reduce using rule 26 (binop)


State 36

   27 binop: TOK_GT .

    $default  reduce using rule 27 (binop)


State 37

   29 binop: TOK_LT .

    $default  reduce using rule 29 (binop)


State 38

   24 binop: '=' .

    $default  reduce using rule 24 (binop)


State 39

   31 binop: '+' .

    $default  reduce using rule 31 (binop)


State 40

   32 binop: '-' .

    $default  reduce using rule 32 (binop)


State 41

   33 binop: '*' .

    $default  reduce using rule 33 (binop)


State 42

   34 binop: '/' .

    $default  reduce using rule 34 (binop)


State 43

   35 binop: '%' .

    $default  reduce using rule 35 (binop)


State 44

   19 state: express ';' .

    $default  reduce using rule 19 (state)


State 45

   37 var: express '[' . express ']'

    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 12
    TOK_STRINGCON  shift, and go to state 13
    TOK_INTCON     shift, and go to state 14
    TOK_IDENT      shift, and go to state 30
    '('            shift, and go to state 17

    express   go to state 51
    var       go to state 23
    constant  go to state 26


State 46

   20 express: express binop . express

    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 12
    TOK_STRINGCON  shift, and go to state 13
    TOK_INTCON     shift, and go to state 14
    TOK_IDENT      shift, and go to state 30
    '('            shift, and go to state 17

    express   go to state 52
    var       go to state 23
    constant  go to state 26


State 47

    7 vardecl: type TOK_IDENT . ';'
    8        | type TOK_IDENT . '=' expr ';'

    '='  shift, and go to state 53
    ';'  shift, and go to state 54


State 48

   10 ifelse: TOK_IF '(' express . ')' block
   11       | TOK_IF '(' express . ')' block TOK_ELSE block
   20 express: express . binop express
   37 var: express . '[' express ']'

    TOK_GE  shift, and go to state 32
    TOK_LE  shift, and go to state 33
    TOK_EQ  shift, and go to state 34
    TOK_NE  shift, and go to state 35
    TOK_GT  shift, and go to state 36
    TOK_LT  shift, and go to state 37
    '='     shift, and go to state 38
    '+'     shift, and go to state 39
    '-'     shift, and go to state 40
    '*'     shift, and go to state 41
    '/'     shift, and go to state 42
    '%'     shift, and go to state 43
    ')'     shift, and go to state 55
    '['     shift, and go to state 45

    binop  go to state 46


State 49

    9 while: TOK_WHILE '(' express . ')' block
   20 express: express . binop express
   37 var: express . '[' express ']'

    TOK_GE  shift, and go to state 32
    TOK_LE  shift, and go to state 33
    TOK_EQ  shift, and go to state 34
    TOK_NE  shift, and go to state 35
    TOK_GT  shift, and go to state 36
    TOK_LT  shift, and go to state 37
    '='     shift, and go to state 38
    '+'     shift, and go to state 39
    '-'     shift, and go to state 40
    '*'     shift, and go to state 41
    '/'     shift, and go to state 42
    '%'     shift, and go to state 43
    ')'     shift, and go to state 56
    '['     shift, and go to state 45

    binop  go to state 46


State 50

   21 express: '(' express ')' .

    $default  reduce using rule 21 (express)


State 51

   20 express: express . binop express
   37 var: express . '[' express ']'
   37    | express '[' express . ']'

    TOK_GE  shift, and go to state 32
    TOK_LE  shift, and go to state 33
    TOK_EQ  shift, and go to state 34
    TOK_NE  shift, and go to state 35
    TOK_GT  shift, and go to state 36
    TOK_LT  shift, and go to state 37
    '='     shift, and go to state 38
    '+'     shift, and go to state 39
    '-'     shift, and go to state 40
    '*'     shift, and go to state 41
    '/'     shift, and go to state 42
    '%'     shift, and go to state 43
    '['     shift, and go to state 45
    ']'     shift, and go to state 57

    binop  go to state 46


State 52

   20 express: express . binop express
   20        | express binop express .
   37 var: express . '[' express ']'

    TOK_GE  shift, and go to state 32
    TOK_LE  shift, and go to state 33
    TOK_EQ  shift, and go to state 34
    TOK_NE  shift, and go to state 35
    TOK_GT  shift, and go to state 36
    TOK_LT  shift, and go to state 37
    '='     shift, and go to state 38
    '+'     shift, and go to state 39
    '-'     shift, and go to state 40
    '*'     shift, and go to state 41
    '/'     shift, and go to state 42
    '%'     shift, and go to state 43
    '['     shift, and go to state 45

    TOK_GE    [reduce using rule 20 (express)]
    TOK_LE    [reduce using rule 20 (express)]
    TOK_EQ    [reduce using rule 20 (express)]
    TOK_NE    [reduce using rule 20 (express)]
    TOK_GT    [reduce using rule 20 (express)]
    TOK_LT    [reduce using rule 20 (express)]
    '='       [reduce using rule 20 (express)]
    '+'       [reduce using rule 20 (express)]
    '-'       [reduce using rule 20 (express)]
    '*'       [reduce using rule 20 (express)]
    '/'       [reduce using rule 20 (express)]
    '%'       [reduce using rule 20 (express)]
    '['       [reduce using rule 20 (express)]
    $default  reduce using rule 20 (express)

    binop  go to state 46


State 53

    8 vardecl: type TOK_IDENT '=' . expr ';'

    NUMBER         shift, and go to state 58
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 12
    TOK_STRINGCON  shift, and go to state 13
    TOK_INTCON     shift, and go to state 14
    TOK_IDENT      shift, and go to state 59
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    constant  go to state 63
    expr      go to state 64


State 54

    7 vardecl: type TOK_IDENT ';' .

    $default  reduce using rule 7 (vardecl)


State 55

   10 ifelse: TOK_IF '(' express ')' . block
   11       | TOK_IF '(' express ')' . block TOK_ELSE block

    '{'  shift, and go to state 65

    block      go to state 66
    blockBody  go to state 67


State 56

    9 while: TOK_WHILE '(' express ')' . block

    '{'  shift, and go to state 65

    block      go to state 68
    blockBody  go to state 67


State 57

   37 var: express '[' express ']' .

    $default  reduce using rule 37 (var)


State 58

   59 expr: NUMBER .

    $default  reduce using rule 59 (expr)


State 59

   57 expr: TOK_IDENT .

    $default  reduce using rule 57 (expr)


State 60

   54 expr: '+' . expr

    NUMBER         shift, and go to state 58
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 12
    TOK_STRINGCON  shift, and go to state 13
    TOK_INTCON     shift, and go to state 14
    TOK_IDENT      shift, and go to state 59
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    constant  go to state 63
    expr      go to state 69


State 61

   55 expr: '-' . expr

    NUMBER         shift, and go to state 58
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 12
    TOK_STRINGCON  shift, and go to state 13
    TOK_INTCON     shift, and go to state 14
    TOK_IDENT      shift, and go to state 59
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    constant  go to state 63
    expr      go to state 70


State 62

   56 expr: '(' . expr ')'

    NUMBER         shift, and go to state 58
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 12
    TOK_STRINGCON  shift, and go to state 13
    TOK_INTCON     shift, and go to state 14
    TOK_IDENT      shift, and go to state 59
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    constant  go to state 63
    expr      go to state 71


State 63

   58 expr: constant .

    $default  reduce using rule 58 (expr)


State 64

    8 vardecl: type TOK_IDENT '=' expr . ';'
   48 expr: expr . '=' expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '^' expr

    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '^'  shift, and go to state 77
    ';'  shift, and go to state 78


State 65

   13 blockBody: '{' . statement
   15          | '{' .

    NUMBER         shift, and go to state 58
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 12
    TOK_STRINGCON  shift, and go to state 13
    TOK_INTCON     shift, and go to state 14
    TOK_IDENT      shift, and go to state 59
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    NUMBER         [reduce using rule 15 (blockBody)]
    TOK_NULLPTR    [reduce using rule 15 (blockBody)]
    TOK_CHARCON    [reduce using rule 15 (blockBody)]
    TOK_STRINGCON  [reduce using rule 15 (blockBody)]
    TOK_INTCON     [reduce using rule 15 (blockBody)]
    TOK_IDENT      [reduce using rule 15 (blockBody)]
    '+'            [reduce using rule 15 (blockBody)]
    '-'            [reduce using rule 15 (blockBody)]
    '('            [reduce using rule 15 (blockBody)]
    $default       reduce using rule 15 (blockBody)

    statement  go to state 79
    constant   go to state 63
    expr       go to state 80


State 66

   10 ifelse: TOK_IF '(' express ')' block .
   11       | TOK_IF '(' express ')' block . TOK_ELSE block

    TOK_ELSE  shift, and go to state 81

    $default  reduce using rule 10 (ifelse)


State 67

   12 block: blockBody . '}'
   14 blockBody: blockBody . statement

    NUMBER         shift, and go to state 58
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 12
    TOK_STRINGCON  shift, and go to state 13
    TOK_INTCON     shift, and go to state 14
    TOK_IDENT      shift, and go to state 59
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62
    '}'            shift, and go to state 82

    statement  go to state 83
    constant   go to state 63
    expr       go to state 80


State 68

    9 while: TOK_WHILE '(' express ')' block .

    $default  reduce using rule 9 (while)


State 69

   48 expr: expr . '=' expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '^' expr
   54     | '+' expr .

    $default  reduce using rule 54 (expr)


State 70

   48 expr: expr . '=' expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '^' expr
   55     | '-' expr .

    $default  reduce using rule 55 (expr)


State 71

   48 expr: expr . '=' expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '^' expr
   56     | '(' expr . ')'

    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '^'  shift, and go to state 77
    ')'  shift, and go to state 84


State 72

   48 expr: expr '=' . expr

    NUMBER         shift, and go to state 58
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 12
    TOK_STRINGCON  shift, and go to state 13
    TOK_INTCON     shift, and go to state 14
    TOK_IDENT      shift, and go to state 59
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    constant  go to state 63
    expr      go to state 85


State 73

   49 expr: expr '+' . expr

    NUMBER         shift, and go to state 58
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 12
    TOK_STRINGCON  shift, and go to state 13
    TOK_INTCON     shift, and go to state 14
    TOK_IDENT      shift, and go to state 59
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    constant  go to state 63
    expr      go to state 86


State 74

   50 expr: expr '-' . expr

    NUMBER         shift, and go to state 58
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 12
    TOK_STRINGCON  shift, and go to state 13
    TOK_INTCON     shift, and go to state 14
    TOK_IDENT      shift, and go to state 59
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    constant  go to state 63
    expr      go to state 87


State 75

   51 expr: expr '*' . expr

    NUMBER         shift, and go to state 58
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 12
    TOK_STRINGCON  shift, and go to state 13
    TOK_INTCON     shift, and go to state 14
    TOK_IDENT      shift, and go to state 59
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    constant  go to state 63
    expr      go to state 88


State 76

   52 expr: expr '/' . expr

    NUMBER         shift, and go to state 58
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 12
    TOK_STRINGCON  shift, and go to state 13
    TOK_INTCON     shift, and go to state 14
    TOK_IDENT      shift, and go to state 59
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    constant  go to state 63
    expr      go to state 89


State 77

   53 expr: expr '^' . expr

    NUMBER         shift, and go to state 58
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 12
    TOK_STRINGCON  shift, and go to state 13
    TOK_INTCON     shift, and go to state 14
    TOK_IDENT      shift, and go to state 59
    '+'            shift, and go to state 60
    '-'            shift, and go to state 61
    '('            shift, and go to state 62

    constant  go to state 63
    expr      go to state 90


State 78

    8 vardecl: type TOK_IDENT '=' expr ';' .

    $default  reduce using rule 8 (vardecl)


State 79

   13 blockBody: '{' statement .

    $default  reduce using rule 13 (blockBody)


State 80

   16 statement: expr . ';'
   48 expr: expr . '=' expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '^' expr

    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '^'  shift, and go to state 77
    ';'  shift, and go to state 91


State 81

   11 ifelse: TOK_IF '(' express ')' block TOK_ELSE . block

    '{'  shift, and go to state 65

    block      go to state 92
    blockBody  go to state 67


State 82

   12 block: blockBody '}' .

    $default  reduce using rule 12 (block)


State 83

   14 blockBody: blockBody statement .

    $default  reduce using rule 14 (blockBody)


State 84

   56 expr: '(' expr ')' .

    $default  reduce using rule 56 (expr)


State 85

   48 expr: expr . '=' expr
   48     | expr '=' expr .
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '^' expr

    '='  shift, and go to state 72
    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '^'  shift, and go to state 77

    $default  reduce using rule 48 (expr)


State 86

   48 expr: expr . '=' expr
   49     | expr . '+' expr
   49     | expr '+' expr .
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '^' expr

    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '^'  shift, and go to state 77

    $default  reduce using rule 49 (expr)


State 87

   48 expr: expr . '=' expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   50     | expr '-' expr .
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '^' expr

    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '^'  shift, and go to state 77

    $default  reduce using rule 50 (expr)


State 88

   48 expr: expr . '=' expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   51     | expr '*' expr .
   52     | expr . '/' expr
   53     | expr . '^' expr

    '^'  shift, and go to state 77

    $default  reduce using rule 51 (expr)


State 89

   48 expr: expr . '=' expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   52     | expr '/' expr .
   53     | expr . '^' expr

    '^'  shift, and go to state 77

    $default  reduce using rule 52 (expr)


State 90

   48 expr: expr . '=' expr
   49     | expr . '+' expr
   50     | expr . '-' expr
   51     | expr . '*' expr
   52     | expr . '/' expr
   53     | expr . '^' expr
   53     | expr '^' expr .

    '^'  shift, and go to state 77

    $default  reduce using rule 53 (expr)


State 91

   16 statement: expr ';' .

    $default  reduce using rule 16 (statement)


State 92

   11 ifelse: TOK_IF '(' express ')' block TOK_ELSE block .

    $default  reduce using rule 11 (ifelse)
