Nonterminals useless in grammar

   function
   identif
   param
   unop


Terminals unused in grammar

   ROOT
   IDENT
   TYPE_ID
   FUNCTION
   TOK_PARAM
   TOK_PROTOTYPE
   BLOCK
   TOK_INDEX
   CALL
   TOK_NOT
   TOK_PTR
   TOK_ARROW
   TOK_RETURN


Rules useless in grammar

   72 function: identif '(' ')' ';'
   73         | identif param ')' ';'
   74         | identif '(' ')' block
   75         | identif param ')' block

   76 identif: type TOK_IDENT

   77 param: '(' identif
   78      | param ',' identif

   79 unop: '+' express
   80     | '-' express


State 68 conflicts: 13 shift/reduce
State 79 conflicts: 9 shift/reduce


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program state
    3        | program vardecl
    4        | program error ';'
    5        | program ';'
    6        | %empty

    7 vardecl: type TOK_IDENT ';'
    8        | type TOK_IDENT '=' express ';'

    9 callParam: TOK_IDENT '(' express
   10          | callParam ',' express

   11 call: TOK_IDENT '(' ')'
   12     | callParam ')'

   13 while: TOK_WHILE '(' express ')' block

   14 ifelse: TOK_IF '(' express ')' block
   15       | TOK_IF '(' express ')' block TOK_ELSE block

   16 alloc: TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT '(' ')'
   17      | TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT '(' express ')'
   18      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' express ')'
   19      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' ')'
   20      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' ')'
   21      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express ')'

   22 block: blockBody '}'

   23 blockBody: '{' statement
   24          | blockBody statement
   25          | '{'

   26 statement: expr ';'

   27 state: while
   28      | ifelse
   29      | express ';'

   30 express: express binop express
   31        | alloc
   32        | call
   33        | '(' express ')'
   34        | var
   35        | constant

   36 binop: '='
   37      | TOK_EQ
   38      | TOK_NE
   39      | TOK_GT
   40      | TOK_GE
   41      | TOK_LT
   42      | TOK_LE
   43      | '+'
   44      | '-'
   45      | '*'
   46      | '/'
   47      | '%'

   48 var: TOK_IDENT
   49    | express '[' express ']'

   50 type: type_id
   51     | TOK_ARRAY TOK_LT type_id TOK_GT

   52 type_id: TOK_INT
   53        | TOK_STRING
   54        | TOK_CHAR
   55        | TOK_VOID

   56 constant: TOK_INTCON
   57         | TOK_STRINGCON
   58         | TOK_CHARCON
   59         | TOK_NULLPTR

   60 expr: expr '=' expr
   61     | expr '+' expr
   62     | expr '-' expr
   63     | expr '*' expr
   64     | expr '/' expr
   65     | expr '^' expr
   66     | '+' expr
   67     | '-' expr
   68     | '(' expr ')'
   69     | TOK_IDENT
   70     | constant
   71     | NUMBER


Terminals, with rules where they appear

$end (0) 0
'%' (37) 47
'(' (40) 9 11 13 14 15 16 17 18 19 20 21 33 68
')' (41) 11 12 13 14 15 16 17 18 19 20 21 33 68
'*' (42) 45 63
'+' (43) 43 61 66
',' (44) 10
'-' (45) 44 62 67
'/' (47) 46 64
';' (59) 4 5 7 8 26 29
'=' (61) 8 36 60
'[' (91) 49
']' (93) 49
'^' (94) 65
'{' (123) 23 25
'}' (125) 22
error (256) 4
ROOT (258)
IDENT (259)
NUMBER (260) 71
TYPE_ID (261)
FUNCTION (262)
TOK_PARAM (263)
TOK_PROTOTYPE (264)
BLOCK (265)
TOK_NULLPTR (266) 59
TOK_INDEX (267)
CALL (268)
TOK_GE (269) 40
TOK_LE (270) 42
TOK_EQ (271) 37
TOK_NE (272) 38
TOK_GT (273) 16 17 18 19 20 21 39 51
TOK_LT (274) 16 17 18 19 20 21 41 51
TOK_IF (275) 14 15
TOK_ELSE (276) 15
TOK_STRUCT (277) 18 19
TOK_ARRAY (278) 20 21 51
TOK_NOT (279)
TOK_ALLOC (280) 16 17 18 19 20 21
TOK_PTR (281)
TOK_ARROW (282)
TOK_WHILE (283) 13
TOK_VOID (284) 55
TOK_RETURN (285)
TOK_INT (286) 52
TOK_CHAR (287) 54
TOK_STRING (288) 53
TOK_CHARCON (289) 58
TOK_STRINGCON (290) 16 17 57
TOK_INTCON (291) 56
TOK_IDENT (292) 7 8 9 11 18 19 48 69
POS (293)
NEG (294)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
start (56)
    on left: 1, on right: 0
program (57)
    on left: 2 3 4 5 6, on right: 1 2 3 4 5
vardecl (58)
    on left: 7 8, on right: 3
callParam (59)
    on left: 9 10, on right: 10 12
call (60)
    on left: 11 12, on right: 32
while (61)
    on left: 13, on right: 27
ifelse (62)
    on left: 14 15, on right: 28
alloc (63)
    on left: 16 17 18 19 20 21, on right: 31
block (64)
    on left: 22, on right: 13 14 15
blockBody (65)
    on left: 23 24 25, on right: 22 24
statement (66)
    on left: 26, on right: 23 24
state (67)
    on left: 27 28 29, on right: 2
express (68)
    on left: 30 31 32 33 34 35, on right: 8 9 10 13 14 15 17 18 21
    29 30 33 49
binop (69)
    on left: 36 37 38 39 40 41 42 43 44 45 46 47, on right: 30
var (70)
    on left: 48 49, on right: 34
type (71)
    on left: 50 51, on right: 7 8 20 21
type_id (72)
    on left: 52 53 54 55, on right: 50 51
constant (73)
    on left: 56 57 58 59, on right: 35 70
expr (74)
    on left: 60 61 62 63 64 65 66 67 68 69 70 71, on right: 26 60 61
    62 63 64 65 66 67 68


State 0

    0 $accept: . start $end

    $default  reduce using rule 6 (program)

    start    go to state 1
    program  go to state 2


State 1

    0 $accept: start . $end

    $end  shift, and go to state 3


State 2

    1 start: program .
    2 program: program . state
    3        | program . vardecl
    4        | program . error ';'
    5        | program . ';'

    error          shift, and go to state 4
    TOK_NULLPTR    shift, and go to state 5
    TOK_IF         shift, and go to state 6
    TOK_ARRAY      shift, and go to state 7
    TOK_ALLOC      shift, and go to state 8
    TOK_WHILE      shift, and go to state 9
    TOK_VOID       shift, and go to state 10
    TOK_INT        shift, and go to state 11
    TOK_CHAR       shift, and go to state 12
    TOK_STRING     shift, and go to state 13
    TOK_CHARCON    shift, and go to state 14
    TOK_STRINGCON  shift, and go to state 15
    TOK_INTCON     shift, and go to state 16
    TOK_IDENT      shift, and go to state 17
    ';'            shift, and go to state 18
    '('            shift, and go to state 19

    $end  reduce using rule 1 (start)

    vardecl    go to state 20
    callParam  go to state 21
    call       go to state 22
    while      go to state 23
    ifelse     go to state 24
    alloc      go to state 25
    state      go to state 26
    express    go to state 27
    var        go to state 28
    type       go to state 29
    type_id    go to state 30
    constant   go to state 31


State 3

    0 $accept: start $end .

    $default  accept


State 4

    4 program: program error . ';'

    ';'  shift, and go to state 32


State 5

   59 constant: TOK_NULLPTR .

    $default  reduce using rule 59 (constant)


State 6

   14 ifelse: TOK_IF . '(' express ')' block
   15       | TOK_IF . '(' express ')' block TOK_ELSE block

    '('  shift, and go to state 33


State 7

   51 type: TOK_ARRAY . TOK_LT type_id TOK_GT

    TOK_LT  shift, and go to state 34


State 8

   16 alloc: TOK_ALLOC . TOK_LT TOK_STRINGCON TOK_GT '(' ')'
   17      | TOK_ALLOC . TOK_LT TOK_STRINGCON TOK_GT '(' express ')'
   18      | TOK_ALLOC . TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' express ')'
   19      | TOK_ALLOC . TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' ')'
   20      | TOK_ALLOC . TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' ')'
   21      | TOK_ALLOC . TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express ')'

    TOK_LT  shift, and go to state 35


State 9

   13 while: TOK_WHILE . '(' express ')' block

    '('  shift, and go to state 36


State 10

   55 type_id: TOK_VOID .

    $default  reduce using rule 55 (type_id)


State 11

   52 type_id: TOK_INT .

    $default  reduce using rule 52 (type_id)


State 12

   54 type_id: TOK_CHAR .

    $default  reduce using rule 54 (type_id)


State 13

   53 type_id: TOK_STRING .

    $default  reduce using rule 53 (type_id)


State 14

   58 constant: TOK_CHARCON .

    $default  reduce using rule 58 (constant)


State 15

   57 constant: TOK_STRINGCON .

    $default  reduce using rule 57 (constant)


State 16

   56 constant: TOK_INTCON .

    $default  reduce using rule 56 (constant)


State 17

    9 callParam: TOK_IDENT . '(' express
   11 call: TOK_IDENT . '(' ')'
   48 var: TOK_IDENT .

    '('  shift, and go to state 37

    $default  reduce using rule 48 (var)


State 18

    5 program: program ';' .

    $default  reduce using rule 5 (program)


State 19

   33 express: '(' . express ')'

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 14
    TOK_STRINGCON  shift, and go to state 15
    TOK_INTCON     shift, and go to state 16
    TOK_IDENT      shift, and go to state 17
    '('            shift, and go to state 19

    callParam  go to state 21
    call       go to state 22
    alloc      go to state 25
    express    go to state 38
    var        go to state 28
    constant   go to state 31


State 20

    3 program: program vardecl .

    $default  reduce using rule 3 (program)


State 21

   10 callParam: callParam . ',' express
   12 call: callParam . ')'

    ')'  shift, and go to state 39
    ','  shift, and go to state 40


State 22

   32 express: call .

    $default  reduce using rule 32 (express)


State 23

   27 state: while .

    $default  reduce using rule 27 (state)


State 24

   28 state: ifelse .

    $default  reduce using rule 28 (state)


State 25

   31 express: alloc .

    $default  reduce using rule 31 (express)


State 26

    2 program: program state .

    $default  reduce using rule 2 (program)


State 27

   29 state: express . ';'
   30 express: express . binop express
   49 var: express . '[' express ']'

    TOK_GE  shift, and go to state 41
    TOK_LE  shift, and go to state 42
    TOK_EQ  shift, and go to state 43
    TOK_NE  shift, and go to state 44
    TOK_GT  shift, and go to state 45
    TOK_LT  shift, and go to state 46
    '='     shift, and go to state 47
    '+'     shift, and go to state 48
    '-'     shift, and go to state 49
    '*'     shift, and go to state 50
    '/'     shift, and go to state 51
    '%'     shift, and go to state 52
    ';'     shift, and go to state 53
    '['     shift, and go to state 54

    binop  go to state 55


State 28

   34 express: var .

    $default  reduce using rule 34 (express)


State 29

    7 vardecl: type . TOK_IDENT ';'
    8        | type . TOK_IDENT '=' express ';'

    TOK_IDENT  shift, and go to state 56


State 30

   50 type: type_id .

    $default  reduce using rule 50 (type)


State 31

   35 express: constant .

    $default  reduce using rule 35 (express)


State 32

    4 program: program error ';' .

    $default  reduce using rule 4 (program)


State 33

   14 ifelse: TOK_IF '(' . express ')' block
   15       | TOK_IF '(' . express ')' block TOK_ELSE block

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 14
    TOK_STRINGCON  shift, and go to state 15
    TOK_INTCON     shift, and go to state 16
    TOK_IDENT      shift, and go to state 17
    '('            shift, and go to state 19

    callParam  go to state 21
    call       go to state 22
    alloc      go to state 25
    express    go to state 57
    var        go to state 28
    constant   go to state 31


State 34

   51 type: TOK_ARRAY TOK_LT . type_id TOK_GT

    TOK_VOID    shift, and go to state 10
    TOK_INT     shift, and go to state 11
    TOK_CHAR    shift, and go to state 12
    TOK_STRING  shift, and go to state 13

    type_id  go to state 58


State 35

   16 alloc: TOK_ALLOC TOK_LT . TOK_STRINGCON TOK_GT '(' ')'
   17      | TOK_ALLOC TOK_LT . TOK_STRINGCON TOK_GT '(' express ')'
   18      | TOK_ALLOC TOK_LT . TOK_STRUCT TOK_IDENT TOK_GT '(' express ')'
   19      | TOK_ALLOC TOK_LT . TOK_STRUCT TOK_IDENT TOK_GT '(' ')'
   20      | TOK_ALLOC TOK_LT . TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' ')'
   21      | TOK_ALLOC TOK_LT . TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express ')'

    TOK_STRUCT     shift, and go to state 59
    TOK_ARRAY      shift, and go to state 60
    TOK_STRINGCON  shift, and go to state 61


State 36

   13 while: TOK_WHILE '(' . express ')' block

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 14
    TOK_STRINGCON  shift, and go to state 15
    TOK_INTCON     shift, and go to state 16
    TOK_IDENT      shift, and go to state 17
    '('            shift, and go to state 19

    callParam  go to state 21
    call       go to state 22
    alloc      go to state 25
    express    go to state 62
    var        go to state 28
    constant   go to state 31


State 37

    9 callParam: TOK_IDENT '(' . express
   11 call: TOK_IDENT '(' . ')'

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 14
    TOK_STRINGCON  shift, and go to state 15
    TOK_INTCON     shift, and go to state 16
    TOK_IDENT      shift, and go to state 17
    '('            shift, and go to state 19
    ')'            shift, and go to state 63

    callParam  go to state 21
    call       go to state 22
    alloc      go to state 25
    express    go to state 64
    var        go to state 28
    constant   go to state 31


State 38

   30 express: express . binop express
   33        | '(' express . ')'
   49 var: express . '[' express ']'

    TOK_GE  shift, and go to state 41
    TOK_LE  shift, and go to state 42
    TOK_EQ  shift, and go to state 43
    TOK_NE  shift, and go to state 44
    TOK_GT  shift, and go to state 45
    TOK_LT  shift, and go to state 46
    '='     shift, and go to state 47
    '+'     shift, and go to state 48
    '-'     shift, and go to state 49
    '*'     shift, and go to state 50
    '/'     shift, and go to state 51
    '%'     shift, and go to state 52
    ')'     shift, and go to state 65
    '['     shift, and go to state 54

    binop  go to state 55


State 39

   12 call: callParam ')' .

    $default  reduce using rule 12 (call)


State 40

   10 callParam: callParam ',' . express

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 14
    TOK_STRINGCON  shift, and go to state 15
    TOK_INTCON     shift, and go to state 16
    TOK_IDENT      shift, and go to state 17
    '('            shift, and go to state 19

    callParam  go to state 21
    call       go to state 22
    alloc      go to state 25
    express    go to state 66
    var        go to state 28
    constant   go to state 31


State 41

   40 binop: TOK_GE .

    $default  reduce using rule 40 (binop)


State 42

   42 binop: TOK_LE .

    $default  reduce using rule 42 (binop)


State 43

   37 binop: TOK_EQ .

    $default  reduce using rule 37 (binop)


State 44

   38 binop: TOK_NE .

    $default  reduce using rule 38 (binop)


State 45

   39 binop: TOK_GT .

    $default  reduce using rule 39 (binop)


State 46

   41 binop: TOK_LT .

    $default  reduce using rule 41 (binop)


State 47

   36 binop: '=' .

    $default  reduce using rule 36 (binop)


State 48

   43 binop: '+' .

    $default  reduce using rule 43 (binop)


State 49

   44 binop: '-' .

    $default  reduce using rule 44 (binop)


State 50

   45 binop: '*' .

    $default  reduce using rule 45 (binop)


State 51

   46 binop: '/' .

    $default  reduce using rule 46 (binop)


State 52

   47 binop: '%' .

    $default  reduce using rule 47 (binop)


State 53

   29 state: express ';' .

    $default  reduce using rule 29 (state)


State 54

   49 var: express '[' . express ']'

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 14
    TOK_STRINGCON  shift, and go to state 15
    TOK_INTCON     shift, and go to state 16
    TOK_IDENT      shift, and go to state 17
    '('            shift, and go to state 19

    callParam  go to state 21
    call       go to state 22
    alloc      go to state 25
    express    go to state 67
    var        go to state 28
    constant   go to state 31


State 55

   30 express: express binop . express

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 14
    TOK_STRINGCON  shift, and go to state 15
    TOK_INTCON     shift, and go to state 16
    TOK_IDENT      shift, and go to state 17
    '('            shift, and go to state 19

    callParam  go to state 21
    call       go to state 22
    alloc      go to state 25
    express    go to state 68
    var        go to state 28
    constant   go to state 31


State 56

    7 vardecl: type TOK_IDENT . ';'
    8        | type TOK_IDENT . '=' express ';'

    '='  shift, and go to state 69
    ';'  shift, and go to state 70


State 57

   14 ifelse: TOK_IF '(' express . ')' block
   15       | TOK_IF '(' express . ')' block TOK_ELSE block
   30 express: express . binop express
   49 var: express . '[' express ']'

    TOK_GE  shift, and go to state 41
    TOK_LE  shift, and go to state 42
    TOK_EQ  shift, and go to state 43
    TOK_NE  shift, and go to state 44
    TOK_GT  shift, and go to state 45
    TOK_LT  shift, and go to state 46
    '='     shift, and go to state 47
    '+'     shift, and go to state 48
    '-'     shift, and go to state 49
    '*'     shift, and go to state 50
    '/'     shift, and go to state 51
    '%'     shift, and go to state 52
    ')'     shift, and go to state 71
    '['     shift, and go to state 54

    binop  go to state 55


State 58

   51 type: TOK_ARRAY TOK_LT type_id . TOK_GT

    TOK_GT  shift, and go to state 72


State 59

   18 alloc: TOK_ALLOC TOK_LT TOK_STRUCT . TOK_IDENT TOK_GT '(' express ')'
   19      | TOK_ALLOC TOK_LT TOK_STRUCT . TOK_IDENT TOK_GT '(' ')'

    TOK_IDENT  shift, and go to state 73


State 60

   20 alloc: TOK_ALLOC TOK_LT TOK_ARRAY . TOK_LT type TOK_GT TOK_GT '(' ')'
   21      | TOK_ALLOC TOK_LT TOK_ARRAY . TOK_LT type TOK_GT TOK_GT '(' express ')'

    TOK_LT  shift, and go to state 74


State 61

   16 alloc: TOK_ALLOC TOK_LT TOK_STRINGCON . TOK_GT '(' ')'
   17      | TOK_ALLOC TOK_LT TOK_STRINGCON . TOK_GT '(' express ')'

    TOK_GT  shift, and go to state 75


State 62

   13 while: TOK_WHILE '(' express . ')' block
   30 express: express . binop express
   49 var: express . '[' express ']'

    TOK_GE  shift, and go to state 41
    TOK_LE  shift, and go to state 42
    TOK_EQ  shift, and go to state 43
    TOK_NE  shift, and go to state 44
    TOK_GT  shift, and go to state 45
    TOK_LT  shift, and go to state 46
    '='     shift, and go to state 47
    '+'     shift, and go to state 48
    '-'     shift, and go to state 49
    '*'     shift, and go to state 50
    '/'     shift, and go to state 51
    '%'     shift, and go to state 52
    ')'     shift, and go to state 76
    '['     shift, and go to state 54

    binop  go to state 55


State 63

   11 call: TOK_IDENT '(' ')' .

    $default  reduce using rule 11 (call)


State 64

    9 callParam: TOK_IDENT '(' express .
   30 express: express . binop express
   49 var: express . '[' express ']'

    TOK_GE  shift, and go to state 41
    TOK_LE  shift, and go to state 42
    TOK_EQ  shift, and go to state 43
    TOK_NE  shift, and go to state 44
    TOK_GT  shift, and go to state 45
    TOK_LT  shift, and go to state 46
    '='     shift, and go to state 47
    '+'     shift, and go to state 48
    '-'     shift, and go to state 49
    '*'     shift, and go to state 50
    '/'     shift, and go to state 51
    '%'     shift, and go to state 52
    '['     shift, and go to state 54

    $default  reduce using rule 9 (callParam)

    binop  go to state 55


State 65

   33 express: '(' express ')' .

    $default  reduce using rule 33 (express)


State 66

   10 callParam: callParam ',' express .
   30 express: express . binop express
   49 var: express . '[' express ']'

    TOK_GE  shift, and go to state 41
    TOK_LE  shift, and go to state 42
    TOK_EQ  shift, and go to state 43
    TOK_NE  shift, and go to state 44
    TOK_GT  shift, and go to state 45
    TOK_LT  shift, and go to state 46
    '='     shift, and go to state 47
    '+'     shift, and go to state 48
    '-'     shift, and go to state 49
    '*'     shift, and go to state 50
    '/'     shift, and go to state 51
    '%'     shift, and go to state 52
    '['     shift, and go to state 54

    $default  reduce using rule 10 (callParam)

    binop  go to state 55


State 67

   30 express: express . binop express
   49 var: express . '[' express ']'
   49    | express '[' express . ']'

    TOK_GE  shift, and go to state 41
    TOK_LE  shift, and go to state 42
    TOK_EQ  shift, and go to state 43
    TOK_NE  shift, and go to state 44
    TOK_GT  shift, and go to state 45
    TOK_LT  shift, and go to state 46
    '='     shift, and go to state 47
    '+'     shift, and go to state 48
    '-'     shift, and go to state 49
    '*'     shift, and go to state 50
    '/'     shift, and go to state 51
    '%'     shift, and go to state 52
    '['     shift, and go to state 54
    ']'     shift, and go to state 77

    binop  go to state 55


State 68

   30 express: express . binop express
   30        | express binop express .
   49 var: express . '[' express ']'

    TOK_GE  shift, and go to state 41
    TOK_LE  shift, and go to state 42
    TOK_EQ  shift, and go to state 43
    TOK_NE  shift, and go to state 44
    TOK_GT  shift, and go to state 45
    TOK_LT  shift, and go to state 46
    '='     shift, and go to state 47
    '+'     shift, and go to state 48
    '-'     shift, and go to state 49
    '*'     shift, and go to state 50
    '/'     shift, and go to state 51
    '%'     shift, and go to state 52
    '['     shift, and go to state 54

    TOK_GE    [reduce using rule 30 (express)]
    TOK_LE    [reduce using rule 30 (express)]
    TOK_EQ    [reduce using rule 30 (express)]
    TOK_NE    [reduce using rule 30 (express)]
    TOK_GT    [reduce using rule 30 (express)]
    TOK_LT    [reduce using rule 30 (express)]
    '='       [reduce using rule 30 (express)]
    '+'       [reduce using rule 30 (express)]
    '-'       [reduce using rule 30 (express)]
    '*'       [reduce using rule 30 (express)]
    '/'       [reduce using rule 30 (express)]
    '%'       [reduce using rule 30 (express)]
    '['       [reduce using rule 30 (express)]
    $default  reduce using rule 30 (express)

    binop  go to state 55


State 69

    8 vardecl: type TOK_IDENT '=' . express ';'

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 14
    TOK_STRINGCON  shift, and go to state 15
    TOK_INTCON     shift, and go to state 16
    TOK_IDENT      shift, and go to state 17
    '('            shift, and go to state 19

    callParam  go to state 21
    call       go to state 22
    alloc      go to state 25
    express    go to state 78
    var        go to state 28
    constant   go to state 31


State 70

    7 vardecl: type TOK_IDENT ';' .

    $default  reduce using rule 7 (vardecl)


State 71

   14 ifelse: TOK_IF '(' express ')' . block
   15       | TOK_IF '(' express ')' . block TOK_ELSE block

    '{'  shift, and go to state 79

    block      go to state 80
    blockBody  go to state 81


State 72

   51 type: TOK_ARRAY TOK_LT type_id TOK_GT .

    $default  reduce using rule 51 (type)


State 73

   18 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT . TOK_GT '(' express ')'
   19      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT . TOK_GT '(' ')'

    TOK_GT  shift, and go to state 82


State 74

   20 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT . type TOK_GT TOK_GT '(' ')'
   21      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT . type TOK_GT TOK_GT '(' express ')'

    TOK_ARRAY   shift, and go to state 7
    TOK_VOID    shift, and go to state 10
    TOK_INT     shift, and go to state 11
    TOK_CHAR    shift, and go to state 12
    TOK_STRING  shift, and go to state 13

    type     go to state 83
    type_id  go to state 30


State 75

   16 alloc: TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT . '(' ')'
   17      | TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT . '(' express ')'

    '('  shift, and go to state 84


State 76

   13 while: TOK_WHILE '(' express ')' . block

    '{'  shift, and go to state 79

    block      go to state 85
    blockBody  go to state 81


State 77

   49 var: express '[' express ']' .

    $default  reduce using rule 49 (var)


State 78

    8 vardecl: type TOK_IDENT '=' express . ';'
   30 express: express . binop express
   49 var: express . '[' express ']'

    TOK_GE  shift, and go to state 41
    TOK_LE  shift, and go to state 42
    TOK_EQ  shift, and go to state 43
    TOK_NE  shift, and go to state 44
    TOK_GT  shift, and go to state 45
    TOK_LT  shift, and go to state 46
    '='     shift, and go to state 47
    '+'     shift, and go to state 48
    '-'     shift, and go to state 49
    '*'     shift, and go to state 50
    '/'     shift, and go to state 51
    '%'     shift, and go to state 52
    ';'     shift, and go to state 86
    '['     shift, and go to state 54

    binop  go to state 55


State 79

   23 blockBody: '{' . statement
   25          | '{' .

    NUMBER         shift, and go to state 87
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 14
    TOK_STRINGCON  shift, and go to state 15
    TOK_INTCON     shift, and go to state 16
    TOK_IDENT      shift, and go to state 88
    '+'            shift, and go to state 89
    '-'            shift, and go to state 90
    '('            shift, and go to state 91

    NUMBER         [reduce using rule 25 (blockBody)]
    TOK_NULLPTR    [reduce using rule 25 (blockBody)]
    TOK_CHARCON    [reduce using rule 25 (blockBody)]
    TOK_STRINGCON  [reduce using rule 25 (blockBody)]
    TOK_INTCON     [reduce using rule 25 (blockBody)]
    TOK_IDENT      [reduce using rule 25 (blockBody)]
    '+'            [reduce using rule 25 (blockBody)]
    '-'            [reduce using rule 25 (blockBody)]
    '('            [reduce using rule 25 (blockBody)]
    $default       reduce using rule 25 (blockBody)

    statement  go to state 92
    constant   go to state 93
    expr       go to state 94


State 80

   14 ifelse: TOK_IF '(' express ')' block .
   15       | TOK_IF '(' express ')' block . TOK_ELSE block

    TOK_ELSE  shift, and go to state 95

    $default  reduce using rule 14 (ifelse)


State 81

   22 block: blockBody . '}'
   24 blockBody: blockBody . statement

    NUMBER         shift, and go to state 87
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 14
    TOK_STRINGCON  shift, and go to state 15
    TOK_INTCON     shift, and go to state 16
    TOK_IDENT      shift, and go to state 88
    '+'            shift, and go to state 89
    '-'            shift, and go to state 90
    '('            shift, and go to state 91
    '}'            shift, and go to state 96

    statement  go to state 97
    constant   go to state 93
    expr       go to state 94


State 82

   18 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT . '(' express ')'
   19      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT . '(' ')'

    '('  shift, and go to state 98


State 83

   20 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type . TOK_GT TOK_GT '(' ')'
   21      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type . TOK_GT TOK_GT '(' express ')'

    TOK_GT  shift, and go to state 99


State 84

   16 alloc: TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT '(' . ')'
   17      | TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT '(' . express ')'

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 14
    TOK_STRINGCON  shift, and go to state 15
    TOK_INTCON     shift, and go to state 16
    TOK_IDENT      shift, and go to state 17
    '('            shift, and go to state 19
    ')'            shift, and go to state 100

    callParam  go to state 21
    call       go to state 22
    alloc      go to state 25
    express    go to state 101
    var        go to state 28
    constant   go to state 31


State 85

   13 while: TOK_WHILE '(' express ')' block .

    $default  reduce using rule 13 (while)


State 86

    8 vardecl: type TOK_IDENT '=' express ';' .

    $default  reduce using rule 8 (vardecl)


State 87

   71 expr: NUMBER .

    $default  reduce using rule 71 (expr)


State 88

   69 expr: TOK_IDENT .

    $default  reduce using rule 69 (expr)


State 89

   66 expr: '+' . expr

    NUMBER         shift, and go to state 87
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 14
    TOK_STRINGCON  shift, and go to state 15
    TOK_INTCON     shift, and go to state 16
    TOK_IDENT      shift, and go to state 88
    '+'            shift, and go to state 89
    '-'            shift, and go to state 90
    '('            shift, and go to state 91

    constant  go to state 93
    expr      go to state 102


State 90

   67 expr: '-' . expr

    NUMBER         shift, and go to state 87
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 14
    TOK_STRINGCON  shift, and go to state 15
    TOK_INTCON     shift, and go to state 16
    TOK_IDENT      shift, and go to state 88
    '+'            shift, and go to state 89
    '-'            shift, and go to state 90
    '('            shift, and go to state 91

    constant  go to state 93
    expr      go to state 103


State 91

   68 expr: '(' . expr ')'

    NUMBER         shift, and go to state 87
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 14
    TOK_STRINGCON  shift, and go to state 15
    TOK_INTCON     shift, and go to state 16
    TOK_IDENT      shift, and go to state 88
    '+'            shift, and go to state 89
    '-'            shift, and go to state 90
    '('            shift, and go to state 91

    constant  go to state 93
    expr      go to state 104


State 92

   23 blockBody: '{' statement .

    $default  reduce using rule 23 (blockBody)


State 93

   70 expr: constant .

    $default  reduce using rule 70 (expr)


State 94

   26 statement: expr . ';'
   60 expr: expr . '=' expr
   61     | expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '^' expr

    '='  shift, and go to state 105
    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '^'  shift, and go to state 110
    ';'  shift, and go to state 111


State 95

   15 ifelse: TOK_IF '(' express ')' block TOK_ELSE . block

    '{'  shift, and go to state 79

    block      go to state 112
    blockBody  go to state 81


State 96

   22 block: blockBody '}' .

    $default  reduce using rule 22 (block)


State 97

   24 blockBody: blockBody statement .

    $default  reduce using rule 24 (blockBody)


State 98

   18 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' . express ')'
   19      | TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' . ')'

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 14
    TOK_STRINGCON  shift, and go to state 15
    TOK_INTCON     shift, and go to state 16
    TOK_IDENT      shift, and go to state 17
    '('            shift, and go to state 19
    ')'            shift, and go to state 113

    callParam  go to state 21
    call       go to state 22
    alloc      go to state 25
    express    go to state 114
    var        go to state 28
    constant   go to state 31


State 99

   20 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT . TOK_GT '(' ')'
   21      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT . TOK_GT '(' express ')'

    TOK_GT  shift, and go to state 115


State 100

   16 alloc: TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT '(' ')' .

    $default  reduce using rule 16 (alloc)


State 101

   17 alloc: TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT '(' express . ')'
   30 express: express . binop express
   49 var: express . '[' express ']'

    TOK_GE  shift, and go to state 41
    TOK_LE  shift, and go to state 42
    TOK_EQ  shift, and go to state 43
    TOK_NE  shift, and go to state 44
    TOK_GT  shift, and go to state 45
    TOK_LT  shift, and go to state 46
    '='     shift, and go to state 47
    '+'     shift, and go to state 48
    '-'     shift, and go to state 49
    '*'     shift, and go to state 50
    '/'     shift, and go to state 51
    '%'     shift, and go to state 52
    ')'     shift, and go to state 116
    '['     shift, and go to state 54

    binop  go to state 55


State 102

   60 expr: expr . '=' expr
   61     | expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '^' expr
   66     | '+' expr .

    $default  reduce using rule 66 (expr)


State 103

   60 expr: expr . '=' expr
   61     | expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '^' expr
   67     | '-' expr .

    $default  reduce using rule 67 (expr)


State 104

   60 expr: expr . '=' expr
   61     | expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '^' expr
   68     | '(' expr . ')'

    '='  shift, and go to state 105
    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '^'  shift, and go to state 110
    ')'  shift, and go to state 117


State 105

   60 expr: expr '=' . expr

    NUMBER         shift, and go to state 87
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 14
    TOK_STRINGCON  shift, and go to state 15
    TOK_INTCON     shift, and go to state 16
    TOK_IDENT      shift, and go to state 88
    '+'            shift, and go to state 89
    '-'            shift, and go to state 90
    '('            shift, and go to state 91

    constant  go to state 93
    expr      go to state 118


State 106

   61 expr: expr '+' . expr

    NUMBER         shift, and go to state 87
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 14
    TOK_STRINGCON  shift, and go to state 15
    TOK_INTCON     shift, and go to state 16
    TOK_IDENT      shift, and go to state 88
    '+'            shift, and go to state 89
    '-'            shift, and go to state 90
    '('            shift, and go to state 91

    constant  go to state 93
    expr      go to state 119


State 107

   62 expr: expr '-' . expr

    NUMBER         shift, and go to state 87
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 14
    TOK_STRINGCON  shift, and go to state 15
    TOK_INTCON     shift, and go to state 16
    TOK_IDENT      shift, and go to state 88
    '+'            shift, and go to state 89
    '-'            shift, and go to state 90
    '('            shift, and go to state 91

    constant  go to state 93
    expr      go to state 120


State 108

   63 expr: expr '*' . expr

    NUMBER         shift, and go to state 87
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 14
    TOK_STRINGCON  shift, and go to state 15
    TOK_INTCON     shift, and go to state 16
    TOK_IDENT      shift, and go to state 88
    '+'            shift, and go to state 89
    '-'            shift, and go to state 90
    '('            shift, and go to state 91

    constant  go to state 93
    expr      go to state 121


State 109

   64 expr: expr '/' . expr

    NUMBER         shift, and go to state 87
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 14
    TOK_STRINGCON  shift, and go to state 15
    TOK_INTCON     shift, and go to state 16
    TOK_IDENT      shift, and go to state 88
    '+'            shift, and go to state 89
    '-'            shift, and go to state 90
    '('            shift, and go to state 91

    constant  go to state 93
    expr      go to state 122


State 110

   65 expr: expr '^' . expr

    NUMBER         shift, and go to state 87
    TOK_NULLPTR    shift, and go to state 5
    TOK_CHARCON    shift, and go to state 14
    TOK_STRINGCON  shift, and go to state 15
    TOK_INTCON     shift, and go to state 16
    TOK_IDENT      shift, and go to state 88
    '+'            shift, and go to state 89
    '-'            shift, and go to state 90
    '('            shift, and go to state 91

    constant  go to state 93
    expr      go to state 123


State 111

   26 statement: expr ';' .

    $default  reduce using rule 26 (statement)


State 112

   15 ifelse: TOK_IF '(' express ')' block TOK_ELSE block .

    $default  reduce using rule 15 (ifelse)


State 113

   19 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' ')' .

    $default  reduce using rule 19 (alloc)


State 114

   18 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' express . ')'
   30 express: express . binop express
   49 var: express . '[' express ']'

    TOK_GE  shift, and go to state 41
    TOK_LE  shift, and go to state 42
    TOK_EQ  shift, and go to state 43
    TOK_NE  shift, and go to state 44
    TOK_GT  shift, and go to state 45
    TOK_LT  shift, and go to state 46
    '='     shift, and go to state 47
    '+'     shift, and go to state 48
    '-'     shift, and go to state 49
    '*'     shift, and go to state 50
    '/'     shift, and go to state 51
    '%'     shift, and go to state 52
    ')'     shift, and go to state 124
    '['     shift, and go to state 54

    binop  go to state 55


State 115

   20 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT . '(' ')'
   21      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT . '(' express ')'

    '('  shift, and go to state 125


State 116

   17 alloc: TOK_ALLOC TOK_LT TOK_STRINGCON TOK_GT '(' express ')' .

    $default  reduce using rule 17 (alloc)


State 117

   68 expr: '(' expr ')' .

    $default  reduce using rule 68 (expr)


State 118

   60 expr: expr . '=' expr
   60     | expr '=' expr .
   61     | expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '^' expr

    '='  shift, and go to state 105
    '+'  shift, and go to state 106
    '-'  shift, and go to state 107
    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '^'  shift, and go to state 110

    $default  reduce using rule 60 (expr)


State 119

   60 expr: expr . '=' expr
   61     | expr . '+' expr
   61     | expr '+' expr .
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '^' expr

    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '^'  shift, and go to state 110

    $default  reduce using rule 61 (expr)


State 120

   60 expr: expr . '=' expr
   61     | expr . '+' expr
   62     | expr . '-' expr
   62     | expr '-' expr .
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '^' expr

    '*'  shift, and go to state 108
    '/'  shift, and go to state 109
    '^'  shift, and go to state 110

    $default  reduce using rule 62 (expr)


State 121

   60 expr: expr . '=' expr
   61     | expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   63     | expr '*' expr .
   64     | expr . '/' expr
   65     | expr . '^' expr

    '^'  shift, and go to state 110

    $default  reduce using rule 63 (expr)


State 122

   60 expr: expr . '=' expr
   61     | expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   64     | expr '/' expr .
   65     | expr . '^' expr

    '^'  shift, and go to state 110

    $default  reduce using rule 64 (expr)


State 123

   60 expr: expr . '=' expr
   61     | expr . '+' expr
   62     | expr . '-' expr
   63     | expr . '*' expr
   64     | expr . '/' expr
   65     | expr . '^' expr
   65     | expr '^' expr .

    '^'  shift, and go to state 110

    $default  reduce using rule 65 (expr)


State 124

   18 alloc: TOK_ALLOC TOK_LT TOK_STRUCT TOK_IDENT TOK_GT '(' express ')' .

    $default  reduce using rule 18 (alloc)


State 125

   20 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' . ')'
   21      | TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' . express ')'

    TOK_NULLPTR    shift, and go to state 5
    TOK_ALLOC      shift, and go to state 8
    TOK_CHARCON    shift, and go to state 14
    TOK_STRINGCON  shift, and go to state 15
    TOK_INTCON     shift, and go to state 16
    TOK_IDENT      shift, and go to state 17
    '('            shift, and go to state 19
    ')'            shift, and go to state 126

    callParam  go to state 21
    call       go to state 22
    alloc      go to state 25
    express    go to state 127
    var        go to state 28
    constant   go to state 31


State 126

   20 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' ')' .

    $default  reduce using rule 20 (alloc)


State 127

   21 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express . ')'
   30 express: express . binop express
   49 var: express . '[' express ']'

    TOK_GE  shift, and go to state 41
    TOK_LE  shift, and go to state 42
    TOK_EQ  shift, and go to state 43
    TOK_NE  shift, and go to state 44
    TOK_GT  shift, and go to state 45
    TOK_LT  shift, and go to state 46
    '='     shift, and go to state 47
    '+'     shift, and go to state 48
    '-'     shift, and go to state 49
    '*'     shift, and go to state 50
    '/'     shift, and go to state 51
    '%'     shift, and go to state 52
    ')'     shift, and go to state 128
    '['     shift, and go to state 54

    binop  go to state 55


State 128

   21 alloc: TOK_ALLOC TOK_LT TOK_ARRAY TOK_LT type TOK_GT TOK_GT '(' express ')' .

    $default  reduce using rule 21 (alloc)
